{
    "basePath": "",
    "baseUrl": "https://partners.googleapis.com/",
    "batchPath": "batch",
    "description": "Lets advertisers search certified companies and create contact leads with them, and also audits the usage of clients.",
    "discoveryVersion": "v1",
    "documentationLink": "https://developers.google.com/partners/",
    "etag": "\"C5oy1hgQsABtYOYIOXWcR3BgYqU/IsLtDjyeCcVcrLheR4Lh75k5EO4\"",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "partners:v2",
    "kind": "discovery#restDescription",
    "name": "partners",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "bearer_token": {
            "description": "OAuth bearer token.",
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "pp": {
            "default": "true",
            "description": "Pretty-print response.",
            "location": "query",
            "type": "boolean"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "$.xgafv": {
            "description": "V1 error format.",
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "userEvents": {
            "methods": {
                "log": {
                    "description": "Logs a user event.",
                    "httpMethod": "POST",
                    "id": "partners.userEvents.log",
                    "path": "v2/userEvents:log",
                    "request": {
                        "$ref": "LogUserEventRequest"
                    },
                    "response": {
                        "$ref": "LogUserEventResponse"
                    }
                }
            }
        },
        "clientMessages": {
            "methods": {
                "log": {
                    "description": "Logs a generic message from the client, such as `Failed to render component`, `Profile page is running slow`, `More than 500 users have accessed this result.`, etc.",
                    "httpMethod": "POST",
                    "id": "partners.clientMessages.log",
                    "path": "v2/clientMessages:log",
                    "request": {
                        "$ref": "LogMessageRequest"
                    },
                    "response": {
                        "$ref": "LogMessageResponse"
                    }
                }
            }
        },
        "userStates": {
            "methods": {
                "list": {
                    "description": "Lists states for current user.",
                    "httpMethod": "GET",
                    "id": "partners.userStates.list",
                    "parameters": {
                        "requestMetadata.userOverrides.ipAddress": {
                            "description": "IP address to use instead of the user's geo-located IP address.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.userOverrides.userId": {
                            "description": "Logged-in user ID to impersonate instead of the user's ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.locale": {
                            "description": "Locale to use for the current request.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.partnersSessionId": {
                            "description": "Google Partners session ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.experimentIds": {
                            "description": "Experiment IDs the current request belongs to.",
                            "location": "query",
                            "repeated": true,
                            "type": "string"
                        },
                        "requestMetadata.trafficSource.trafficSourceId": {
                            "description": "Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.trafficSource.trafficSubId": {
                            "description": "Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/userStates",
                    "response": {
                        "$ref": "ListUserStatesResponse"
                    }
                }
            }
        },
        "companies": {
            "methods": {
                "get": {
                    "description": "Gets a company.",
                    "httpMethod": "GET",
                    "id": "partners.companies.get",
                    "parameterOrder": [
                        "companyId"
                    ],
                    "parameters": {
                        "companyId": {
                            "description": "The ID of the company to retrieve.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "requestMetadata.userOverrides.ipAddress": {
                            "description": "IP address to use instead of the user's geo-located IP address.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.userOverrides.userId": {
                            "description": "Logged-in user ID to impersonate instead of the user's ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.locale": {
                            "description": "Locale to use for the current request.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.partnersSessionId": {
                            "description": "Google Partners session ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.experimentIds": {
                            "description": "Experiment IDs the current request belongs to.",
                            "location": "query",
                            "repeated": true,
                            "type": "string"
                        },
                        "requestMetadata.trafficSource.trafficSourceId": {
                            "description": "Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.trafficSource.trafficSubId": {
                            "description": "Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.",
                            "location": "query",
                            "type": "string"
                        },
                        "view": {
                            "description": "The view of `Company` resource to be returned. This must not be `COMPANY_VIEW_UNSPECIFIED`.",
                            "enum": [
                                "COMPANY_VIEW_UNSPECIFIED",
                                "CV_GOOGLE_PARTNER_SEARCH"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "orderBy": {
                            "description": "How to order addresses within the returned company. Currently, only `address` and `address desc` is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively.",
                            "location": "query",
                            "type": "string"
                        },
                        "currencyCode": {
                            "description": "If the company's budget is in a different currency code than this one, then the converted budget is converted to this currency code.",
                            "location": "query",
                            "type": "string"
                        },
                        "address": {
                            "description": "The address to use for sorting the company's addresses by proximity. If not given, the geo-located address of the request is used. Used when order_by is set.",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/companies/{companyId}",
                    "response": {
                        "$ref": "GetCompanyResponse"
                    }
                },
                "list": {
                    "description": "Lists companies.",
                    "httpMethod": "GET",
                    "id": "partners.companies.list",
                    "parameters": {
                        "requestMetadata.userOverrides.ipAddress": {
                            "description": "IP address to use instead of the user's geo-located IP address.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.userOverrides.userId": {
                            "description": "Logged-in user ID to impersonate instead of the user's ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.locale": {
                            "description": "Locale to use for the current request.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.partnersSessionId": {
                            "description": "Google Partners session ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.experimentIds": {
                            "description": "Experiment IDs the current request belongs to.",
                            "location": "query",
                            "repeated": true,
                            "type": "string"
                        },
                        "requestMetadata.trafficSource.trafficSourceId": {
                            "description": "Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.",
                            "location": "query",
                            "type": "string"
                        },
                        "requestMetadata.trafficSource.trafficSubId": {
                            "description": "Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.",
                            "location": "query",
                            "type": "string"
                        },
                        "pageSize": {
                            "description": "Requested page size. Server may return fewer companies than requested. If unspecified, server picks an appropriate default.",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "A token identifying a page of results that the server returns. Typically, this is the value of `ListCompaniesResponse.next_page_token` returned from the previous call to ListCompanies.",
                            "location": "query",
                            "type": "string"
                        },
                        "companyName": {
                            "description": "Company name to search for.",
                            "location": "query",
                            "type": "string"
                        },
                        "view": {
                            "description": "The view of the `Company` resource to be returned. This must not be `COMPANY_VIEW_UNSPECIFIED`.",
                            "enum": [
                                "COMPANY_VIEW_UNSPECIFIED",
                                "CV_GOOGLE_PARTNER_SEARCH"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "minMonthlyBudget.currencyCode": {
                            "description": "The 3-letter currency code defined in ISO 4217.",
                            "location": "query",
                            "type": "string"
                        },
                        "minMonthlyBudget.units": {
                            "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
                            "format": "int64",
                            "location": "query",
                            "type": "string"
                        },
                        "minMonthlyBudget.nanos": {
                            "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "maxMonthlyBudget.currencyCode": {
                            "description": "The 3-letter currency code defined in ISO 4217.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxMonthlyBudget.units": {
                            "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
                            "format": "int64",
                            "location": "query",
                            "type": "string"
                        },
                        "maxMonthlyBudget.nanos": {
                            "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "industries": {
                            "description": "List of industries the company can help with.",
                            "enum": [
                                "INDUSTRY_UNSPECIFIED",
                                "I_AUTOMOTIVE",
                                "I_BUSINESS_TO_BUSINESS",
                                "I_CONSUMER_PACKAGED_GOODS",
                                "I_EDUCATION",
                                "I_FINANCE",
                                "I_HEALTHCARE",
                                "I_MEDIA_AND_ENTERTAINMENT",
                                "I_RETAIL",
                                "I_TECHNOLOGY",
                                "I_TRAVEL"
                            ],
                            "location": "query",
                            "repeated": true,
                            "type": "string"
                        },
                        "services": {
                            "description": "List of services the company can help with.",
                            "enum": [
                                "SERVICE_UNSPECIFIED",
                                "S_ADVANCED_ADWORDS_SUPPORT",
                                "S_ADVERTISING_ON_GOOGLE",
                                "S_AN_ENHANCED_WEBSITE",
                                "S_AN_ONLINE_MARKETING_PLAN",
                                "S_MOBILE_AND_VIDEO_ADS"
                            ],
                            "location": "query",
                            "repeated": true,
                            "type": "string"
                        },
                        "languageCodes": {
                            "description": "List of language codes that company can support. Only primary language subtags are accepted as defined by BCP 47 (IETF BCP 47, \"Tags for Identifying Languages\").",
                            "location": "query",
                            "repeated": true,
                            "type": "string"
                        },
                        "address": {
                            "description": "The address to use when searching for companies. If not given, the geo-located address of the request is used.",
                            "location": "query",
                            "type": "string"
                        },
                        "orderBy": {
                            "description": "How to order addresses within the returned companies. Currently, only `address` and `address desc` is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively.",
                            "location": "query",
                            "type": "string"
                        },
                        "gpsMotivations": {
                            "description": "List of reasons for using Google Partner Search to get companies.",
                            "enum": [
                                "GPS_MOTIVATION_UNSPECIFIED",
                                "GPSM_HELP_WITH_ADVERTISING",
                                "GPSM_HELP_WITH_WEBSITE",
                                "GPSM_NO_WEBSITE"
                            ],
                            "location": "query",
                            "repeated": true,
                            "type": "string"
                        },
                        "websiteUrl": {
                            "description": "Website URL that will help to find a better matched company. .",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/companies",
                    "response": {
                        "$ref": "ListCompaniesResponse"
                    }
                }
            },
            "resources": {
                "leads": {
                    "methods": {
                        "create": {
                            "description": "Creates an advertiser lead for the given company ID.",
                            "httpMethod": "POST",
                            "id": "partners.companies.leads.create",
                            "parameterOrder": [
                                "companyId"
                            ],
                            "parameters": {
                                "companyId": {
                                    "description": "The ID of the company to contact.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/companies/{companyId}/leads",
                            "request": {
                                "$ref": "CreateLeadRequest"
                            },
                            "response": {
                                "$ref": "CreateLeadResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "revision": "20151009",
    "rootUrl": "https://partners.googleapis.com/",
    "schemas": {
        "LogUserEventRequest": {
            "description": "Request message for LogUserEvent.",
            "id": "LogUserEventRequest",
            "properties": {
                "requestMetadata": {
                    "$ref": "RequestMetadata",
                    "description": "Current request metadata."
                },
                "eventAction": {
                    "description": "The action that occurred.",
                    "enum": [
                        "EVENT_ACTION_UNSPECIFIED",
                        "SMB_CLICKED_FIND_A_PARTNER_BUTTON_BOTTOM",
                        "SMB_CLICKED_FIND_A_PARTNER_BUTTON_TOP",
                        "AGENCY_CLICKED_JOIN_NOW_BUTTON_BOTTOM",
                        "AGENCY_CLICKED_JOIN_NOW_BUTTON_TOP",
                        "SMB_CANCELED_PARTNER_CONTACT_FORM",
                        "SMB_CLICKED_CONTACT_A_PARTNER",
                        "SMB_COMPLETED_PARTNER_CONTACT_FORM",
                        "SMB_ENTERED_EMAIL_IN_CONTACT_PARTNER_FORM",
                        "SMB_ENTERED_NAME_IN_CONTACT_PARTNER_FORM",
                        "SMB_ENTERED_PHONE_IN_CONTACT_PARTNER_FORM",
                        "SMB_FAILED_RECAPTCHA_IN_CONTACT_PARTNER_FORM",
                        "PARTNER_VIEWED_BY_SMB",
                        "SMB_CANCELED_PARTNER_CONTACT_FORM_ON_GPS",
                        "SMB_CHANGED_A_SEARCH_PARAMETER_TOP",
                        "SMB_CLICKED_CONTACT_A_PARTNER_ON_GPS",
                        "SMB_CLICKED_SHOW_MORE_PARTNERS_BUTTON_BOTTOM",
                        "SMB_COMPLETED_PARTNER_CONTACT_FORM_ON_GPS",
                        "SMB_NO_PARTNERS_AVAILABLE_WITH_SEARCH_CRITERIA",
                        "SMB_PERFORMED_SEARCH_ON_GPS",
                        "SMB_VIEWED_A_PARTNER_ON_GPS",
                        "SMB_CANCELED_PARTNER_CONTACT_FORM_ON_PROFILE_PAGE",
                        "SMB_CLICKED_CONTACT_A_PARTNER_ON_PROFILE_PAGE",
                        "SMB_CLICKED_PARTNER_WEBSITE",
                        "SMB_COMPLETED_PARTNER_CONTACT_FORM_ON_PROFILE_PAGE",
                        "SMB_VIEWED_A_PARTNER_PROFILE",
                        "AGENCY_CLICKED_ACCEPT_TOS_BUTTON",
                        "AGENCY_CHANGED_TOS_COUNTRY",
                        "AGENCY_ADDED_ADDRESS_IN_MY_PROFILE_PORTAL",
                        "AGENCY_ADDED_PHONE_NUMBER_IN_MY_PROFILE_PORTAL",
                        "AGENCY_CHANGED_PRIMARY_ACCOUNT_ASSOCIATION",
                        "AGENCY_CHANGED_PRIMARY_COUNTRY_ASSOCIATION",
                        "AGENCY_CLICKED_AFFILIATE_BUTTON_IN_MY_PROFILE_IN_PORTAL",
                        "AGENCY_CLICKED_GIVE_EDIT_ACCESS_IN_MY_PROFILE_PORTAL",
                        "AGENCY_CLICKED_LOG_OUT_IN_MY_PROFILE_PORTAL",
                        "AGENCY_CLICKED_MY_PROFILE_LEFT_NAV_IN_PORTAL",
                        "AGENCY_CLICKED_SAVE_AND_CONTINUE_AT_BOT_OF_COMPLETE_PROFILE",
                        "AGENCY_CLICKED_UNAFFILIATE_IN_MY_PROFILE_PORTAL",
                        "AGENCY_FILLED_OUT_COMP_AFFILIATION_IN_MY_PROFILE_PORTAL",
                        "AGENCY_SUCCESSFULLY_CONNECTED_WITH_COMPANY_IN_MY_PROFILE",
                        "AGENCY_CLICKED_CREATE_MCC_IN_MY_PROFILE_PORTAL",
                        "AGENCY_DIDNT_HAVE_AN_MCC_ASSOCIATED_ON_COMPLETE_PROFILE",
                        "AGENCY_HAD_AN_MCC_ASSOCIATED_ON_COMPLETE_PROFILE",
                        "AGENCY_ADDED_JOB_FUNCTION_IN_MY_PROFILE_PORTAL",
                        "AGENCY_LOOKED_AT_JOB_FUNCTION_DROP_DOWN",
                        "AGENCY_SELECTED_ACCOUNT_MANAGER_AS_JOB_FUNCTION",
                        "AGENCY_SELECTED_ACCOUNT_PLANNER_AS_JOB_FUNCTION",
                        "AGENCY_SELECTED_ANALYTICS_AS_JOB_FUNCTION",
                        "AGENCY_SELECTED_CREATIVE_AS_JOB_FUNCTION",
                        "AGENCY_SELECTED_MEDIA_BUYER_AS_JOB_FUNCTION",
                        "AGENCY_SELECTED_MEDIA_PLANNER_AS_JOB_FUNCTION",
                        "AGENCY_SELECTED_OTHER_AS_JOB_FUNCTION",
                        "AGENCY_SELECTED_PRODUCTION_AS_JOB_FUNCTION",
                        "AGENCY_SELECTED_SEO_AS_JOB_FUNCTION",
                        "AGENCY_SELECTED_SALES_REP_AS_JOB_FUNCTION",
                        "AGENCY_SELECTED_SEARCH_SPECIALIST_AS_JOB_FUNCTION",
                        "AGENCY_ADDED_CHANNELS_IN_MY_PROFILE_PORTAL",
                        "AGENCY_LOOKED_AT_ADD_CHANNEL_DROP_DOWN",
                        "AGENCY_SELECTED_CROSS_CHANNEL_FROM_ADD_CHANNEL",
                        "AGENCY_SELECTED_DISPLAY_FROM_ADD_CHANNEL",
                        "AGENCY_SELECTED_MOBILE_FROM_ADD_CHANNEL",
                        "AGENCY_SELECTED_SEARCH_FROM_ADD_CHANNEL",
                        "AGENCY_SELECTED_SOCIAL_FROM_ADD_CHANNEL",
                        "AGENCY_SELECTED_TOOLS_FROM_ADD_CHANNEL",
                        "AGENCY_SELECTED_YOUTUBE_FROM_ADD_CHANNEL",
                        "AGENCY_ADDED_INDUSTRIES_IN_MY_PROFILE_PORTAL",
                        "AGENCY_CHANGED_ADD_INDUSTRIES_DROP_DOWN",
                        "AGENCY_ADDED_MARKETS_IN_MY_PROFILE_PORTAL",
                        "AGENCY_CHANGED_ADD_MARKETS_DROP_DOWN",
                        "AGENCY_CHECKED_RECIEVE_MAIL_PROMOTIONS_MYPROFILE",
                        "AGENCY_CHECKED_RECIEVE_MAIL_PROMOTIONS_SIGNUP",
                        "AGENCY_SELECTED_OPT_IN_BETA_TESTS_AND_MKT_RESEARCH",
                        "AGENCY_SELECTED_OPT_IN_BETA_TESTS_IN_MY_PROFILE_PORTAL",
                        "AGENCY_SELECTED_OPT_IN_NEWS_IN_MY_PROFILE_PORTAL",
                        "AGENCY_SELECTED_OPT_IN_NEWS_INVITATIONS_AND_PROMOS",
                        "AGENCY_SELECTED_OPT_IN_PERFORMANCE_SUG_IN_MY_PROFILE_PORTAL",
                        "AGENCY_SELECTED_OPT_IN_PERFORMANCE_SUGGESTIONS",
                        "AGENCY_SELECTED_OPT_IN_SELECT_ALL_EMAIL_NOTIFICATIONS",
                        "AGENCY_SELECTED_SELECT_ALL_OPT_INS_IN_MY_PROFILE_PORTAL",
                        "AGENCY_CLICKED_BACK_BUTTON_ON_CONNECT_WITH_COMPANY",
                        "AGENCY_CLICKED_CONTINUE_TO_OVERVIEW_ON_CONNECT_WITH_COMPANY",
                        "AGECNY_CLICKED_CREATE_MCC_CONNECT_WITH_COMPANY_NOT_FOUND",
                        "AGECNY_CLICKED_GIVE_EDIT_ACCESS_CONNECT_WITH_COMPANY_NOT_FOUND",
                        "AGECNY_CLICKED_LOG_OUT_CONNECT_WITH_COMPANY_NOT_FOUND",
                        "AGENCY_CLICKED_SKIP_FOR_NOW_ON_CONNECT_WITH_COMPANY_PAGE",
                        "AGENCY_CLOSED_CONNECTED_TO_COMPANY_X_BUTTON_WRONG_COMPANY",
                        "AGENCY_COMPLETED_FIELD_CONNECT_WITH_COMPANY",
                        "AGECNY_FOUND_COMPANY_TO_CONNECT_WITH",
                        "AGENCY_SUCCESSFULLY_CREATED_COMPANY",
                        "AGENCY_ADDED_NEW_COMPANY_LOCATION",
                        "AGENCY_CLICKED_COMMUNITY_JOIN_NOW_LINK_IN_PORTAL_NOTIFICATIONS",
                        "AGENCY_CLICKED_CONNECT_TO_COMPANY_LINK_IN_PORTAL_NOTIFICATIONS",
                        "AGENCY_CLICKED_GET_CERTIFIED_LINK_IN_PORTAL_NOTIFICATIONS",
                        "AGENCY_CLICKED_GET_VIDEO_ADS_CERTIFIED_LINK_IN_PORTAL_NOTIFICATIONS",
                        "AGENCY_CLICKED_LINK_TO_MCC_LINK_IN_PORTAL_NOTIFICATIONS",
                        "AGENCY_CLICKED_INSIGHT_CONTENT_IN_PORTAL",
                        "AGENCY_CLICKED_INSIGHTS_VIEW_NOW_PITCH_DECKS_IN_PORTAL",
                        "AGENCY_CLICKED_INSIGHTS_LEFT_NAV_IN_PORTAL",
                        "AGENCY_CLICKED_INSIGHTS_UPLOAD_CONTENT",
                        "AGENCY_CLICKED_INSIGHTS_VIEWED_DEPRECATED",
                        "AGENCY_CLICKED_COMMUNITY_LEFT_NAV_IN_PORTAL",
                        "AGENCY_CLICKED_JOIN_COMMUNITY_BUTTON_COMMUNITY_PORTAL",
                        "AGENCY_CLICKED_CERTIFICATIONS_LEFT_NAV_IN_PORTAL",
                        "AGENCY_CLICKED_CERTIFICATIONS_PRODUCT_LEFT_NAV_IN_PORTAL",
                        "AGENCY_CLICKED_PARTNER_STATUS_LEFT_NAV_IN_PORTAL",
                        "AGENCY_CLICKED_PARTNER_STATUS_PRODUCT_LEFT_NAV_IN_PORTAL",
                        "AGENCY_CLICKED_OFFERS_LEFT_NAV_IN_PORTAL",
                        "AGENCY_CLICKED_SEND_BUTTON_ON_OFFERS_PAGE",
                        "AGENCY_CLICKED_EXAM_DETAILS_ON_CERT_ADWORDS_PAGE",
                        "AGENCY_CLICKED_SEE_EXAMS_CERTIFICATION_MAIN_PAGE",
                        "AGENCY_CLICKED_TAKE_EXAM_ON_CERT_EXAM_PAGE",
                        "AGENCY_OPENED_LAST_ADMIN_DIALOG",
                        "AGENCY_OPENED_DIALOG_WITH_NO_USERS",
                        "AGENCY_PROMOTED_USER_TO_ADMIN",
                        "AGENCY_UNAFFILIATED",
                        "AGENCY_CHANGED_ROLES",
                        "SMB_CLICKED_COMPANY_NAME_LINK_TO_PROFILE",
                        "SMB_VIEWED_ADWORDS_CERTIFICATE",
                        "SMB_CLICKED_ADWORDS_CERTIFICATE_HELP_ICON",
                        "SMB_VIEWED_ANALYTICS_CERTIFICATE",
                        "SMB_VIEWED_DOUBLECLICK_CERTIFICATE",
                        "SMB_VIEWED_VIDEO_ADS_CERTIFICATE",
                        "SMB_VIEWED_SHOPPING_CERTIFICATE",
                        "SMB_CLICKED_VIDEO_ADS_CERTIFICATE_HELP_ICON",
                        "CLICKED_HELP_AT_BOTTOM",
                        "CLICKED_HELP_AT_TOP",
                        "CLIENT_ERROR",
                        "AGENCY_CLICKED_LEFT_NAV_STORIES",
                        "CLICKED",
                        "SMB_VIEWED_MOBILE_CERTIFICATE",
                        "AGENCY_FAILED_COMPANY_VERIFICATION",
                        "VISITED_LANDING",
                        "VISITED_GPS",
                        "VISITED_AGENCY_PORTAL",
                        "CANCELLED_INDIVIDUAL_SIGN_UP",
                        "CANCELLED_COMPANY_SIGN_UP",
                        "AGENCY_CLICKED_SIGN_IN_BUTTON_TOP",
                        "AGENCY_CLICKED_SAVE_AND_CONTINUE_AT_BOT_OF_INCOMPLETE_PROFILE",
                        "AGENCY_UNSELECTED_OPT_IN_NEWS_INVITATIONS_AND_PROMOS",
                        "AGENCY_UNSELECTED_OPT_IN_BETA_TESTS_AND_MKT_RESEARCH",
                        "AGENCY_UNSELECTED_OPT_IN_PERFORMANCE_SUGGESTIONS",
                        "AGENCY_SELECTED_OPT_OUT_UNSELECT_ALL_EMAIL_NOTIFICATIONS",
                        "AGENCY_LINKED_INDIVIDUAL_MCC",
                        "AGENCY_SUGGESTED_TO_USER",
                        "AGENCY_IGNORED_SUGGESTED_AGENCIES_AND_SEARCHED",
                        "AGENCY_PICKED_SUGGESTED_AGENCY",
                        "AGENCY_SEARCHED_FOR_AGENCIES",
                        "AGENCY_PICKED_SEARCHED_AGENCY",
                        "AGENCY_DISMISSED_AFFILIATION_WIDGET",
                        "AGENCY_CLICKED_INSIGHTS_DOWNLOAD_CONTENT",
                        "AGENCY_PROGRESS_INSIGHTS_VIEW_CONTENT",
                        "AGENCY_CLICKED_CANCEL_ACCEPT_TOS_BUTTON",
                        "SMB_ENTERED_WEBSITE_IN_CONTACT_PARTNER_FORM"
                    ],
                    "type": "string"
                },
                "eventCategory": {
                    "description": "The category the action belongs to.",
                    "enum": [
                        "EVENT_CATEGORY_UNSPECIFIED",
                        "GOOGLE_PARTNER_SEARCH",
                        "GOOGLE_PARTNER_SIGNUP_FLOW",
                        "GOOGLE_PARTNER_PORTAL",
                        "GOOGLE_PARTNER_PORTAL_MY_PROFILE",
                        "GOOGLE_PARTNER_PORTAL_CERTIFICATIONS",
                        "GOOGLE_PARTNER_PORTAL_COMMUNITY",
                        "GOOGLE_PARTNER_PORTAL_INSIGHTS",
                        "GOOGLE_PARTNER_PORTAL_CLIENTS",
                        "GOOGLE_PARTNER_PUBLIC_USER_PROFILE",
                        "GOOGLE_PARTNER_PANEL",
                        "GOOGLE_PARTNER_PORTAL_LAST_ADMIN_DIALOG",
                        "GOOGLE_PARTNER_CLIENT",
                        "GOOGLE_PARTNER_PORTAL_COMPANY_PROFILE",
                        "EXTERNAL_LINKS",
                        "GOOGLE_PARTNER_LANDING"
                    ],
                    "type": "string"
                },
                "eventScope": {
                    "description": "The scope of the event.",
                    "enum": [
                        "EVENT_SCOPE_UNSPECIFIED",
                        "VISITOR",
                        "SESSION",
                        "PAGE"
                    ],
                    "type": "string"
                },
                "eventDatas": {
                    "description": "List of event data for the event.",
                    "items": {
                        "$ref": "EventData"
                    },
                    "type": "array"
                },
                "url": {
                    "description": "The URL where the event occurred.",
                    "type": "string"
                },
                "lead": {
                    "$ref": "Lead",
                    "description": "Advertiser lead information."
                }
            },
            "type": "object"
        },
        "RequestMetadata": {
            "description": "Common data that is in each API request.",
            "id": "RequestMetadata",
            "properties": {
                "userOverrides": {
                    "$ref": "UserOverrides",
                    "description": "Values to use instead of the user's respective defaults for the current request. These are only honored by whitelisted products."
                },
                "locale": {
                    "description": "Locale to use for the current request.",
                    "type": "string"
                },
                "partnersSessionId": {
                    "description": "Google Partners session ID.",
                    "type": "string"
                },
                "experimentIds": {
                    "description": "Experiment IDs the current request belongs to.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "trafficSource": {
                    "$ref": "TrafficSource",
                    "description": "Source of traffic for the current request."
                }
            },
            "type": "object"
        },
        "UserOverrides": {
            "description": "Values to use instead of the user's respective defaults. These are only honored by whitelisted products.",
            "id": "UserOverrides",
            "properties": {
                "ipAddress": {
                    "description": "IP address to use instead of the user's geo-located IP address.",
                    "type": "string"
                },
                "userId": {
                    "description": "Logged-in user ID to impersonate instead of the user's ID.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TrafficSource": {
            "description": "Source of traffic for the current request.",
            "id": "TrafficSource",
            "properties": {
                "trafficSourceId": {
                    "description": "Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.",
                    "type": "string"
                },
                "trafficSubId": {
                    "description": "Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EventData": {
            "description": "Key value data pair for an event.",
            "id": "EventData",
            "properties": {
                "key": {
                    "description": "Data type.",
                    "enum": [
                        "EVENT_DATA_TYPE_UNSPECIFIED",
                        "ACTION",
                        "AGENCY_ID",
                        "AGENCY_NAME",
                        "AGENCY_PHONE_NUMBER",
                        "AGENCY_WEBSITE",
                        "BUDGET",
                        "CENTER_POINT",
                        "CERTIFICATION",
                        "COMMENT",
                        "COUNTRY",
                        "CURRENCY",
                        "CURRENTLY_VIEWED_AGENCY_ID",
                        "DISTANCE",
                        "DISTANCE_TYPE",
                        "EXAM",
                        "HISTORY_TOKEN",
                        "IDENTIFIER",
                        "INDUSTRY",
                        "INSIGHT_TAG",
                        "LANGUAGE",
                        "LOCATION",
                        "MARKETING_OPT_IN",
                        "QUERY",
                        "SEARCH_START_INDEX",
                        "SERVICE",
                        "SHOW_VOW",
                        "SOLUTION",
                        "TRAFFIC_SOURCE_ID",
                        "TRAFFIC_SUB_ID",
                        "VIEW_PORT",
                        "WEBSITE",
                        "DETAILS",
                        "EXPERIMENT_ID",
                        "GPS_MOTIVATION",
                        "URL",
                        "ELEMENT_FOCUS",
                        "PROGRESS"
                    ],
                    "type": "string"
                },
                "values": {
                    "description": "Data values.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Lead": {
            "description": "A lead resource that represents an advertiser contact for a `Company`. These are usually generated via Google Partner Search (the advertiser portal).",
            "id": "Lead",
            "properties": {
                "id": {
                    "description": "ID of the lead.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of lead.",
                    "enum": [
                        "LEAD_TYPE_UNSPECIFIED",
                        "LT_GPS"
                    ],
                    "type": "string"
                },
                "email": {
                    "description": "Email address of lead source.",
                    "type": "string"
                },
                "givenName": {
                    "description": "First name of lead source.",
                    "type": "string"
                },
                "familyName": {
                    "description": "Last name of lead source.",
                    "type": "string"
                },
                "websiteUrl": {
                    "description": "Website URL of lead source.",
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "Phone number of lead source.",
                    "type": "string"
                },
                "comments": {
                    "description": "Comments lead source gave.",
                    "type": "string"
                },
                "gpsMotivations": {
                    "description": "List of reasons for using Google Partner Search and creating a lead.",
                    "enumDescriptions": [
                        "Unchosen.",
                        "Advertiser needs help with their advertising.",
                        "Advertiser needs help with their website.",
                        "Advertiser does not have a website."
                    ],
                    "items": {
                        "enum": [
                            "GPS_MOTIVATION_UNSPECIFIED",
                            "GPSM_HELP_WITH_ADVERTISING",
                            "GPSM_HELP_WITH_WEBSITE",
                            "GPSM_NO_WEBSITE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "minMonthlyBudget": {
                    "$ref": "Money",
                    "description": "The minimum monthly budget lead source is willing to spend."
                }
            },
            "type": "object"
        },
        "Money": {
            "description": "Represents an amount of money with its currency type.",
            "id": "Money",
            "properties": {
                "currencyCode": {
                    "description": "The 3-letter currency code defined in ISO 4217.",
                    "type": "string"
                },
                "units": {
                    "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
                    "format": "int64",
                    "type": "string"
                },
                "nanos": {
                    "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LogUserEventResponse": {
            "description": "Response message for LogUserEvent.",
            "id": "LogUserEventResponse",
            "properties": {
                "responseMetadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Current response metadata."
                }
            },
            "type": "object"
        },
        "ResponseMetadata": {
            "description": "Common data that is in each API response.",
            "id": "ResponseMetadata",
            "properties": {
                "debugInfo": {
                    "$ref": "DebugInfo",
                    "description": "Debug information about this request."
                }
            },
            "type": "object"
        },
        "DebugInfo": {
            "description": "Debug information about this request.",
            "id": "DebugInfo",
            "properties": {
                "serverInfo": {
                    "description": "Info about the server that serviced this request.",
                    "type": "string"
                },
                "serviceUrl": {
                    "description": "URL of the service that handled this request.",
                    "type": "string"
                },
                "serverTraceInfo": {
                    "description": "Server-side debug stack trace.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LogMessageRequest": {
            "description": "Request message for LogClientMessage.",
            "id": "LogMessageRequest",
            "properties": {
                "requestMetadata": {
                    "$ref": "RequestMetadata",
                    "description": "Current request metadata."
                },
                "level": {
                    "description": "Message level of client message.",
                    "enum": [
                        "MESSAGE_LEVEL_UNSPECIFIED",
                        "ML_FINE",
                        "ML_INFO",
                        "ML_WARNING",
                        "ML_SEVERE"
                    ],
                    "type": "string"
                },
                "details": {
                    "description": "Details about the client message.",
                    "type": "string"
                },
                "clientInfo": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of client info, such as URL, browser navigator, browser platform, etc.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "LogMessageResponse": {
            "description": "Response message for LogClientMessage.",
            "id": "LogMessageResponse",
            "properties": {
                "responseMetadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Current response metadata."
                }
            },
            "type": "object"
        },
        "ListUserStatesResponse": {
            "description": "Response message for ListUserStates.",
            "id": "ListUserStatesResponse",
            "properties": {
                "responseMetadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Current response metadata."
                },
                "userStates": {
                    "description": "User's states.",
                    "enumDescriptions": [
                        "Unchosen.",
                        "User must pass reCaptcha to contact a Partner via Google Partner Search."
                    ],
                    "items": {
                        "enum": [
                            "USER_STATE_UNSPECIFIED",
                            "US_REQUIRES_RECAPTCHA_FOR_GPS_CONTACT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetCompanyResponse": {
            "description": "Response message for GetCompany.",
            "id": "GetCompanyResponse",
            "properties": {
                "responseMetadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Current response metadata."
                },
                "company": {
                    "$ref": "Company",
                    "description": "The company."
                }
            },
            "type": "object"
        },
        "Company": {
            "description": "A company resource in the Google Partners API. Once certified, it qualifies for being searched by advertisers.",
            "id": "Company",
            "properties": {
                "id": {
                    "description": "The ID of the company.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the company.",
                    "type": "string"
                },
                "localizedInfos": {
                    "description": "The list of localized info for the company.",
                    "items": {
                        "$ref": "LocalizedCompanyInfo"
                    },
                    "type": "array"
                },
                "locations": {
                    "description": "The list of company locations.",
                    "items": {
                        "$ref": "Location"
                    },
                    "type": "array"
                },
                "convertedMinMonthlyBudget": {
                    "$ref": "Money",
                    "description": "The minimum monthly budget that the company accepts for partner business, converted to the requested currency code."
                },
                "originalMinMonthlyBudget": {
                    "$ref": "Money",
                    "description": "The unconverted minimum monthly budget that the company accepts for partner business."
                },
                "publicProfile": {
                    "$ref": "PublicProfile",
                    "description": "Basic information from the company's public profile."
                },
                "certificationStatuses": {
                    "description": "The list of Google Partners certification statuses for the company.",
                    "items": {
                        "$ref": "CertificationStatus"
                    },
                    "type": "array"
                },
                "ranks": {
                    "description": "Information related to the ranking of the company within the list of companies.",
                    "items": {
                        "$ref": "Rank"
                    },
                    "type": "array"
                },
                "websiteUrl": {
                    "description": "URL of the company's website.",
                    "type": "string"
                },
                "industries": {
                    "description": "Industries the company can help with.",
                    "enumDescriptions": [
                        "Unchosen.",
                        "The automotive industry.",
                        "The business-to-business industry.",
                        "The consumer packaged goods industry.",
                        "The education industry.",
                        "The finance industry.",
                        "The healthcare industry.",
                        "The media and entertainment industry.",
                        "The retail industry.",
                        "The technology industry.",
                        "The travel industry."
                    ],
                    "items": {
                        "enum": [
                            "INDUSTRY_UNSPECIFIED",
                            "I_AUTOMOTIVE",
                            "I_BUSINESS_TO_BUSINESS",
                            "I_CONSUMER_PACKAGED_GOODS",
                            "I_EDUCATION",
                            "I_FINANCE",
                            "I_HEALTHCARE",
                            "I_MEDIA_AND_ENTERTAINMENT",
                            "I_RETAIL",
                            "I_TECHNOLOGY",
                            "I_TRAVEL"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "services": {
                    "description": "Services the company can help with.",
                    "enumDescriptions": [
                        "Unchosen.",
                        "Help with advanced AdWords support.",
                        "Help with advertising on Google.",
                        "Help with an enhanced website.",
                        "Help with an online marketing plan.",
                        "Help with mobile and video ads."
                    ],
                    "items": {
                        "enum": [
                            "SERVICE_UNSPECIFIED",
                            "S_ADVANCED_ADWORDS_SUPPORT",
                            "S_ADVERTISING_ON_GOOGLE",
                            "S_AN_ENHANCED_WEBSITE",
                            "S_AN_ONLINE_MARKETING_PLAN",
                            "S_MOBILE_AND_VIDEO_ADS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LocalizedCompanyInfo": {
            "description": "The localized company information.",
            "id": "LocalizedCompanyInfo",
            "properties": {
                "languageCode": {
                    "description": "Language code of the localized company info, as defined by BCP 47 (IETF BCP 47, \"Tags for Identifying Languages\").",
                    "type": "string"
                },
                "displayName": {
                    "description": "Localized display name.",
                    "type": "string"
                },
                "overview": {
                    "description": "Localized brief description that the company uses to advertise themselves.",
                    "type": "string"
                },
                "countryCodes": {
                    "description": "List of country codes for the localized company info.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Location": {
            "description": "A location with address and geographic coordinates.",
            "id": "Location",
            "properties": {
                "address": {
                    "description": "The complete address of the location.",
                    "type": "string"
                },
                "latLng": {
                    "$ref": "LatLng",
                    "description": "The latitude and longitude of the location, in degrees."
                }
            },
            "type": "object"
        },
        "LatLng": {
            "description": "An object representing a latitude/longitude pair. This is expressed as a pair of doubles representing degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard. Values must be within normalized ranges. Example of normalization code in Python: def NormalizeLongitude(longitude): \"\"\"Wrapsdecimal degrees longitude to [-180.0, 180.0].\"\"\" q, r = divmod(longitude, 360.0) if r > 180.0 or (r == 180.0 and q <= -1.0): return r - 360.0 return r def NormalizeLatLng(latitude, longitude): \"\"\"Wraps decimal degrees latitude and longitude to [-180.0, 180.0] and [-90.0, 90.0], respectively.\"\"\" r = latitude % 360.0 if r = 270.0: return r - 360, NormalizeLongitude(longitude) else: return 180 - r, NormalizeLongitude(longitude + 180.0) assert 180.0 == NormalizeLongitude(180.0) assert -180.0 == NormalizeLongitude(-180.0) assert -179.0 == NormalizeLongitude(181.0) assert (0.0, 0.0) == NormalizeLatLng(360.0, 0.0) assert (0.0, 0.0) == NormalizeLatLng(-360.0, 0.0) assert (85.0, 180.0) == NormalizeLatLng(95.0, 0.0) assert (-85.0, -170.0) == NormalizeLatLng(-95.0, 10.0) assert (90.0, 10.0) == NormalizeLatLng(90.0, 10.0) assert (-90.0, -10.0) == NormalizeLatLng(-90.0, -10.0) assert (0.0, -170.0) == NormalizeLatLng(-180.0, 10.0) assert (0.0, -170.0) == NormalizeLatLng(180.0, 10.0) assert (-90.0, 10.0) == NormalizeLatLng(270.0, 10.0) assert (90.0, 10.0) == NormalizeLatLng(-270.0, 10.0)",
            "id": "LatLng",
            "properties": {
                "latitude": {
                    "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
                    "format": "double",
                    "type": "number"
                },
                "longitude": {
                    "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PublicProfile": {
            "description": "Basic information from a public profile.",
            "id": "PublicProfile",
            "properties": {
                "id": {
                    "description": "The ID which can be used to retrieve more details about the public profile.",
                    "type": "string"
                },
                "displayName": {
                    "description": "The display name of the public profile.",
                    "type": "string"
                },
                "url": {
                    "description": "The URL of the public profile.",
                    "type": "string"
                },
                "displayImageUrl": {
                    "description": "The URL to the main display image of the public profile.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CertificationStatus": {
            "description": "Google Partners certification status.",
            "id": "CertificationStatus",
            "properties": {
                "type": {
                    "description": "The type of the certification.",
                    "enum": [
                        "CERTIFICATION_TYPE_UNSPECIFIED",
                        "CT_ADWORDS",
                        "CT_YOUTUBE",
                        "CT_VIDEOADS",
                        "CT_ANALYTICS",
                        "CT_DOUBLECLICK",
                        "CT_SHOPPING",
                        "CT_MOBILE"
                    ],
                    "type": "string"
                },
                "examStatuses": {
                    "description": "List of certification exam statuses.",
                    "items": {
                        "$ref": "CertificationExamStatus"
                    },
                    "type": "array"
                },
                "isCertified": {
                    "description": "Whether certification is passing.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CertificationExamStatus": {
            "description": "Status for a Google Partners certification exam.",
            "id": "CertificationExamStatus",
            "properties": {
                "type": {
                    "description": "The type of certification exam.",
                    "enum": [
                        "CERTIFICATION_EXAM_TYPE_UNSPECIFIED",
                        "CET_ADWORDS_ADVANCED_SEARCH",
                        "CET_ADWORDS_ADVANCED_DISPLAY",
                        "CET_VIDEO_ADS",
                        "CET_ANALYTICS",
                        "CET_DOUBLECLICK",
                        "CET_SHOPPING",
                        "CET_MOBILE"
                    ],
                    "type": "string"
                },
                "numberUsersPass": {
                    "description": "The number of people who have passed the certification exam.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Rank": {
            "description": "Information related to ranking of results.",
            "id": "Rank",
            "properties": {
                "type": {
                    "description": "The type of rank.",
                    "enum": [
                        "RANK_TYPE_UNSPECIFIED",
                        "RT_FINAL_SCORE"
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "The numerical value of the rank.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ListCompaniesResponse": {
            "description": "Response message for ListCompanies.",
            "id": "ListCompaniesResponse",
            "properties": {
                "responseMetadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Current response metadata."
                },
                "companies": {
                    "description": "The list of companies.",
                    "items": {
                        "$ref": "Company"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "A token to retrieve next page of results. Pass this value in the `ListCompaniesRequest.page_token` field in the subsequent call to ListCompanies to retrieve the next page of results.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateLeadRequest": {
            "description": "Request message for CreateLead.",
            "id": "CreateLeadRequest",
            "properties": {
                "requestMetadata": {
                    "$ref": "RequestMetadata",
                    "description": "Current request metadata."
                },
                "lead": {
                    "$ref": "Lead",
                    "description": "The lead resource. The `LeadType` must not be `LEAD_TYPE_UNSPECIFIED` and either `email` or `phone_number` must be provided."
                },
                "recaptchaChallenge": {
                    "$ref": "RecaptchaChallenge",
                    "description": "reCaptcha challenge info."
                }
            },
            "type": "object"
        },
        "RecaptchaChallenge": {
            "description": "reCaptcha challenge info.",
            "id": "RecaptchaChallenge",
            "properties": {
                "id": {
                    "description": "The ID of the reCaptcha challenge.",
                    "type": "string"
                },
                "response": {
                    "description": "The response to the reCaptcha challenge.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateLeadResponse": {
            "description": "Response message for CreateLead. Debug information about this request.",
            "id": "CreateLeadResponse",
            "properties": {
                "responseMetadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Current response metadata."
                },
                "lead": {
                    "$ref": "Lead",
                    "description": "Lead that was created depending on the outcome of reCaptcha validation."
                },
                "recaptchaStatus": {
                    "description": "The outcome of reCaptcha validation.",
                    "enum": [
                        "RECAPTCHA_STATUS_UNSPECIFIED",
                        "RS_NOT_NEEDED",
                        "RS_PASSED",
                        "RS_FAILED"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Google Partners API",
    "version": "v2"
}