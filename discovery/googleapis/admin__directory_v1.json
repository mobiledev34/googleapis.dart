{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/admin.directory.user.alias": {
                    "description": "View and manage user aliases on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.orgunit": {
                    "description": "View and manage organization units on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.device.mobile": {
                    "description": "View and manage your mobile devices' metadata"
                },
                "https://www.googleapis.com/auth/admin.directory.user": {
                    "description": "View and manage the provisioning of users on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.rolemanagement": {
                    "description": "Manage delegated admin roles for your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.group.member.readonly": {
                    "description": "View group subscriptions on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.user.readonly": {
                    "description": "View users on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.userschema": {
                    "description": "View and manage the provisioning of user schemas on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.domain.readonly": {
                    "description": "View domains related to your customers"
                },
                "https://www.googleapis.com/auth/cloud-platform": {
                    "description": "View and manage your data across Google Cloud Platform services"
                },
                "https://www.googleapis.com/auth/admin.directory.customer.readonly": {
                    "description": "View customer related information"
                },
                "https://www.googleapis.com/auth/admin.directory.userschema.readonly": {
                    "description": "View user schemas on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.device.mobile.readonly": {
                    "description": "View your mobile devices' metadata"
                },
                "https://www.googleapis.com/auth/admin.directory.group.member": {
                    "description": "View and manage group subscriptions on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.orgunit.readonly": {
                    "description": "View organization units on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly": {
                    "description": "View calendar resources on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.device.chromeos": {
                    "description": "View and manage your Chrome OS devices' metadata"
                },
                "https://www.googleapis.com/auth/admin.directory.resource.calendar": {
                    "description": "View and manage the provisioning of calendar resources on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.group": {
                    "description": "View and manage the provisioning of groups on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.customer": {
                    "description": "View and manage customer related information"
                },
                "https://www.googleapis.com/auth/admin.directory.device.mobile.action": {
                    "description": "Manage your mobile devices by performing administrative tasks"
                },
                "https://www.googleapis.com/auth/admin.directory.domain": {
                    "description": "View and manage the provisioning of domains for your customers"
                },
                "https://www.googleapis.com/auth/admin.directory.user.alias.readonly": {
                    "description": "View user aliases on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.user.security": {
                    "description": "Manage data access permissions for users on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly": {
                    "description": "View your Chrome OS devices' metadata"
                },
                "https://www.googleapis.com/auth/admin.directory.group.readonly": {
                    "description": "View groups on your domain"
                },
                "https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly": {
                    "description": "View delegated admin roles for your domain"
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://www.googleapis.com/",
    "batchPath": "batch/admin/directory_v1",
    "canonicalName": "directory",
    "description": "Admin SDK lets administrators of enterprise domains to view and manage resources like user, groups etc. It also provides audit and usage reports of domain.",
    "discoveryVersion": "v1",
    "documentationLink": "http://developers.google.com/admin-sdk/",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "admin:directory_v1",
    "kind": "discovery#restDescription",
    "name": "admin",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "packagePath": "admin",
    "parameters": {
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "domainAliases": {
            "methods": {
                "insert": {
                    "description": "Inserts a domain alias of the customer.",
                    "httpMethod": "POST",
                    "id": "directory.domainAliases.insert",
                    "parameterOrder": [
                        "customer"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/domainaliases",
                    "request": {
                        "$ref": "DomainAlias"
                    },
                    "response": {
                        "$ref": "DomainAlias"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.domain"
                    ]
                },
                "get": {
                    "description": "Retrieves a domain alias of the customer.",
                    "httpMethod": "GET",
                    "id": "directory.domainAliases.get",
                    "parameterOrder": [
                        "customer",
                        "domainAliasName"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "domainAliasName": {
                            "description": "Name of domain alias to be retrieved.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/domainaliases/{domainAliasName}",
                    "response": {
                        "$ref": "DomainAlias"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.domain",
                        "https://www.googleapis.com/auth/admin.directory.domain.readonly"
                    ]
                },
                "delete": {
                    "description": "Deletes a domain Alias of the customer.",
                    "httpMethod": "DELETE",
                    "id": "directory.domainAliases.delete",
                    "parameterOrder": [
                        "customer",
                        "domainAliasName"
                    ],
                    "parameters": {
                        "domainAliasName": {
                            "description": "Name of domain alias to be retrieved.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/domainaliases/{domainAliasName}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.domain"
                    ]
                },
                "list": {
                    "description": "Lists the domain aliases of the customer.",
                    "httpMethod": "GET",
                    "id": "directory.domainAliases.list",
                    "parameterOrder": [
                        "customer"
                    ],
                    "parameters": {
                        "parentDomainName": {
                            "description": "Name of the parent domain for which domain aliases are to be fetched.",
                            "location": "query",
                            "type": "string"
                        },
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/domainaliases",
                    "response": {
                        "$ref": "DomainAliases"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.domain",
                        "https://www.googleapis.com/auth/admin.directory.domain.readonly"
                    ]
                }
            }
        },
        "users": {
            "methods": {
                "undelete": {
                    "description": "Undelete a deleted user",
                    "httpMethod": "POST",
                    "id": "directory.users.undelete",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "The immutable id of the user",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/undelete",
                    "request": {
                        "$ref": "UserUndelete"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user"
                    ]
                },
                "watch": {
                    "description": "Watch for changes in users list",
                    "httpMethod": "POST",
                    "id": "directory.users.watch",
                    "parameterOrder": [],
                    "parameters": {
                        "viewType": {
                            "default": "admin_view",
                            "description": "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.",
                            "enum": [
                                "admin_view",
                                "domain_public"
                            ],
                            "enumDescriptions": [
                                "Fetches the ADMIN_VIEW of the user.",
                                "Fetches the DOMAIN_PUBLIC view of the user."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "query": {
                            "description": "Query string search. Should be of the form \"\". Complete documentation is at https: //developers.google.com/admin-sdk/directory/v1/guides/search-users",
                            "location": "query",
                            "type": "string"
                        },
                        "domain": {
                            "description": "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.\"",
                            "location": "query",
                            "type": "string"
                        },
                        "sortOrder": {
                            "description": "Whether to return results in ascending or descending order.",
                            "enum": [
                                "sortOrderUnspecified",
                                "ASCENDING",
                                "DESCENDING"
                            ],
                            "enumDescriptions": [
                                "",
                                "Ascending order.",
                                "Descending order."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "event": {
                            "description": "Event on which subscription is intended",
                            "enum": [
                                "eventTypeUnspecified",
                                "add",
                                "delete",
                                "makeAdmin",
                                "undelete",
                                "update"
                            ],
                            "enumDescriptions": [
                                "",
                                "User Created Event",
                                "User Deleted Event",
                                "User Admin Status Change Event",
                                "User Undeleted Event",
                                "User Updated Event"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "pageToken": {
                            "description": "Token to specify next page in the list",
                            "location": "query",
                            "type": "string"
                        },
                        "customer": {
                            "description": "Immutable ID of the G Suite account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.",
                            "location": "query",
                            "type": "string"
                        },
                        "orderBy": {
                            "description": "Column to use for sorting results",
                            "enum": [
                                "orderByUnspecified",
                                "email",
                                "familyName",
                                "givenName"
                            ],
                            "enumDescriptions": [
                                "",
                                "Primary email of the user.",
                                "User's family name.",
                                "User's given name."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "100",
                            "description": "Maximum number of results to return.",
                            "format": "int32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "1",
                            "type": "integer"
                        },
                        "customFieldMask": {
                            "description": "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.",
                            "location": "query",
                            "type": "string"
                        },
                        "showDeleted": {
                            "description": "If set to true, retrieves the list of deleted users. (Default: false)",
                            "location": "query",
                            "type": "string"
                        },
                        "projection": {
                            "default": "basic",
                            "description": "What subset of fields to fetch for this user.",
                            "enum": [
                                "projectionUnspecified",
                                "basic",
                                "custom",
                                "full"
                            ],
                            "enumDescriptions": [
                                "",
                                "Do not include any custom fields for the user.",
                                "Include custom fields from schemas mentioned in customFieldMask.",
                                "Include all fields associated with this user."
                            ],
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/watch",
                    "request": {
                        "$ref": "Channel"
                    },
                    "response": {
                        "$ref": "Channel"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user",
                        "https://www.googleapis.com/auth/admin.directory.user.readonly",
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "get": {
                    "description": "retrieve user",
                    "httpMethod": "GET",
                    "id": "directory.users.get",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "viewType": {
                            "default": "admin_view",
                            "description": "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.",
                            "enum": [
                                "view_type_undefined",
                                "admin_view",
                                "domain_public"
                            ],
                            "enumDescriptions": [
                                "",
                                "Fetches the ADMIN_VIEW of the user.",
                                "Fetches the DOMAIN_PUBLIC view of the user."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "customFieldMask": {
                            "description": "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.",
                            "location": "query",
                            "type": "string"
                        },
                        "projection": {
                            "default": "basic",
                            "description": "What subset of fields to fetch for this user.",
                            "enum": [
                                "projectionUndefined",
                                "basic",
                                "custom",
                                "full"
                            ],
                            "enumDescriptions": [
                                "",
                                "Do not include any custom fields for the user.",
                                "Include custom fields from schemas mentioned in customFieldMask.",
                                "Include all fields associated with this user."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "userKey": {
                            "description": "Email or immutable ID of the user",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}",
                    "response": {
                        "$ref": "User"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user",
                        "https://www.googleapis.com/auth/admin.directory.user.readonly"
                    ]
                },
                "insert": {
                    "description": "create user.",
                    "httpMethod": "POST",
                    "id": "directory.users.insert",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "admin/directory/v1/users",
                    "request": {
                        "$ref": "User"
                    },
                    "response": {
                        "$ref": "User"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user"
                    ]
                },
                "makeAdmin": {
                    "description": "change admin status of a user",
                    "httpMethod": "POST",
                    "id": "directory.users.makeAdmin",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Email or immutable ID of the user as admin",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/makeAdmin",
                    "request": {
                        "$ref": "UserMakeAdmin"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user"
                    ]
                },
                "delete": {
                    "description": "Delete user",
                    "httpMethod": "DELETE",
                    "id": "directory.users.delete",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Email or immutable ID of the user",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user"
                    ]
                },
                "patch": {
                    "description": "Patch Users via Apiary Patch Orchestration",
                    "httpMethod": "PATCH",
                    "id": "directory.users.patch",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Email or immutable ID of the user. If ID, it should match with id of user object",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}",
                    "request": {
                        "$ref": "User"
                    },
                    "response": {
                        "$ref": "User"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user"
                    ]
                },
                "update": {
                    "description": "update user",
                    "httpMethod": "PUT",
                    "id": "directory.users.update",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Email or immutable ID of the user. If ID, it should match with id of user object",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}",
                    "request": {
                        "$ref": "User"
                    },
                    "response": {
                        "$ref": "User"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user"
                    ]
                },
                "list": {
                    "description": "Retrieve either deleted users or all users in a domain (paginated)",
                    "httpMethod": "GET",
                    "id": "directory.users.list",
                    "parameterOrder": [],
                    "parameters": {
                        "maxResults": {
                            "default": "100",
                            "description": "Maximum number of results to return.",
                            "format": "int32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "1",
                            "type": "integer"
                        },
                        "domain": {
                            "description": "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.",
                            "location": "query",
                            "type": "string"
                        },
                        "pageToken": {
                            "description": "Token to specify next page in the list",
                            "location": "query",
                            "type": "string"
                        },
                        "sortOrder": {
                            "description": "Whether to return results in ascending or descending order.",
                            "enum": [
                                "SORT_ORDER_UNDEFINED",
                                "ASCENDING",
                                "DESCENDING"
                            ],
                            "enumDescriptions": [
                                "",
                                "Ascending order.",
                                "Descending order."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "viewType": {
                            "default": "admin_view",
                            "description": "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.",
                            "enum": [
                                "view_type_undefined",
                                "admin_view",
                                "domain_public"
                            ],
                            "enumDescriptions": [
                                "",
                                "Fetches the ADMIN_VIEW of the user.",
                                "Fetches the DOMAIN_PUBLIC view of the user."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "orderBy": {
                            "description": "Column to use for sorting results",
                            "enum": [
                                "orderByUndefined",
                                "email",
                                "familyName",
                                "givenName"
                            ],
                            "enumDescriptions": [
                                "",
                                "Primary email of the user.",
                                "User's family name.",
                                "User's given name."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "showDeleted": {
                            "description": "If set to true, retrieves the list of deleted users. (Default: false)",
                            "location": "query",
                            "type": "string"
                        },
                        "query": {
                            "description": "Query string search. Should be of the form \"\". Complete documentation is at https: //developers.google.com/admin-sdk/directory/v1/guides/search-users",
                            "location": "query",
                            "type": "string"
                        },
                        "projection": {
                            "default": "basic",
                            "description": "What subset of fields to fetch for this user.",
                            "enum": [
                                "projectionUndefined",
                                "basic",
                                "custom",
                                "full"
                            ],
                            "enumDescriptions": [
                                "",
                                "Do not include any custom fields for the user.",
                                "Include custom fields from schemas mentioned in customFieldMask.",
                                "Include all fields associated with this user."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "customer": {
                            "description": "Immutable ID of the G Suite account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.",
                            "location": "query",
                            "type": "string"
                        },
                        "customFieldMask": {
                            "description": "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users",
                    "response": {
                        "$ref": "Users"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user",
                        "https://www.googleapis.com/auth/admin.directory.user.readonly",
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "signOut": {
                    "description": "Sign a user out of all web and device sessions and reset their sign-in cookies. User will have to sign in by authenticating again.",
                    "httpMethod": "POST",
                    "id": "directory.users.signOut",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Identifies the target user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/signOut",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                }
            },
            "resources": {
                "aliases": {
                    "methods": {
                        "list": {
                            "description": "List all aliases for a user",
                            "httpMethod": "GET",
                            "id": "directory.users.aliases.list",
                            "parameterOrder": [
                                "userKey"
                            ],
                            "parameters": {
                                "userKey": {
                                    "description": "Email or immutable ID of the user",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/users/{userKey}/aliases",
                            "response": {
                                "$ref": "Aliases"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.user",
                                "https://www.googleapis.com/auth/admin.directory.user.alias",
                                "https://www.googleapis.com/auth/admin.directory.user.alias.readonly",
                                "https://www.googleapis.com/auth/admin.directory.user.readonly"
                            ]
                        },
                        "insert": {
                            "description": "Add a alias for the user",
                            "httpMethod": "POST",
                            "id": "directory.users.aliases.insert",
                            "parameterOrder": [
                                "userKey"
                            ],
                            "parameters": {
                                "userKey": {
                                    "description": "Email or immutable ID of the user",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/users/{userKey}/aliases",
                            "request": {
                                "$ref": "Alias"
                            },
                            "response": {
                                "$ref": "Alias"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.user",
                                "https://www.googleapis.com/auth/admin.directory.user.alias"
                            ]
                        },
                        "delete": {
                            "description": "Remove a alias for the user",
                            "httpMethod": "DELETE",
                            "id": "directory.users.aliases.delete",
                            "parameterOrder": [
                                "userKey",
                                "alias"
                            ],
                            "parameters": {
                                "alias": {
                                    "description": "The alias to be removed",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "userKey": {
                                    "description": "Email or immutable ID of the user",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/users/{userKey}/aliases/{alias}",
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.user",
                                "https://www.googleapis.com/auth/admin.directory.user.alias"
                            ]
                        },
                        "watch": {
                            "description": "Watch for changes in users list",
                            "httpMethod": "POST",
                            "id": "directory.users.aliases.watch",
                            "parameterOrder": [
                                "userKey"
                            ],
                            "parameters": {
                                "userKey": {
                                    "description": "Email or immutable ID of the user",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "event": {
                                    "description": "Event on which subscription is intended (if subscribing)",
                                    "enum": [
                                        "eventUndefined",
                                        "add",
                                        "delete"
                                    ],
                                    "enumDescriptions": [
                                        "",
                                        "Alias Created Event",
                                        "Alias Deleted Event"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/users/{userKey}/aliases/watch",
                            "request": {
                                "$ref": "Channel"
                            },
                            "response": {
                                "$ref": "Channel"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.user",
                                "https://www.googleapis.com/auth/admin.directory.user.alias",
                                "https://www.googleapis.com/auth/admin.directory.user.alias.readonly",
                                "https://www.googleapis.com/auth/admin.directory.user.readonly"
                            ]
                        }
                    }
                },
                "photos": {
                    "methods": {
                        "patch": {
                            "description": "Patch Photo via Apiary Patch Orchestration",
                            "httpMethod": "PATCH",
                            "id": "directory.users.photos.patch",
                            "parameterOrder": [
                                "userKey"
                            ],
                            "parameters": {
                                "userKey": {
                                    "description": "Email or immutable ID of the user",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/users/{userKey}/photos/thumbnail",
                            "request": {
                                "$ref": "UserPhoto"
                            },
                            "response": {
                                "$ref": "UserPhoto"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.user"
                            ]
                        },
                        "update": {
                            "description": "Add a photo for the user",
                            "httpMethod": "PUT",
                            "id": "directory.users.photos.update",
                            "parameterOrder": [
                                "userKey"
                            ],
                            "parameters": {
                                "userKey": {
                                    "description": "Email or immutable ID of the user",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/users/{userKey}/photos/thumbnail",
                            "request": {
                                "$ref": "UserPhoto"
                            },
                            "response": {
                                "$ref": "UserPhoto"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.user"
                            ]
                        },
                        "delete": {
                            "description": "Remove photos for the user",
                            "httpMethod": "DELETE",
                            "id": "directory.users.photos.delete",
                            "parameterOrder": [
                                "userKey"
                            ],
                            "parameters": {
                                "userKey": {
                                    "description": "Email or immutable ID of the user",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/users/{userKey}/photos/thumbnail",
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.user"
                            ]
                        },
                        "get": {
                            "description": "Retrieve photo of a user",
                            "httpMethod": "GET",
                            "id": "directory.users.photos.get",
                            "parameterOrder": [
                                "userKey"
                            ],
                            "parameters": {
                                "userKey": {
                                    "description": "Email or immutable ID of the user",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/users/{userKey}/photos/thumbnail",
                            "response": {
                                "$ref": "UserPhoto"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.user",
                                "https://www.googleapis.com/auth/admin.directory.user.readonly"
                            ]
                        }
                    }
                }
            }
        },
        "orgunits": {
            "methods": {
                "patch": {
                    "description": "Patch organization unit via Apiary Patch Orchestration",
                    "httpMethod": "PATCH",
                    "id": "directory.orgunits.patch",
                    "parameterOrder": [
                        "customerId",
                        "orgUnitPath"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "orgUnitPath": {
                            "description": "Full path of the organizational unit or its ID",
                            "location": "path",
                            "pattern": "^.*$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/orgunits/{+orgUnitPath}",
                    "request": {
                        "$ref": "OrgUnit"
                    },
                    "response": {
                        "$ref": "OrgUnit"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.orgunit"
                    ]
                },
                "insert": {
                    "description": "Add organizational unit",
                    "httpMethod": "POST",
                    "id": "directory.orgunits.insert",
                    "parameterOrder": [
                        "customerId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/orgunits",
                    "request": {
                        "$ref": "OrgUnit"
                    },
                    "response": {
                        "$ref": "OrgUnit"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.orgunit"
                    ]
                },
                "update": {
                    "description": "Update organizational unit",
                    "httpMethod": "PUT",
                    "id": "directory.orgunits.update",
                    "parameterOrder": [
                        "customerId",
                        "orgUnitPath"
                    ],
                    "parameters": {
                        "orgUnitPath": {
                            "description": "Full path of the organizational unit or its ID",
                            "location": "path",
                            "pattern": "^.*$",
                            "required": true,
                            "type": "string"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/orgunits/{+orgUnitPath}",
                    "request": {
                        "$ref": "OrgUnit"
                    },
                    "response": {
                        "$ref": "OrgUnit"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.orgunit"
                    ]
                },
                "delete": {
                    "description": "Remove organizational unit",
                    "httpMethod": "DELETE",
                    "id": "directory.orgunits.delete",
                    "parameterOrder": [
                        "customerId",
                        "orgUnitPath"
                    ],
                    "parameters": {
                        "orgUnitPath": {
                            "description": "Full path of the organizational unit or its ID",
                            "location": "path",
                            "pattern": "^.*$",
                            "required": true,
                            "type": "string"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/orgunits/{+orgUnitPath}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.orgunit"
                    ]
                },
                "list": {
                    "description": "Retrieve all organizational units",
                    "httpMethod": "GET",
                    "id": "directory.orgunits.list",
                    "parameterOrder": [
                        "customerId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "orgUnitPath": {
                            "default": "",
                            "description": "the URL-encoded organizational unit's path or its ID",
                            "location": "query",
                            "type": "string"
                        },
                        "type": {
                            "description": "Whether to return all sub-organizations or just immediate children",
                            "enum": [
                                "typeUndefined",
                                "all",
                                "children"
                            ],
                            "enumDescriptions": [
                                "",
                                "All sub-organizational units.",
                                "Immediate children only (default)."
                            ],
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/orgunits",
                    "response": {
                        "$ref": "OrgUnits"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.orgunit",
                        "https://www.googleapis.com/auth/admin.directory.orgunit.readonly"
                    ]
                },
                "get": {
                    "description": "Retrieve organizational unit",
                    "httpMethod": "GET",
                    "id": "directory.orgunits.get",
                    "parameterOrder": [
                        "customerId",
                        "orgUnitPath"
                    ],
                    "parameters": {
                        "orgUnitPath": {
                            "description": "Full path of the organizational unit or its ID",
                            "location": "path",
                            "pattern": "^.*$",
                            "required": true,
                            "type": "string"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/orgunits/{+orgUnitPath}",
                    "response": {
                        "$ref": "OrgUnit"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.orgunit",
                        "https://www.googleapis.com/auth/admin.directory.orgunit.readonly"
                    ]
                }
            }
        },
        "resources": {
            "resources": {
                "calendars": {
                    "methods": {
                        "get": {
                            "description": "Retrieves a calendar resource.",
                            "httpMethod": "GET",
                            "id": "directory.resources.calendars.get",
                            "parameterOrder": [
                                "customer",
                                "calendarResourceId"
                            ],
                            "parameters": {
                                "calendarResourceId": {
                                    "description": "The unique ID of the calendar resource to retrieve.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/calendars/{calendarResourceId}",
                            "response": {
                                "$ref": "CalendarResource"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar",
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly"
                            ]
                        },
                        "update": {
                            "description": "Updates a calendar resource. This method supports patch semantics, meaning you only need to include the fields you wish to update. Fields that are not present in the request will be preserved.",
                            "httpMethod": "PUT",
                            "id": "directory.resources.calendars.update",
                            "parameterOrder": [
                                "customer",
                                "calendarResourceId"
                            ],
                            "parameters": {
                                "calendarResourceId": {
                                    "description": "The unique ID of the calendar resource to update.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/calendars/{calendarResourceId}",
                            "request": {
                                "$ref": "CalendarResource"
                            },
                            "response": {
                                "$ref": "CalendarResource"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "patch": {
                            "description": "Patches a calendar resource via Apiary Patch Orchestration.",
                            "httpMethod": "PATCH",
                            "id": "directory.resources.calendars.patch",
                            "parameterOrder": [
                                "customer",
                                "calendarResourceId"
                            ],
                            "parameters": {
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "calendarResourceId": {
                                    "description": "The unique ID of the calendar resource to update.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/calendars/{calendarResourceId}",
                            "request": {
                                "$ref": "CalendarResource"
                            },
                            "response": {
                                "$ref": "CalendarResource"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "delete": {
                            "description": "Deletes a calendar resource.",
                            "httpMethod": "DELETE",
                            "id": "directory.resources.calendars.delete",
                            "parameterOrder": [
                                "customer",
                                "calendarResourceId"
                            ],
                            "parameters": {
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "calendarResourceId": {
                                    "description": "The unique ID of the calendar resource to delete.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/calendars/{calendarResourceId}",
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "list": {
                            "description": "Retrieves a list of calendar resources for an account.",
                            "httpMethod": "GET",
                            "id": "directory.resources.calendars.list",
                            "parameterOrder": [
                                "customer"
                            ],
                            "parameters": {
                                "orderBy": {
                                    "description": "Field(s) to sort results by in either ascending or descending order. Supported fields include resourceId, resourceName, capacity, buildingId, and floorName. If no order is specified, defaults to ascending. Should be of the form \"field [asc|desc], field [asc|desc], ...\". For example buildingId, capacity desc would return results sorted first by buildingId in ascending order then by capacity in descending order.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "query": {
                                    "description": "String query used to filter results. Should be of the form \"field operator value\" where field can be any of supported fields and operators can be any of supported operations. Operators include '=' for exact match, '!=' for mismatch and ':' for prefix match or HAS match where applicable. For prefix match, the value should always be followed by a *. Logical operators NOT and AND are supported (in this order of precedence). Supported fields include generatedResourceName, name, buildingId, floor_name, capacity, featureInstances.feature.name. For example buildingId=US-NYC-9TH AND featureInstances.feature.name:Phone.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageToken": {
                                    "description": "Token to specify the next page in the list.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "maxResults": {
                                    "description": "Maximum number of results to return.",
                                    "format": "int32",
                                    "location": "query",
                                    "maximum": "500",
                                    "minimum": "1",
                                    "type": "integer"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/calendars",
                            "response": {
                                "$ref": "CalendarResources"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar",
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly"
                            ]
                        },
                        "insert": {
                            "description": "Inserts a calendar resource.",
                            "httpMethod": "POST",
                            "id": "directory.resources.calendars.insert",
                            "parameterOrder": [
                                "customer"
                            ],
                            "parameters": {
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/calendars",
                            "request": {
                                "$ref": "CalendarResource"
                            },
                            "response": {
                                "$ref": "CalendarResource"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        }
                    }
                },
                "buildings": {
                    "methods": {
                        "update": {
                            "description": "Updates a building.",
                            "httpMethod": "PUT",
                            "id": "directory.resources.buildings.update",
                            "parameterOrder": [
                                "customer",
                                "buildingId"
                            ],
                            "parameters": {
                                "coordinatesSource": {
                                    "default": "SOURCE_UNSPECIFIED",
                                    "description": "Source from which Building.coordinates are derived.",
                                    "enum": [
                                        "COORDINATES_SOURCE_UNDEFINED",
                                        "CLIENT_SPECIFIED",
                                        "RESOLVED_FROM_ADDRESS",
                                        "SOURCE_UNSPECIFIED"
                                    ],
                                    "enumDescriptions": [
                                        "",
                                        "Building.coordinates are set to the coordinates included in the request.",
                                        "Building.coordinates are automatically populated based on the postal address.",
                                        "Defaults to RESOLVED_FROM_ADDRESS if postal address is provided. Otherwise, defaults to CLIENT_SPECIFIED if coordinates are provided."
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "buildingId": {
                                    "description": "The id of the building to update.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/buildings/{buildingId}",
                            "request": {
                                "$ref": "Building"
                            },
                            "response": {
                                "$ref": "Building"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "patch": {
                            "description": "Patches a building via Apiary Patch Orchestration.",
                            "httpMethod": "PATCH",
                            "id": "directory.resources.buildings.patch",
                            "parameterOrder": [
                                "customer",
                                "buildingId"
                            ],
                            "parameters": {
                                "coordinatesSource": {
                                    "default": "SOURCE_UNSPECIFIED",
                                    "description": "Source from which Building.coordinates are derived.",
                                    "enum": [
                                        "COORDINATES_SOURCE_UNDEFINED",
                                        "CLIENT_SPECIFIED",
                                        "RESOLVED_FROM_ADDRESS",
                                        "SOURCE_UNSPECIFIED"
                                    ],
                                    "enumDescriptions": [
                                        "",
                                        "Building.coordinates are set to the coordinates included in the request.",
                                        "Building.coordinates are automatically populated based on the postal address.",
                                        "Defaults to RESOLVED_FROM_ADDRESS if postal address is provided. Otherwise, defaults to CLIENT_SPECIFIED if coordinates are provided."
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "buildingId": {
                                    "description": "The id of the building to update.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/buildings/{buildingId}",
                            "request": {
                                "$ref": "Building"
                            },
                            "response": {
                                "$ref": "Building"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "insert": {
                            "description": "Inserts a building.",
                            "httpMethod": "POST",
                            "id": "directory.resources.buildings.insert",
                            "parameterOrder": [
                                "customer"
                            ],
                            "parameters": {
                                "coordinatesSource": {
                                    "default": "SOURCE_UNSPECIFIED",
                                    "description": "Source from which Building.coordinates are derived.",
                                    "enum": [
                                        "COORDINATES_SOURCE_UNDEFINED",
                                        "CLIENT_SPECIFIED",
                                        "RESOLVED_FROM_ADDRESS",
                                        "SOURCE_UNSPECIFIED"
                                    ],
                                    "enumDescriptions": [
                                        "",
                                        "Building.coordinates are set to the coordinates included in the request.",
                                        "Building.coordinates are automatically populated based on the postal address.",
                                        "Defaults to RESOLVED_FROM_ADDRESS if postal address is provided. Otherwise, defaults to CLIENT_SPECIFIED if coordinates are provided."
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/buildings",
                            "request": {
                                "$ref": "Building"
                            },
                            "response": {
                                "$ref": "Building"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "get": {
                            "description": "Retrieves a building.",
                            "httpMethod": "GET",
                            "id": "directory.resources.buildings.get",
                            "parameterOrder": [
                                "customer",
                                "buildingId"
                            ],
                            "parameters": {
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "buildingId": {
                                    "description": "The unique ID of the building to retrieve.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/buildings/{buildingId}",
                            "response": {
                                "$ref": "Building"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar",
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly"
                            ]
                        },
                        "delete": {
                            "description": "Deletes a building.",
                            "httpMethod": "DELETE",
                            "id": "directory.resources.buildings.delete",
                            "parameterOrder": [
                                "customer",
                                "buildingId"
                            ],
                            "parameters": {
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "buildingId": {
                                    "description": "The id of the building to delete.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/buildings/{buildingId}",
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "list": {
                            "description": "Retrieves a list of buildings for an account.",
                            "httpMethod": "GET",
                            "id": "directory.resources.buildings.list",
                            "parameterOrder": [
                                "customer"
                            ],
                            "parameters": {
                                "maxResults": {
                                    "description": "Maximum number of results to return.",
                                    "format": "int32",
                                    "location": "query",
                                    "maximum": "500",
                                    "minimum": "1",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "Token to specify the next page in the list.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/buildings",
                            "response": {
                                "$ref": "Buildings"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar",
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly"
                            ]
                        }
                    }
                },
                "features": {
                    "methods": {
                        "delete": {
                            "description": "Deletes a feature.",
                            "httpMethod": "DELETE",
                            "id": "directory.resources.features.delete",
                            "parameterOrder": [
                                "customer",
                                "featureKey"
                            ],
                            "parameters": {
                                "featureKey": {
                                    "description": "The unique ID of the feature to delete.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/features/{featureKey}",
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "list": {
                            "description": "Retrieves a list of features for an account.",
                            "httpMethod": "GET",
                            "id": "directory.resources.features.list",
                            "parameterOrder": [
                                "customer"
                            ],
                            "parameters": {
                                "maxResults": {
                                    "description": "Maximum number of results to return.",
                                    "format": "int32",
                                    "location": "query",
                                    "maximum": "500",
                                    "minimum": "1",
                                    "type": "integer"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "pageToken": {
                                    "description": "Token to specify the next page in the list.",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/features",
                            "response": {
                                "$ref": "Features"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar",
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly"
                            ]
                        },
                        "rename": {
                            "description": "Renames a feature.",
                            "httpMethod": "POST",
                            "id": "directory.resources.features.rename",
                            "parameterOrder": [
                                "customer",
                                "oldName"
                            ],
                            "parameters": {
                                "oldName": {
                                    "description": "The unique ID of the feature to rename.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/features/{oldName}/rename",
                            "request": {
                                "$ref": "FeatureRename"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "update": {
                            "description": "Updates a feature.",
                            "httpMethod": "PUT",
                            "id": "directory.resources.features.update",
                            "parameterOrder": [
                                "customer",
                                "featureKey"
                            ],
                            "parameters": {
                                "featureKey": {
                                    "description": "The unique ID of the feature to update.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/features/{featureKey}",
                            "request": {
                                "$ref": "Feature"
                            },
                            "response": {
                                "$ref": "Feature"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "insert": {
                            "description": "Inserts a feature.",
                            "httpMethod": "POST",
                            "id": "directory.resources.features.insert",
                            "parameterOrder": [
                                "customer"
                            ],
                            "parameters": {
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/features",
                            "request": {
                                "$ref": "Feature"
                            },
                            "response": {
                                "$ref": "Feature"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "patch": {
                            "description": "Patches a feature via Apiary Patch Orchestration.",
                            "httpMethod": "PATCH",
                            "id": "directory.resources.features.patch",
                            "parameterOrder": [
                                "customer",
                                "featureKey"
                            ],
                            "parameters": {
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "featureKey": {
                                    "description": "The unique ID of the feature to update.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/features/{featureKey}",
                            "request": {
                                "$ref": "Feature"
                            },
                            "response": {
                                "$ref": "Feature"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar"
                            ]
                        },
                        "get": {
                            "description": "Retrieves a feature.",
                            "httpMethod": "GET",
                            "id": "directory.resources.features.get",
                            "parameterOrder": [
                                "customer",
                                "featureKey"
                            ],
                            "parameters": {
                                "customer": {
                                    "description": "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "featureKey": {
                                    "description": "The unique ID of the feature to retrieve.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/customer/{customer}/resources/features/{featureKey}",
                            "response": {
                                "$ref": "Feature"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar",
                                "https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly"
                            ]
                        }
                    }
                }
            }
        },
        "twoStepVerification": {
            "methods": {
                "turnOff": {
                    "description": "Turn off 2-Step Verification for user.",
                    "httpMethod": "POST",
                    "id": "directory.twoStepVerification.turnOff",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/twoStepVerification/turnOff",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                }
            }
        },
        "tokens": {
            "methods": {
                "get": {
                    "description": "Get information about an access token issued by a user.",
                    "httpMethod": "GET",
                    "id": "directory.tokens.get",
                    "parameterOrder": [
                        "userKey",
                        "clientId"
                    ],
                    "parameters": {
                        "clientId": {
                            "description": "The Client ID of the application the token is issued to.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "userKey": {
                            "description": "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/tokens/{clientId}",
                    "response": {
                        "$ref": "Token"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                },
                "list": {
                    "description": "Returns the set of tokens specified user has issued to 3rd party applications.",
                    "httpMethod": "GET",
                    "id": "directory.tokens.list",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/tokens",
                    "response": {
                        "$ref": "Tokens"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                },
                "delete": {
                    "description": "Delete all access tokens issued by a user for an application.",
                    "httpMethod": "DELETE",
                    "id": "directory.tokens.delete",
                    "parameterOrder": [
                        "userKey",
                        "clientId"
                    ],
                    "parameters": {
                        "clientId": {
                            "description": "The Client ID of the application the token is issued to.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "userKey": {
                            "description": "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/tokens/{clientId}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                }
            }
        },
        "customers": {
            "methods": {
                "patch": {
                    "description": "Patch Customers via Apiary Patch Orchestration",
                    "httpMethod": "PATCH",
                    "id": "directory.customers.patch",
                    "parameterOrder": [
                        "customerKey"
                    ],
                    "parameters": {
                        "customerKey": {
                            "description": "Id of the customer to be updated",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customers/{customerKey}",
                    "request": {
                        "$ref": "Customer"
                    },
                    "response": {
                        "$ref": "Customer"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.customer"
                    ]
                },
                "get": {
                    "description": "Retrieves a customer.",
                    "httpMethod": "GET",
                    "id": "directory.customers.get",
                    "parameterOrder": [
                        "customerKey"
                    ],
                    "parameters": {
                        "customerKey": {
                            "description": "Id of the customer to be retrieved",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customers/{customerKey}",
                    "response": {
                        "$ref": "Customer"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.customer",
                        "https://www.googleapis.com/auth/admin.directory.customer.readonly"
                    ]
                },
                "update": {
                    "description": "Updates a customer.",
                    "httpMethod": "PUT",
                    "id": "directory.customers.update",
                    "parameterOrder": [
                        "customerKey"
                    ],
                    "parameters": {
                        "customerKey": {
                            "description": "Id of the customer to be updated",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customers/{customerKey}",
                    "request": {
                        "$ref": "Customer"
                    },
                    "response": {
                        "$ref": "Customer"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.customer"
                    ]
                }
            }
        },
        "domains": {
            "methods": {
                "list": {
                    "description": "Lists the domains of the customer.",
                    "httpMethod": "GET",
                    "id": "directory.domains.list",
                    "parameterOrder": [
                        "customer"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/domains",
                    "response": {
                        "$ref": "Domains2"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.domain",
                        "https://www.googleapis.com/auth/admin.directory.domain.readonly"
                    ]
                },
                "delete": {
                    "description": "Deletes a domain of the customer.",
                    "httpMethod": "DELETE",
                    "id": "directory.domains.delete",
                    "parameterOrder": [
                        "customer",
                        "domainName"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "domainName": {
                            "description": "Name of domain to be deleted",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/domains/{domainName}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.domain"
                    ]
                },
                "insert": {
                    "description": "Inserts a domain of the customer.",
                    "httpMethod": "POST",
                    "id": "directory.domains.insert",
                    "parameterOrder": [
                        "customer"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/domains",
                    "request": {
                        "$ref": "Domains"
                    },
                    "response": {
                        "$ref": "Domains"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.domain"
                    ]
                },
                "get": {
                    "description": "Retrieves a domain of the customer.",
                    "httpMethod": "GET",
                    "id": "directory.domains.get",
                    "parameterOrder": [
                        "customer",
                        "domainName"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "domainName": {
                            "description": "Name of domain to be retrieved",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/domains/{domainName}",
                    "response": {
                        "$ref": "Domains"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.domain",
                        "https://www.googleapis.com/auth/admin.directory.domain.readonly"
                    ]
                }
            }
        },
        "mobiledevices": {
            "methods": {
                "delete": {
                    "description": "Delete Mobile Device",
                    "httpMethod": "DELETE",
                    "id": "directory.mobiledevices.delete",
                    "parameterOrder": [
                        "customerId",
                        "resourceId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "resourceId": {
                            "description": "Immutable ID of Mobile Device",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/devices/mobile/{resourceId}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.device.mobile"
                    ]
                },
                "get": {
                    "description": "Retrieve Mobile Device",
                    "httpMethod": "GET",
                    "id": "directory.mobiledevices.get",
                    "parameterOrder": [
                        "customerId",
                        "resourceId"
                    ],
                    "parameters": {
                        "resourceId": {
                            "description": "Immutable ID of Mobile Device",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "projection": {
                            "description": "Restrict information returned to a set of selected fields.",
                            "enum": [
                                "PROJECTION_UNDEFINED",
                                "BASIC",
                                "FULL"
                            ],
                            "enumDescriptions": [
                                "",
                                "Includes only the basic metadata fields (e.g., deviceId, model, status, type, and status)",
                                "Includes all metadata fields"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/devices/mobile/{resourceId}",
                    "response": {
                        "$ref": "MobileDevice"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.device.mobile",
                        "https://www.googleapis.com/auth/admin.directory.device.mobile.action",
                        "https://www.googleapis.com/auth/admin.directory.device.mobile.readonly"
                    ]
                },
                "list": {
                    "description": "Retrieve all Mobile Devices of a customer (paginated)",
                    "httpMethod": "GET",
                    "id": "directory.mobiledevices.list",
                    "parameterOrder": [
                        "customerId"
                    ],
                    "parameters": {
                        "projection": {
                            "description": "Restrict information returned to a set of selected fields.",
                            "enum": [
                                "PROJECTION_UNDEFINED",
                                "BASIC",
                                "FULL"
                            ],
                            "enumDescriptions": [
                                "",
                                "Includes only the basic metadata fields (e.g., deviceId, model, status, type, and status)",
                                "Includes all metadata fields"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "pageToken": {
                            "description": "Token to specify next page in the list",
                            "location": "query",
                            "type": "string"
                        },
                        "query": {
                            "description": "Search string in the format given at http://support.google.com/a/bin/answer.py?answer=1408863#search",
                            "location": "query",
                            "type": "string"
                        },
                        "orderBy": {
                            "description": "Column to use for sorting results",
                            "enum": [
                                "orderByUndefined",
                                "deviceId",
                                "email",
                                "lastSync",
                                "model",
                                "name",
                                "os",
                                "status",
                                "type"
                            ],
                            "enumDescriptions": [
                                "",
                                "Mobile Device serial number.",
                                "Owner user email.",
                                "Last policy settings sync date time of the device.",
                                "Mobile Device model.",
                                "Owner user name.",
                                "Mobile operating system.",
                                "Status of the device.",
                                "Type of the device."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "sortOrder": {
                            "description": "Whether to return results in ascending or descending order. Only of use when orderBy is also used",
                            "enum": [
                                "SORT_ORDER_UNDEFINED",
                                "ASCENDING",
                                "DESCENDING"
                            ],
                            "enumDescriptions": [
                                "",
                                "Ascending order.",
                                "Descending order."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "100",
                            "description": "Maximum number of results to return. Max allowed value is 100.",
                            "format": "int32",
                            "location": "query",
                            "maximum": "100",
                            "minimum": "1",
                            "type": "integer"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/devices/mobile",
                    "response": {
                        "$ref": "MobileDevices"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.device.mobile",
                        "https://www.googleapis.com/auth/admin.directory.device.mobile.action",
                        "https://www.googleapis.com/auth/admin.directory.device.mobile.readonly"
                    ]
                },
                "action": {
                    "description": "Take action on Mobile Device",
                    "httpMethod": "POST",
                    "id": "directory.mobiledevices.action",
                    "parameterOrder": [
                        "customerId",
                        "resourceId"
                    ],
                    "parameters": {
                        "resourceId": {
                            "description": "Immutable ID of Mobile Device",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/devices/mobile/{resourceId}/action",
                    "request": {
                        "$ref": "MobileDeviceAction"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.device.mobile",
                        "https://www.googleapis.com/auth/admin.directory.device.mobile.action"
                    ]
                }
            }
        },
        "asps": {
            "methods": {
                "list": {
                    "description": "List the ASPs issued by a user.",
                    "httpMethod": "GET",
                    "id": "directory.asps.list",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/asps",
                    "response": {
                        "$ref": "Asps"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                },
                "get": {
                    "description": "Get information about an ASP issued by a user.",
                    "httpMethod": "GET",
                    "id": "directory.asps.get",
                    "parameterOrder": [
                        "userKey",
                        "codeId"
                    ],
                    "parameters": {
                        "codeId": {
                            "description": "The unique ID of the ASP.",
                            "format": "int32",
                            "location": "path",
                            "required": true,
                            "type": "integer"
                        },
                        "userKey": {
                            "description": "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/asps/{codeId}",
                    "response": {
                        "$ref": "Asp"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                },
                "delete": {
                    "description": "Delete an ASP issued by a user.",
                    "httpMethod": "DELETE",
                    "id": "directory.asps.delete",
                    "parameterOrder": [
                        "userKey",
                        "codeId"
                    ],
                    "parameters": {
                        "codeId": {
                            "description": "The unique ID of the ASP to be deleted.",
                            "format": "int32",
                            "location": "path",
                            "required": true,
                            "type": "integer"
                        },
                        "userKey": {
                            "description": "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/asps/{codeId}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                }
            }
        },
        "schemas": {
            "methods": {
                "get": {
                    "description": "Retrieve schema",
                    "httpMethod": "GET",
                    "id": "directory.schemas.get",
                    "parameterOrder": [
                        "customerId",
                        "schemaKey"
                    ],
                    "parameters": {
                        "schemaKey": {
                            "description": "Name or immutable ID of the schema",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/schemas/{schemaKey}",
                    "response": {
                        "$ref": "Schema"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.userschema",
                        "https://www.googleapis.com/auth/admin.directory.userschema.readonly"
                    ]
                },
                "update": {
                    "description": "Update schema",
                    "httpMethod": "PUT",
                    "id": "directory.schemas.update",
                    "parameterOrder": [
                        "customerId",
                        "schemaKey"
                    ],
                    "parameters": {
                        "schemaKey": {
                            "description": "Name or immutable ID of the schema.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/schemas/{schemaKey}",
                    "request": {
                        "$ref": "Schema"
                    },
                    "response": {
                        "$ref": "Schema"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.userschema"
                    ]
                },
                "insert": {
                    "description": "Create schema.",
                    "httpMethod": "POST",
                    "id": "directory.schemas.insert",
                    "parameterOrder": [
                        "customerId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/schemas",
                    "request": {
                        "$ref": "Schema"
                    },
                    "response": {
                        "$ref": "Schema"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.userschema"
                    ]
                },
                "list": {
                    "description": "Retrieve all schemas for a customer",
                    "httpMethod": "GET",
                    "id": "directory.schemas.list",
                    "parameterOrder": [
                        "customerId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/schemas",
                    "response": {
                        "$ref": "Schemas"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.userschema",
                        "https://www.googleapis.com/auth/admin.directory.userschema.readonly"
                    ]
                },
                "patch": {
                    "description": "Patch Schema via Apiary Patch Orchestration",
                    "httpMethod": "PATCH",
                    "id": "directory.schemas.patch",
                    "parameterOrder": [
                        "customerId",
                        "schemaKey"
                    ],
                    "parameters": {
                        "schemaKey": {
                            "description": "Name or immutable ID of the schema.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/schemas/{schemaKey}",
                    "request": {
                        "$ref": "Schema"
                    },
                    "response": {
                        "$ref": "Schema"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.userschema"
                    ]
                },
                "delete": {
                    "description": "Delete schema",
                    "httpMethod": "DELETE",
                    "id": "directory.schemas.delete",
                    "parameterOrder": [
                        "customerId",
                        "schemaKey"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "schemaKey": {
                            "description": "Name or immutable ID of the schema",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/schemas/{schemaKey}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.userschema"
                    ]
                }
            }
        },
        "members": {
            "methods": {
                "insert": {
                    "description": "Add user to the specified group.",
                    "httpMethod": "POST",
                    "id": "directory.members.insert",
                    "parameterOrder": [
                        "groupKey"
                    ],
                    "parameters": {
                        "groupKey": {
                            "description": "Email or immutable ID of the group",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}/members",
                    "request": {
                        "$ref": "Member"
                    },
                    "response": {
                        "$ref": "Member"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group",
                        "https://www.googleapis.com/auth/admin.directory.group.member"
                    ]
                },
                "hasMember": {
                    "description": "Checks whether the given user is a member of the group. Membership can be direct or nested.",
                    "httpMethod": "GET",
                    "id": "directory.members.hasMember",
                    "parameterOrder": [
                        "groupKey",
                        "memberKey"
                    ],
                    "parameters": {
                        "memberKey": {
                            "description": "Identifies the user member in the API request. The value can be the user's primary email address, alias, or unique ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "groupKey": {
                            "description": "Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}/hasMember/{memberKey}",
                    "response": {
                        "$ref": "MembersHasMember"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group",
                        "https://www.googleapis.com/auth/admin.directory.group.member",
                        "https://www.googleapis.com/auth/admin.directory.group.member.readonly",
                        "https://www.googleapis.com/auth/admin.directory.group.readonly"
                    ]
                },
                "delete": {
                    "description": "Remove membership.",
                    "httpMethod": "DELETE",
                    "id": "directory.members.delete",
                    "parameterOrder": [
                        "groupKey",
                        "memberKey"
                    ],
                    "parameters": {
                        "groupKey": {
                            "description": "Email or immutable ID of the group",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "memberKey": {
                            "description": "Email or immutable ID of the member",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}/members/{memberKey}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group",
                        "https://www.googleapis.com/auth/admin.directory.group.member"
                    ]
                },
                "update": {
                    "description": "Update membership of a user in the specified group.",
                    "httpMethod": "PUT",
                    "id": "directory.members.update",
                    "parameterOrder": [
                        "groupKey",
                        "memberKey"
                    ],
                    "parameters": {
                        "groupKey": {
                            "description": "Email or immutable ID of the group. If ID, it should match with id of group object",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "memberKey": {
                            "description": "Email or immutable ID of the user. If ID, it should match with id of member object",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}/members/{memberKey}",
                    "request": {
                        "$ref": "Member"
                    },
                    "response": {
                        "$ref": "Member"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group",
                        "https://www.googleapis.com/auth/admin.directory.group.member"
                    ]
                },
                "list": {
                    "description": "Retrieve all members in a group (paginated)",
                    "httpMethod": "GET",
                    "id": "directory.members.list",
                    "parameterOrder": [
                        "groupKey"
                    ],
                    "parameters": {
                        "maxResults": {
                            "default": "200",
                            "description": "Maximum number of results to return. Max allowed value is 200.",
                            "format": "int32",
                            "location": "query",
                            "minimum": "1",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Token to specify next page in the list",
                            "location": "query",
                            "type": "string"
                        },
                        "groupKey": {
                            "description": "Email or immutable ID of the group",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "includeDerivedMembership": {
                            "description": "Whether to list indirect memberships. Default: false.",
                            "location": "query",
                            "type": "boolean"
                        },
                        "roles": {
                            "description": "Comma separated role values to filter list results on.",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}/members",
                    "response": {
                        "$ref": "Members"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group",
                        "https://www.googleapis.com/auth/admin.directory.group.member",
                        "https://www.googleapis.com/auth/admin.directory.group.member.readonly",
                        "https://www.googleapis.com/auth/admin.directory.group.readonly"
                    ]
                },
                "get": {
                    "description": "Retrieve Group Member",
                    "httpMethod": "GET",
                    "id": "directory.members.get",
                    "parameterOrder": [
                        "groupKey",
                        "memberKey"
                    ],
                    "parameters": {
                        "memberKey": {
                            "description": "Email or immutable ID of the member",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "groupKey": {
                            "description": "Email or immutable ID of the group",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}/members/{memberKey}",
                    "response": {
                        "$ref": "Member"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group",
                        "https://www.googleapis.com/auth/admin.directory.group.member",
                        "https://www.googleapis.com/auth/admin.directory.group.member.readonly",
                        "https://www.googleapis.com/auth/admin.directory.group.readonly"
                    ]
                },
                "patch": {
                    "description": "Patch Member via Apiary Patch Orchestration",
                    "httpMethod": "PATCH",
                    "id": "directory.members.patch",
                    "parameterOrder": [
                        "groupKey",
                        "memberKey"
                    ],
                    "parameters": {
                        "groupKey": {
                            "description": "Email or immutable ID of the group. If ID, it should match with id of group object",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "memberKey": {
                            "description": "Email or immutable ID of the user. If ID, it should match with id of member object",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}/members/{memberKey}",
                    "request": {
                        "$ref": "Member"
                    },
                    "response": {
                        "$ref": "Member"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group",
                        "https://www.googleapis.com/auth/admin.directory.group.member"
                    ]
                }
            }
        },
        "roleAssignments": {
            "methods": {
                "get": {
                    "description": "Retrieve a role assignment.",
                    "httpMethod": "GET",
                    "id": "directory.roleAssignments.get",
                    "parameterOrder": [
                        "customer",
                        "roleAssignmentId"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "roleAssignmentId": {
                            "description": "Immutable ID of the role assignment.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roleassignments/{roleAssignmentId}",
                    "response": {
                        "$ref": "RoleAssignment"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement",
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly"
                    ]
                },
                "list": {
                    "description": "Retrieves a paginated list of all roleAssignments.",
                    "httpMethod": "GET",
                    "id": "directory.roleAssignments.list",
                    "parameterOrder": [
                        "customer"
                    ],
                    "parameters": {
                        "maxResults": {
                            "description": "Maximum number of results to return.",
                            "format": "int32",
                            "location": "query",
                            "maximum": "200",
                            "minimum": "1",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Token to specify the next page in the list.",
                            "location": "query",
                            "type": "string"
                        },
                        "roleId": {
                            "description": "Immutable ID of a role. If included in the request, returns only role assignments containing this role ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "userKey": {
                            "description": "The user's primary email address, alias email address, or unique user ID. If included in the request, returns role assignments only for this user.",
                            "location": "query",
                            "type": "string"
                        },
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roleassignments",
                    "response": {
                        "$ref": "RoleAssignments"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement",
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly"
                    ]
                },
                "delete": {
                    "description": "Deletes a role assignment.",
                    "httpMethod": "DELETE",
                    "id": "directory.roleAssignments.delete",
                    "parameterOrder": [
                        "customer",
                        "roleAssignmentId"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "roleAssignmentId": {
                            "description": "Immutable ID of the role assignment.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roleassignments/{roleAssignmentId}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement"
                    ]
                },
                "insert": {
                    "description": "Creates a role assignment.",
                    "httpMethod": "POST",
                    "id": "directory.roleAssignments.insert",
                    "parameterOrder": [
                        "customer"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roleassignments",
                    "request": {
                        "$ref": "RoleAssignment"
                    },
                    "response": {
                        "$ref": "RoleAssignment"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement"
                    ]
                }
            }
        },
        "verificationCodes": {
            "methods": {
                "list": {
                    "description": "Returns the current set of valid backup verification codes for the specified user.",
                    "httpMethod": "GET",
                    "id": "directory.verificationCodes.list",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/verificationCodes",
                    "response": {
                        "$ref": "VerificationCodes"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                },
                "invalidate": {
                    "description": "Invalidate the current backup verification codes for the user.",
                    "httpMethod": "POST",
                    "id": "directory.verificationCodes.invalidate",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Email or immutable ID of the user",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/verificationCodes/invalidate",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                },
                "generate": {
                    "description": "Generate new backup verification codes for the user.",
                    "httpMethod": "POST",
                    "id": "directory.verificationCodes.generate",
                    "parameterOrder": [
                        "userKey"
                    ],
                    "parameters": {
                        "userKey": {
                            "description": "Email or immutable ID of the user",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/users/{userKey}/verificationCodes/generate",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user.security"
                    ]
                }
            }
        },
        "privileges": {
            "methods": {
                "list": {
                    "description": "Retrieves a paginated list of all privileges for a customer.",
                    "httpMethod": "GET",
                    "id": "directory.privileges.list",
                    "parameterOrder": [
                        "customer"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roles/ALL/privileges",
                    "response": {
                        "$ref": "Privileges"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement",
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly"
                    ]
                }
            }
        },
        "roles": {
            "methods": {
                "delete": {
                    "description": "Deletes a role.",
                    "httpMethod": "DELETE",
                    "id": "directory.roles.delete",
                    "parameterOrder": [
                        "customer",
                        "roleId"
                    ],
                    "parameters": {
                        "roleId": {
                            "description": "Immutable ID of the role.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roles/{roleId}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement"
                    ]
                },
                "insert": {
                    "description": "Creates a role.",
                    "httpMethod": "POST",
                    "id": "directory.roles.insert",
                    "parameterOrder": [
                        "customer"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roles",
                    "request": {
                        "$ref": "Role"
                    },
                    "response": {
                        "$ref": "Role"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement"
                    ]
                },
                "patch": {
                    "description": "Patch role via Apiary Patch Orchestration",
                    "httpMethod": "PATCH",
                    "id": "directory.roles.patch",
                    "parameterOrder": [
                        "customer",
                        "roleId"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "roleId": {
                            "description": "Immutable ID of the role.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roles/{roleId}",
                    "request": {
                        "$ref": "Role"
                    },
                    "response": {
                        "$ref": "Role"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement"
                    ]
                },
                "list": {
                    "description": "Retrieves a paginated list of all the roles in a domain.",
                    "httpMethod": "GET",
                    "id": "directory.roles.list",
                    "parameterOrder": [
                        "customer"
                    ],
                    "parameters": {
                        "maxResults": {
                            "description": "Maximum number of results to return.",
                            "format": "int32",
                            "location": "query",
                            "maximum": "100",
                            "minimum": "1",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Token to specify the next page in the list.",
                            "location": "query",
                            "type": "string"
                        },
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roles",
                    "response": {
                        "$ref": "Roles"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement",
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly"
                    ]
                },
                "get": {
                    "description": "Retrieves a role.",
                    "httpMethod": "GET",
                    "id": "directory.roles.get",
                    "parameterOrder": [
                        "customer",
                        "roleId"
                    ],
                    "parameters": {
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "roleId": {
                            "description": "Immutable ID of the role.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roles/{roleId}",
                    "response": {
                        "$ref": "Role"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement",
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly"
                    ]
                },
                "update": {
                    "description": "Updates a role.",
                    "httpMethod": "PUT",
                    "id": "directory.roles.update",
                    "parameterOrder": [
                        "customer",
                        "roleId"
                    ],
                    "parameters": {
                        "roleId": {
                            "description": "Immutable ID of the role.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "customer": {
                            "description": "Immutable ID of the G Suite account.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customer}/roles/{roleId}",
                    "request": {
                        "$ref": "Role"
                    },
                    "response": {
                        "$ref": "Role"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.rolemanagement"
                    ]
                }
            }
        },
        "groups": {
            "methods": {
                "list": {
                    "description": "Retrieve all groups of a domain or of a user given a userKey (paginated)",
                    "httpMethod": "GET",
                    "id": "directory.groups.list",
                    "parameterOrder": [],
                    "parameters": {
                        "orderBy": {
                            "description": "Column to use for sorting results",
                            "enum": [
                                "orderByUndefined",
                                "email"
                            ],
                            "enumDescriptions": [
                                "",
                                "Email of the group."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "pageToken": {
                            "description": "Token to specify next page in the list",
                            "location": "query",
                            "type": "string"
                        },
                        "sortOrder": {
                            "description": "Whether to return results in ascending or descending order. Only of use when orderBy is also used",
                            "enum": [
                                "SORT_ORDER_UNDEFINED",
                                "ASCENDING",
                                "DESCENDING"
                            ],
                            "enumDescriptions": [
                                "",
                                "Ascending order.",
                                "Descending order."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "customer": {
                            "description": "Immutable ID of the G Suite account. In case of multi-domain, to fetch all groups for a customer, fill this field instead of domain.",
                            "location": "query",
                            "type": "string"
                        },
                        "query": {
                            "description": "Query string search. Should be of the form \"\". Complete documentation is at https: //developers.google.com/admin-sdk/directory/v1/guides/search-groups",
                            "location": "query",
                            "type": "string"
                        },
                        "domain": {
                            "description": "Name of the domain. Fill this field to get groups from only this domain. To return all groups in a multi-domain fill customer field instead.",
                            "location": "query",
                            "type": "string"
                        },
                        "userKey": {
                            "description": "Email or immutable ID of the user if only those groups are to be listed, the given user is a member of. If it's an ID, it should match with the ID of the user object.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "200",
                            "description": "Maximum number of results to return. Max allowed value is 200.",
                            "format": "int32",
                            "location": "query",
                            "minimum": "1",
                            "type": "integer"
                        }
                    },
                    "path": "admin/directory/v1/groups",
                    "response": {
                        "$ref": "Groups"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group",
                        "https://www.googleapis.com/auth/admin.directory.group.readonly"
                    ]
                },
                "patch": {
                    "description": "Patch Groups via Apiary Patch Orchestration",
                    "httpMethod": "PATCH",
                    "id": "directory.groups.patch",
                    "parameterOrder": [
                        "groupKey"
                    ],
                    "parameters": {
                        "groupKey": {
                            "description": "Email or immutable ID of the group. If ID, it should match with id of group object",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}",
                    "request": {
                        "$ref": "Group"
                    },
                    "response": {
                        "$ref": "Group"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group"
                    ]
                },
                "insert": {
                    "description": "Create Group",
                    "httpMethod": "POST",
                    "id": "directory.groups.insert",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "admin/directory/v1/groups",
                    "request": {
                        "$ref": "Group"
                    },
                    "response": {
                        "$ref": "Group"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group"
                    ]
                },
                "get": {
                    "description": "Retrieve Group",
                    "httpMethod": "GET",
                    "id": "directory.groups.get",
                    "parameterOrder": [
                        "groupKey"
                    ],
                    "parameters": {
                        "groupKey": {
                            "description": "Email or immutable ID of the group",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}",
                    "response": {
                        "$ref": "Group"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group",
                        "https://www.googleapis.com/auth/admin.directory.group.readonly"
                    ]
                },
                "update": {
                    "description": "Update Group",
                    "httpMethod": "PUT",
                    "id": "directory.groups.update",
                    "parameterOrder": [
                        "groupKey"
                    ],
                    "parameters": {
                        "groupKey": {
                            "description": "Email or immutable ID of the group. If ID, it should match with id of group object",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}",
                    "request": {
                        "$ref": "Group"
                    },
                    "response": {
                        "$ref": "Group"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group"
                    ]
                },
                "delete": {
                    "description": "Delete Group",
                    "httpMethod": "DELETE",
                    "id": "directory.groups.delete",
                    "parameterOrder": [
                        "groupKey"
                    ],
                    "parameters": {
                        "groupKey": {
                            "description": "Email or immutable ID of the group",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/groups/{groupKey}",
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.group"
                    ]
                }
            },
            "resources": {
                "aliases": {
                    "methods": {
                        "list": {
                            "description": "List all aliases for a group",
                            "httpMethod": "GET",
                            "id": "directory.groups.aliases.list",
                            "parameterOrder": [
                                "groupKey"
                            ],
                            "parameters": {
                                "groupKey": {
                                    "description": "Email or immutable ID of the group",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/groups/{groupKey}/aliases",
                            "response": {
                                "$ref": "Aliases"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.group",
                                "https://www.googleapis.com/auth/admin.directory.group.readonly"
                            ]
                        },
                        "insert": {
                            "description": "Add a alias for the group",
                            "httpMethod": "POST",
                            "id": "directory.groups.aliases.insert",
                            "parameterOrder": [
                                "groupKey"
                            ],
                            "parameters": {
                                "groupKey": {
                                    "description": "Email or immutable ID of the group",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/groups/{groupKey}/aliases",
                            "request": {
                                "$ref": "Alias"
                            },
                            "response": {
                                "$ref": "Alias"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.group"
                            ]
                        },
                        "delete": {
                            "description": "Remove a alias for the group",
                            "httpMethod": "DELETE",
                            "id": "directory.groups.aliases.delete",
                            "parameterOrder": [
                                "groupKey",
                                "alias"
                            ],
                            "parameters": {
                                "groupKey": {
                                    "description": "Email or immutable ID of the group",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "alias": {
                                    "description": "The alias to be removed",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "admin/directory/v1/groups/{groupKey}/aliases/{alias}",
                            "scopes": [
                                "https://www.googleapis.com/auth/admin.directory.group"
                            ]
                        }
                    }
                }
            }
        },
        "chromeosdevices": {
            "methods": {
                "get": {
                    "description": "Retrieve Chrome OS Device",
                    "httpMethod": "GET",
                    "id": "directory.chromeosdevices.get",
                    "parameterOrder": [
                        "customerId",
                        "deviceId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "projection": {
                            "description": "Restrict information returned to a set of selected fields.",
                            "enum": [
                                "PROJECTION_UNDEFINED",
                                "BASIC",
                                "FULL"
                            ],
                            "enumDescriptions": [
                                "",
                                "Includes only the basic metadata fields (e.g., deviceId, serialNumber, status, and user)",
                                "Includes all metadata fields"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "deviceId": {
                            "description": "Immutable ID of Chrome OS Device",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/devices/chromeos/{deviceId}",
                    "response": {
                        "$ref": "ChromeOsDevice"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.device.chromeos",
                        "https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly"
                    ]
                },
                "update": {
                    "description": "Update Chrome OS Device",
                    "httpMethod": "PUT",
                    "id": "directory.chromeosdevices.update",
                    "parameterOrder": [
                        "customerId",
                        "deviceId"
                    ],
                    "parameters": {
                        "projection": {
                            "description": "Restrict information returned to a set of selected fields.",
                            "enum": [
                                "PROJECTION_UNDEFINED",
                                "BASIC",
                                "FULL"
                            ],
                            "enumDescriptions": [
                                "",
                                "Includes only the basic metadata fields (e.g., deviceId, serialNumber, status, and user)",
                                "Includes all metadata fields"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "deviceId": {
                            "description": "Immutable ID of Chrome OS Device",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/devices/chromeos/{deviceId}",
                    "request": {
                        "$ref": "ChromeOsDevice"
                    },
                    "response": {
                        "$ref": "ChromeOsDevice"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.device.chromeos"
                    ]
                },
                "patch": {
                    "description": "Patch Chrome OS Device",
                    "httpMethod": "PATCH",
                    "id": "directory.chromeosdevices.patch",
                    "parameterOrder": [
                        "customerId",
                        "deviceId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "deviceId": {
                            "description": "Immutable ID of Chrome OS Device",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "projection": {
                            "description": "Restrict information returned to a set of selected fields.",
                            "enum": [
                                "PROJECTION_UNDEFINED",
                                "BASIC",
                                "FULL"
                            ],
                            "enumDescriptions": [
                                "",
                                "Includes only the basic metadata fields (e.g., deviceId, serialNumber, status, and user)",
                                "Includes all metadata fields"
                            ],
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/devices/chromeos/{deviceId}",
                    "request": {
                        "$ref": "ChromeOsDevice"
                    },
                    "response": {
                        "$ref": "ChromeOsDevice"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.device.chromeos"
                    ]
                },
                "action": {
                    "description": "Take action on Chrome OS Device",
                    "httpMethod": "POST",
                    "id": "directory.chromeosdevices.action",
                    "parameterOrder": [
                        "customerId",
                        "resourceId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "resourceId": {
                            "description": "Immutable ID of Chrome OS Device",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/devices/chromeos/{resourceId}/action",
                    "request": {
                        "$ref": "ChromeOsDeviceAction"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.device.chromeos"
                    ]
                },
                "moveDevicesToOu": {
                    "description": "Move or insert multiple Chrome OS Devices to organizational unit",
                    "httpMethod": "POST",
                    "id": "directory.chromeosdevices.moveDevicesToOu",
                    "parameterOrder": [
                        "customerId",
                        "orgUnitPath"
                    ],
                    "parameters": {
                        "orgUnitPath": {
                            "description": "Full path of the target organizational unit or its ID",
                            "location": "query",
                            "required": true,
                            "type": "string"
                        },
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/devices/chromeos/moveDevicesToOu",
                    "request": {
                        "$ref": "ChromeOsMoveDevicesToOu"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.device.chromeos"
                    ]
                },
                "list": {
                    "description": "Retrieve all Chrome OS Devices of a customer (paginated)",
                    "httpMethod": "GET",
                    "id": "directory.chromeosdevices.list",
                    "parameterOrder": [
                        "customerId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Immutable ID of the G Suite account",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        },
                        "orderBy": {
                            "description": "Column to use for sorting results",
                            "enum": [
                                "orderByUndefined",
                                "annotatedLocation",
                                "annotatedUser",
                                "lastSync",
                                "notes",
                                "serialNumber",
                                "status",
                                "supportEndDate"
                            ],
                            "enumDescriptions": [
                                "",
                                "Chromebook location as annotated by the administrator.",
                                "Chromebook user as annotated by administrator.",
                                "Chromebook last sync.",
                                "Chromebook notes as annotated by the administrator.",
                                "Chromebook Serial Number.",
                                "Chromebook status.",
                                "Chromebook support end date."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "query": {
                            "description": "Search string in the format given at http://support.google.com/chromeos/a/bin/answer.py?answer=1698333",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "100",
                            "description": "Maximum number of results to return.",
                            "format": "int32",
                            "location": "query",
                            "minimum": "1",
                            "type": "integer"
                        },
                        "projection": {
                            "description": "Restrict information returned to a set of selected fields.",
                            "enum": [
                                "PROJECTION_UNDEFINED",
                                "BASIC",
                                "FULL"
                            ],
                            "enumDescriptions": [
                                "",
                                "Includes only the basic metadata fields (e.g., deviceId, serialNumber, status, and user)",
                                "Includes all metadata fields"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "orgUnitPath": {
                            "description": "Full path of the organizational unit or its ID",
                            "location": "query",
                            "type": "string"
                        },
                        "sortOrder": {
                            "description": "Whether to return results in ascending or descending order. Only of use when orderBy is also used",
                            "enum": [
                                "SORT_ORDER_UNDEFINED",
                                "ASCENDING",
                                "DESCENDING"
                            ],
                            "enumDescriptions": [
                                "",
                                "Ascending order.",
                                "Descending order."
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "pageToken": {
                            "description": "Token to specify next page in the list",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "admin/directory/v1/customer/{customerId}/devices/chromeos",
                    "response": {
                        "$ref": "ChromeOsDevices"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.device.chromeos",
                        "https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly"
                    ]
                }
            }
        },
        "channels": {
            "methods": {
                "stop": {
                    "description": "Stop watching resources through this channel.",
                    "httpMethod": "POST",
                    "id": "admin.channels.stop",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "admin/directory_v1/channels/stop",
                    "request": {
                        "$ref": "Channel"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/admin.directory.user",
                        "https://www.googleapis.com/auth/admin.directory.user.alias",
                        "https://www.googleapis.com/auth/admin.directory.user.alias.readonly",
                        "https://www.googleapis.com/auth/admin.directory.user.readonly",
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            }
        }
    },
    "revision": "20201006",
    "rootUrl": "https://www.googleapis.com/",
    "schemas": {
        "RoleAssignments": {
            "id": "RoleAssignments",
            "properties": {
                "kind": {
                    "default": "admin#directory#roleAssignments",
                    "description": "The type of the API resource. This is always admin#directory#roleAssignments .",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "type": "string"
                },
                "items": {
                    "description": "A list of RoleAssignment resources.",
                    "items": {
                        "$ref": "RoleAssignment"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Customer": {
            "description": "STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "Customer",
            "properties": {
                "language": {
                    "description": "The customer's ISO 639-2 language code. The default value is en-US",
                    "type": "string"
                },
                "postalAddress": {
                    "$ref": "CustomerPostalAddress",
                    "description": "The customer's postal address information."
                },
                "customerCreationTime": {
                    "description": "The customer's creation time (Readonly)",
                    "format": "date-time",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#customer",
                    "description": "Identifies the resource as a customer. Value: admin#directory#customer",
                    "type": "string"
                },
                "customerDomain": {
                    "description": "The customer's primary domain name string. Do not include the www prefix when creating a new customer.",
                    "type": "string"
                },
                "alternateEmail": {
                    "description": "The customer's secondary contact email address. This email address cannot be on the same domain as the customerDomain",
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "The customer's contact phone number in E.164 format.",
                    "type": "string"
                },
                "id": {
                    "description": "The unique ID for the customer's G Suite account. (Readonly)",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Schemas": {
            "description": "JSON response template for List Schema operation in Directory API. STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "Schemas",
            "properties": {
                "schemas": {
                    "description": "List of UserSchema objects.",
                    "items": {
                        "$ref": "Schema"
                    },
                    "type": "array"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#schemas",
                    "description": "Kind of resource this is.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Features": {
            "description": "Public API: Resources.features",
            "id": "Features",
            "properties": {
                "kind": {
                    "default": "admin#directory#resources#features#featuresList",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "features": {
                    "description": "The Features in this page of results.",
                    "items": {
                        "$ref": "Feature"
                    },
                    "type": "array"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserIm": {
            "description": "JSON template for instant messenger of an user.",
            "id": "UserIm",
            "properties": {
                "customType": {
                    "description": "Custom type.",
                    "type": "string"
                },
                "protocol": {
                    "description": "Protocol used in the instant messenger. It should be one of the values from ImProtocolTypes map. Similar to type it can take a CUSTOM value and specify the custom name in customProtocol field.",
                    "type": "string"
                },
                "customProtocol": {
                    "description": "Custom protocol.",
                    "type": "string"
                },
                "type": {
                    "description": "Each entry can have a type which indicates standard types of that entry. For example instant messengers could be of home work etc. In addition to the standard type an entry can have a custom type and can take any value. Such types should have the CUSTOM value as type and also have a customType value.",
                    "type": "string"
                },
                "primary": {
                    "description": "If this is user's primary im. Only one entry could be marked as primary.",
                    "type": "boolean"
                },
                "im": {
                    "description": "Instant messenger id.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserLocation": {
            "description": "JSON template for a location entry.",
            "id": "UserLocation",
            "properties": {
                "floorSection": {
                    "description": "Floor section. More specific location within the floor. For example if a floor is divided into sections 'A', 'B' and 'C' this field would identify one of those values.",
                    "type": "string"
                },
                "deskCode": {
                    "description": "Most specific textual code of individual desk location.",
                    "type": "string"
                },
                "type": {
                    "description": "Each entry can have a type which indicates standard types of that entry. For example location could be of types default and desk. In addition to standard type an entry can have a custom type and can give it any name. Such types should have 'custom' as type and also have a customType value.",
                    "type": "string"
                },
                "floorName": {
                    "description": "Floor name/number.",
                    "type": "string"
                },
                "buildingId": {
                    "description": "Building Identifier.",
                    "type": "string"
                },
                "area": {
                    "description": "Textual location. This is most useful for display purposes to concisely describe the location. For example 'Mountain View, CA', 'Near Seattle', 'US-NYC-9TH 9A209A.''",
                    "type": "string"
                },
                "customType": {
                    "description": "Custom Type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "VerificationCodes": {
            "description": "JSON response template for List verification codes operation in Directory API. STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "VerificationCodes",
            "properties": {
                "items": {
                    "description": "A list of verification code resources.",
                    "items": {
                        "$ref": "VerificationCode"
                    },
                    "type": "array"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#verificationCodesList",
                    "description": "The type of the resource. This is always admin#directory#verificationCodesList.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Domains": {
            "id": "Domains",
            "properties": {
                "kind": {
                    "default": "admin#directory#domain",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "domainAliases": {
                    "description": "List of domain alias objects. (Read-only)",
                    "items": {
                        "$ref": "DomainAlias"
                    },
                    "type": "array"
                },
                "domainName": {
                    "annotations": {
                        "required": [
                            "directory.domains.insert"
                        ]
                    },
                    "description": "The domain name of the customer.",
                    "type": "string"
                },
                "verified": {
                    "description": "Indicates the verification state of a domain. (Read-only).",
                    "type": "boolean"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "isPrimary": {
                    "description": "Indicates if the domain is a primary domain (Read-only).",
                    "type": "boolean"
                },
                "creationTime": {
                    "description": "Creation time of the domain. (Read-only).",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserPhone": {
            "description": "JSON template for a phone entry.",
            "id": "UserPhone",
            "properties": {
                "value": {
                    "description": "Phone number.",
                    "type": "string"
                },
                "customType": {
                    "description": "Custom Type.",
                    "type": "string"
                },
                "primary": {
                    "description": "If this is user's primary phone or not.",
                    "type": "boolean"
                },
                "type": {
                    "description": "Each entry can have a type which indicates standard types of that entry. For example phone could be of home_fax work mobile etc. In addition to the standard type an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User": {
            "description": "STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'external_ids' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'relations' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'addresses' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'organizations' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'phones' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'languages' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'posix_accounts' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'ssh_public_keys' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'notes' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'websites' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'locations' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'keywords' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'gender' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'thumbnail_photo_etag' to avoid collision. (See http://go/stepladder-help#fieldNumber)",
            "id": "User",
            "properties": {
                "websites": {
                    "description": "Websites of User",
                    "type": "any"
                },
                "name": {
                    "$ref": "UserName",
                    "annotations": {
                        "required": [
                            "directory.users.insert"
                        ]
                    },
                    "description": "User's name"
                },
                "changePasswordAtNextLogin": {
                    "description": "Boolean indicating if the user should change password in next login",
                    "type": "boolean"
                },
                "isMailboxSetup": {
                    "description": "Output only. Is mailbox setup (Read-only)",
                    "readOnly": true,
                    "type": "boolean"
                },
                "hashFunction": {
                    "description": "Hash function name for password. Supported are MD5, SHA-1 and crypt",
                    "type": "string"
                },
                "suspensionReason": {
                    "description": "Output only. Suspension reason if user is suspended (Read-only)",
                    "readOnly": true,
                    "type": "string"
                },
                "addresses": {
                    "description": "Addresses of User",
                    "type": "any"
                },
                "sshPublicKeys": {
                    "description": "The SSH public keys of User",
                    "type": "any"
                },
                "id": {
                    "description": "Unique identifier of User (Read-only)",
                    "type": "string"
                },
                "languages": {
                    "description": "Languages of User",
                    "type": "any"
                },
                "lastLoginTime": {
                    "description": "User's last login time. (Read-only)",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "recoveryPhone": {
                    "description": "Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: *+16506661212*.",
                    "type": "string"
                },
                "isDelegatedAdmin": {
                    "description": "Output only. Boolean indicating if the user is delegated admin (Read-only)",
                    "readOnly": true,
                    "type": "boolean"
                },
                "nonEditableAliases": {
                    "description": "Output only. List of non editable aliases (Read-only)",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "locations": {
                    "description": "Locations of User",
                    "type": "any"
                },
                "isEnrolledIn2Sv": {
                    "description": "Output only. Is enrolled in 2-step verification (Read-only)",
                    "readOnly": true,
                    "type": "boolean"
                },
                "password": {
                    "annotations": {
                        "required": [
                            "directory.users.insert"
                        ]
                    },
                    "description": "User's password",
                    "type": "string"
                },
                "posixAccounts": {
                    "description": "The POSIX accounts of User",
                    "type": "any"
                },
                "emails": {
                    "description": "Emails of User",
                    "type": "any"
                },
                "phones": {
                    "description": "Phone numbers of User",
                    "type": "any"
                },
                "agreedToTerms": {
                    "description": "Output only. Indicates if user has agreed to terms (Read-only)",
                    "readOnly": true,
                    "type": "boolean"
                },
                "notes": {
                    "description": "Notes of User",
                    "type": "any"
                },
                "primaryEmail": {
                    "annotations": {
                        "required": [
                            "directory.users.insert"
                        ]
                    },
                    "description": "username of User",
                    "type": "string"
                },
                "isAdmin": {
                    "description": "Output only. Boolean indicating if the user is admin (Read-only)",
                    "readOnly": true,
                    "type": "boolean"
                },
                "externalIds": {
                    "description": "The external Ids of User *",
                    "type": "any"
                },
                "organizations": {
                    "description": "Organizations of User",
                    "type": "any"
                },
                "deletionTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "aliases": {
                    "description": "Output only. List of aliases (Read-only)",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "includeInGlobalAddressList": {
                    "description": "Boolean indicating if user is included in Global Address List",
                    "type": "boolean"
                },
                "ims": {
                    "description": "User's Instant Messenger",
                    "type": "any"
                },
                "creationTime": {
                    "description": "User's G Suite account creation time. (Read-only)",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "recoveryEmail": {
                    "description": "Recovery email of the user.",
                    "type": "string"
                },
                "relations": {
                    "description": "The Relations of User *",
                    "type": "any"
                },
                "orgUnitPath": {
                    "description": "OrgUnit of User",
                    "type": "string"
                },
                "isEnforcedIn2Sv": {
                    "description": "Output only. Is 2-step verification enforced (Read-only)",
                    "readOnly": true,
                    "type": "boolean"
                },
                "thumbnailPhotoEtag": {
                    "description": "Output only. ETag of the user's photo (Read-only)",
                    "readOnly": true,
                    "type": "string"
                },
                "archived": {
                    "description": "Indicates if user is archived.",
                    "type": "boolean"
                },
                "customerId": {
                    "description": "Output only. CustomerId of User (Read-only)",
                    "readOnly": true,
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#user",
                    "description": "Output only. Kind of resource this is.",
                    "readOnly": true,
                    "type": "string"
                },
                "gender": {
                    "description": "Gender of User",
                    "type": "any"
                },
                "thumbnailPhotoUrl": {
                    "description": "Output only. Photo Url of the user (Read-only)",
                    "readOnly": true,
                    "type": "string"
                },
                "suspended": {
                    "description": "Indicates if user is suspended.",
                    "type": "boolean"
                },
                "etag": {
                    "description": "Output only. ETag of the resource.",
                    "readOnly": true,
                    "type": "string"
                },
                "ipWhitelisted": {
                    "description": "Boolean indicating if ip is whitelisted",
                    "type": "boolean"
                },
                "customSchemas": {
                    "additionalProperties": {
                        "$ref": "UserCustomProperties"
                    },
                    "description": "Custom fields of the user.",
                    "type": "object"
                },
                "keywords": {
                    "description": "Keywords of User",
                    "type": "any"
                }
            },
            "type": "object"
        },
        "UserName": {
            "id": "UserName",
            "properties": {
                "familyName": {
                    "annotations": {
                        "required": [
                            "directory.users.insert"
                        ]
                    },
                    "description": "Last Name",
                    "type": "string"
                },
                "givenName": {
                    "annotations": {
                        "required": [
                            "directory.users.insert"
                        ]
                    },
                    "description": "First Name",
                    "type": "string"
                },
                "fullName": {
                    "description": "Full Name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MembersHasMember": {
            "description": "JSON template for Has Member response in Directory API.",
            "id": "MembersHasMember",
            "properties": {
                "isMember": {
                    "description": "Output only. Identifies whether the given user is a member of the group. Membership can be direct or nested.",
                    "readOnly": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "MobileDeviceAction": {
            "id": "MobileDeviceAction",
            "properties": {
                "action": {
                    "annotations": {
                        "required": [
                            "directory.mobiledevices.action"
                        ]
                    },
                    "description": "Action to be taken on the Mobile Device",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Asp": {
            "description": "The template that returns individual ASP (Access Code) data. STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "Asp",
            "properties": {
                "lastTimeUsed": {
                    "description": "The time when the ASP was last used. Expressed in Unix time format.",
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the application that the user, represented by their userId, entered when the ASP was created.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#asp",
                    "description": "The type of the API resource. This is always admin#directory#asp.",
                    "type": "string"
                },
                "userKey": {
                    "description": "The unique ID of the user who issued the ASP.",
                    "type": "string"
                },
                "codeId": {
                    "description": "The unique ID of the ASP.",
                    "format": "int32",
                    "type": "integer"
                },
                "creationTime": {
                    "description": "The time when the ASP was created. Expressed in Unix time format.",
                    "format": "int64",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the ASP.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Tokens": {
            "description": "JSON response template for List tokens operation in Directory API. STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "Tokens",
            "properties": {
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "items": {
                    "description": "A list of Token resources.",
                    "items": {
                        "$ref": "Token"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "admin#directory#tokenList",
                    "description": "The type of the API resource. This is always admin#directory#tokenList.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Asps": {
            "description": "STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "Asps",
            "properties": {
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "items": {
                    "description": "A list of ASP resources.",
                    "items": {
                        "$ref": "Asp"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "admin#directory#aspList",
                    "description": "The type of the API resource. This is always admin#directory#aspList.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Buildings": {
            "description": "Public API: Resources.buildings",
            "id": "Buildings",
            "properties": {
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
                    "type": "string"
                },
                "buildings": {
                    "description": "The Buildings in this page of results.",
                    "items": {
                        "$ref": "Building"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "admin#directory#resources#buildings#buildingsList",
                    "description": "Kind of resource this is.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Groups": {
            "description": "STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "Groups",
            "properties": {
                "kind": {
                    "default": "admin#directory#groups",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "groups": {
                    "description": "List of group objects.",
                    "items": {
                        "$ref": "Group"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token used to access next page of this result.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Roles": {
            "id": "Roles",
            "properties": {
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "items": {
                    "description": "A list of Role resources.",
                    "items": {
                        "$ref": "Role"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "admin#directory#roles",
                    "description": "The type of the API resource. This is always admin#directory#roles.",
                    "type": "string"
                },
                "nextPageToken": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Channel": {
            "description": "An notification channel used to watch for resource changes.",
            "id": "Channel",
            "properties": {
                "resourceUri": {
                    "description": "A version-specific identifier for the watched resource.",
                    "type": "string"
                },
                "expiration": {
                    "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
                    "format": "int64",
                    "type": "string"
                },
                "address": {
                    "description": "The address where notifications are delivered for this channel.",
                    "type": "string"
                },
                "params": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Additional parameters controlling delivery channel behavior. Optional.",
                    "type": "object"
                },
                "token": {
                    "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
                    "type": "string"
                },
                "resourceId": {
                    "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
                    "type": "string"
                },
                "payload": {
                    "description": "A Boolean value to indicate whether payload is wanted. Optional.",
                    "type": "boolean"
                },
                "kind": {
                    "default": "api#channel",
                    "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".",
                    "type": "string"
                },
                "id": {
                    "description": "A UUID or similar unique string that identifies this channel.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of delivery mechanism used for this channel.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Role": {
            "id": "Role",
            "properties": {
                "roleDescription": {
                    "description": "A short description of the role.",
                    "type": "string"
                },
                "isSystemRole": {
                    "description": "Returns true if this is a pre-defined system role.",
                    "type": "boolean"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "roleName": {
                    "annotations": {
                        "required": [
                            "directory.roles.insert"
                        ]
                    },
                    "description": "Name of the role.",
                    "type": "string"
                },
                "isSuperAdminRole": {
                    "description": "Returns true if the role is a super admin role.",
                    "type": "boolean"
                },
                "kind": {
                    "default": "admin#directory#role",
                    "description": "The type of the API resource. This is always admin#directory#role.",
                    "type": "string"
                },
                "roleId": {
                    "description": "ID of the role.",
                    "format": "int64",
                    "type": "string"
                },
                "rolePrivileges": {
                    "annotations": {
                        "required": [
                            "directory.roles.insert"
                        ]
                    },
                    "description": "The set of privileges that are granted to this role.",
                    "items": {
                        "properties": {
                            "serviceId": {
                                "description": "The obfuscated ID of the service this privilege is for. This value is returned with Privileges.list().",
                                "type": "string"
                            },
                            "privilegeName": {
                                "description": "The name of the privilege.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "UserExternalId": {
            "description": "JSON template for an externalId entry.",
            "id": "UserExternalId",
            "properties": {
                "value": {
                    "description": "The value of the id.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the Id.",
                    "type": "string"
                },
                "customType": {
                    "description": "Custom type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Members": {
            "id": "Members",
            "properties": {
                "kind": {
                    "default": "admin#directory#members",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "members": {
                    "description": "List of member objects.",
                    "items": {
                        "$ref": "Member"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token used to access next page of this result.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserEmail": {
            "description": "JSON template for an email.",
            "id": "UserEmail",
            "properties": {
                "address": {
                    "description": "Email id of the user.",
                    "type": "string"
                },
                "customType": {
                    "description": "Custom Type.",
                    "type": "string"
                },
                "primary": {
                    "description": "If this is user's primary email. Only one entry could be marked as primary.",
                    "type": "boolean"
                },
                "type": {
                    "description": "Each entry can have a type which indicates standard types of that entry. For example email could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value Such types should have the CUSTOM value as type and also have a customType value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserRelation": {
            "description": "JSON template for a relation entry.",
            "id": "UserRelation",
            "properties": {
                "type": {
                    "description": "The relation of the user. Some of the possible values are mother father sister brother manager assistant partner.",
                    "type": "string"
                },
                "customType": {
                    "description": "Custom Type.",
                    "type": "string"
                },
                "value": {
                    "description": "The name of the relation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DomainAliases": {
            "id": "DomainAliases",
            "properties": {
                "kind": {
                    "default": "admin#directory#domainAliases",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "domainAliases": {
                    "description": "List of domain alias objects.",
                    "items": {
                        "$ref": "DomainAlias"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ChromeOsDevices": {
            "description": "STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "ChromeOsDevices",
            "properties": {
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#chromeosdevices",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "chromeosdevices": {
                    "description": "List of Chrome OS Device objects.",
                    "items": {
                        "$ref": "ChromeOsDevice"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token used to access next page of this result.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RoleAssignment": {
            "id": "RoleAssignment",
            "properties": {
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "roleAssignmentId": {
                    "description": "ID of this roleAssignment.",
                    "format": "int64",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#roleAssignment",
                    "description": "The type of the API resource. This is always admin#directory#roleAssignment.",
                    "type": "string"
                },
                "scopeType": {
                    "description": "The scope in which this role is assigned. Possible values are: - CUSTOMER - ORG_UNIT ",
                    "type": "string"
                },
                "roleId": {
                    "description": "The ID of the role that is assigned.",
                    "format": "int64",
                    "type": "string"
                },
                "assignedTo": {
                    "description": "The unique ID of the user this role is assigned to.",
                    "type": "string"
                },
                "orgUnitId": {
                    "description": "If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChromeOsMoveDevicesToOu": {
            "id": "ChromeOsMoveDevicesToOu",
            "properties": {
                "deviceIds": {
                    "annotations": {
                        "required": [
                            "directory.chromeosdevices.moveDevicesToOu"
                        ]
                    },
                    "description": "ChromeOs Devices to be moved to OU",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MobileDevice": {
            "id": "MobileDevice",
            "properties": {
                "networkOperator": {
                    "description": "Mobile Device mobile or network operator (if available) (Read-only)",
                    "type": "string"
                },
                "meid": {
                    "description": "Mobile Device MEID number (Read-only)",
                    "type": "string"
                },
                "hardwareId": {
                    "description": "Mobile Device Hardware Id (Read-only)",
                    "type": "string"
                },
                "serialNumber": {
                    "description": "Mobile Device SSN or Serial Number (Read-only)",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#mobiledevice",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "privilege": {
                    "description": "DMAgentPermission (Read-only)",
                    "type": "string"
                },
                "unknownSourcesStatus": {
                    "description": "Unknown sources enabled or disabled on device (Read-only)",
                    "type": "boolean"
                },
                "os": {
                    "description": "Name of the mobile operating system",
                    "type": "string"
                },
                "hardware": {
                    "description": "Mobile Device Hardware (Read-only)",
                    "type": "string"
                },
                "deviceId": {
                    "description": "Mobile Device serial number (Read-only)",
                    "type": "string"
                },
                "adbStatus": {
                    "description": "Adb (USB debugging) enabled or disabled on device (Read-only)",
                    "type": "boolean"
                },
                "basebandVersion": {
                    "description": "Mobile Device Baseband version (Read-only)",
                    "type": "string"
                },
                "firstSync": {
                    "description": "Date and time the device was first synchronized with the policy settings in the G Suite administrator control panel (Read-only)",
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "description": "List of owner user's names (Read-only)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "brand": {
                    "description": "Mobile Device Brand (Read-only)",
                    "type": "string"
                },
                "lastSync": {
                    "description": "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)",
                    "format": "date-time",
                    "type": "string"
                },
                "kernelVersion": {
                    "description": "Mobile Device Kernel version (Read-only)",
                    "type": "string"
                },
                "type": {
                    "description": "The type of device (Read-only)",
                    "type": "string"
                },
                "buildNumber": {
                    "description": "Mobile Device Build number (Read-only)",
                    "type": "string"
                },
                "otherAccountsInfo": {
                    "description": "List of accounts added on device (Read-only)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "imei": {
                    "description": "Mobile Device IMEI number (Read-only)",
                    "type": "string"
                },
                "manufacturer": {
                    "description": "Mobile Device manufacturer (Read-only)",
                    "type": "string"
                },
                "applications": {
                    "description": "List of applications installed on Mobile Device",
                    "items": {
                        "properties": {
                            "versionName": {
                                "description": "Version name of application",
                                "type": "string"
                            },
                            "packageName": {
                                "description": "Package name of application",
                                "type": "string"
                            },
                            "displayName": {
                                "description": "Display name of application",
                                "type": "string"
                            },
                            "permission": {
                                "description": "List of Permissions for application",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "versionCode": {
                                "description": "Version code of application",
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "managedAccountIsOnOwnerProfile": {
                    "description": "Boolean indicating if this account is on owner/primary profile or not (Read-only)",
                    "type": "boolean"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "supportsWorkProfile": {
                    "description": "Work profile supported on device (Read-only)",
                    "type": "boolean"
                },
                "model": {
                    "description": "Name of the model of the device",
                    "type": "string"
                },
                "encryptionStatus": {
                    "description": "Mobile Device Encryption Status (Read-only)",
                    "type": "string"
                },
                "developerOptionsStatus": {
                    "description": "Developer options enabled or disabled on device (Read-only)",
                    "type": "boolean"
                },
                "resourceId": {
                    "description": "Unique identifier of Mobile Device (Read-only)",
                    "type": "string"
                },
                "userAgent": {
                    "description": "Mobile Device user agent",
                    "type": "string"
                },
                "devicePasswordStatus": {
                    "description": "DevicePasswordStatus (Read-only)",
                    "type": "string"
                },
                "bootloaderVersion": {
                    "description": "Mobile Device Bootloader version (Read-only)",
                    "type": "string"
                },
                "releaseVersion": {
                    "description": "Mobile Device release version version (Read-only)",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the device (Read-only)",
                    "type": "string"
                },
                "deviceCompromisedStatus": {
                    "description": "Mobile Device compromised status (Read-only)",
                    "type": "string"
                },
                "wifiMacAddress": {
                    "description": "Mobile Device WiFi MAC address (Read-only)",
                    "type": "string"
                },
                "email": {
                    "description": "List of owner user's email addresses (Read-only)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "securityPatchLevel": {
                    "description": "Mobile Device Security patch level (Read-only)",
                    "format": "int64",
                    "type": "string"
                },
                "defaultLanguage": {
                    "description": "The default locale used on the Mobile Device (Read-only)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Domains2": {
            "id": "Domains2",
            "properties": {
                "domains": {
                    "description": "List of domain objects.",
                    "items": {
                        "$ref": "Domains"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "admin#directory#domains",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CalendarResources": {
            "description": "Public API: Resources.calendars",
            "id": "CalendarResources",
            "properties": {
                "kind": {
                    "default": "admin#directory#resources#calendars#calendarResourcesList",
                    "description": "Identifies this as a collection of CalendarResources. This is always admin#directory#resources#calendars#calendarResourcesList.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
                    "type": "string"
                },
                "items": {
                    "description": "The CalendarResources in this page of results.",
                    "items": {
                        "$ref": "CalendarResource"
                    },
                    "type": "array"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MobileDevices": {
            "id": "MobileDevices",
            "properties": {
                "mobiledevices": {
                    "description": "List of Mobile Device objects.",
                    "items": {
                        "$ref": "MobileDevice"
                    },
                    "type": "array"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "Token used to access next page of this result.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#mobiledevices",
                    "description": "Kind of resource this is.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CustomerPostalAddress": {
            "description": "STEPLADDER: Generated unstable field number for field 'address_line2' to avoid collision. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'address_line3' to avoid collision. (See http://go/stepladder-help#fieldNumber)",
            "id": "CustomerPostalAddress",
            "properties": {
                "addressLine1": {
                    "description": "A customer's physical address. The address can be composed of one to three lines.",
                    "type": "string"
                },
                "organizationName": {
                    "description": "The company or company division name.",
                    "type": "string"
                },
                "addressLine3": {
                    "description": "Address line 3 of the address.",
                    "type": "string"
                },
                "postalCode": {
                    "description": "The postal code. A postalCode example is a postal zip code such as 10009. This is in accordance with - http: //portablecontacts.net/draft-spec.html#address_element.",
                    "type": "string"
                },
                "contactName": {
                    "description": "The customer contact's name.",
                    "type": "string"
                },
                "locality": {
                    "description": "Name of the locality. An example of a locality value is the city of San Francisco.",
                    "type": "string"
                },
                "addressLine2": {
                    "description": "Address line 2 of the address.",
                    "type": "string"
                },
                "region": {
                    "description": "Name of the region. An example of a region value is NY for the state of New York.",
                    "type": "string"
                },
                "countryCode": {
                    "description": "This is a required property. For countryCode information see the ISO 3166 country code elements.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserKeyword": {
            "description": "JSON template for a keyword entry.",
            "id": "UserKeyword",
            "properties": {
                "customType": {
                    "description": "Custom Type.",
                    "type": "string"
                },
                "value": {
                    "description": "Keyword.",
                    "type": "string"
                },
                "type": {
                    "description": "Each entry can have a type which indicates standard type of that entry. For example keyword could be of type occupation or outlook. In addition to the standard type an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BuildingAddress": {
            "description": "Public API: Resources.buildings",
            "id": "BuildingAddress",
            "properties": {
                "locality": {
                    "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines.",
                    "type": "string"
                },
                "regionCode": {
                    "description": "Required. CLDR region code of the country/region of the address.",
                    "type": "string"
                },
                "administrativeArea": {
                    "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region.",
                    "type": "string"
                },
                "addressLines": {
                    "description": "Unstructured address lines describing the lower levels of an address.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "languageCode": {
                    "description": "Optional. BCP-47 language code of the contents of this address (if known).",
                    "type": "string"
                },
                "sublocality": {
                    "description": "Optional. Sublocality of the address.",
                    "type": "string"
                },
                "postalCode": {
                    "description": "Optional. Postal code of the address.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Alias": {
            "description": "JSON template for Alias object in Directory API.",
            "id": "Alias",
            "properties": {
                "etag": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "primaryEmail": {
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#alias",
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SchemaFieldSpec": {
            "description": "JSON template for FieldSpec resource for Schemas in Directory API. STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "SchemaFieldSpec",
            "properties": {
                "readAccessType": {
                    "default": "ALL_DOMAIN_USERS",
                    "description": "Read ACLs on the field specifying who can view values of this field. Valid values are \"ALL_DOMAIN_USERS\" and \"ADMINS_AND_SELF\".",
                    "type": "string"
                },
                "fieldType": {
                    "annotations": {
                        "required": [
                            "directory.schemas.insert",
                            "directory.schemas.update"
                        ]
                    },
                    "description": "Type of the field.",
                    "type": "string"
                },
                "fieldId": {
                    "description": "Unique identifier of Field (Read-only)",
                    "type": "string"
                },
                "indexed": {
                    "default": "true",
                    "description": "Boolean specifying whether the field is indexed or not.",
                    "type": "boolean"
                },
                "numericIndexingSpec": {
                    "description": "Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the numericIndexingSpec allows range queries to be supported.",
                    "properties": {
                        "minValue": {
                            "description": "Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.",
                            "format": "double",
                            "type": "number"
                        },
                        "maxValue": {
                            "description": "Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.",
                            "format": "double",
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#schema#fieldspec",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "displayName": {
                    "annotations": {
                        "required": [
                            "directory.schemas.insert",
                            "directory.schemas.update"
                        ]
                    },
                    "description": "Display Name of the field.",
                    "type": "string"
                },
                "multiValued": {
                    "description": "Boolean specifying whether this is a multi-valued field or not.",
                    "type": "boolean"
                },
                "fieldName": {
                    "annotations": {
                        "required": [
                            "directory.schemas.insert",
                            "directory.schemas.update"
                        ]
                    },
                    "description": "Name of the field.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Group": {
            "description": "STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "Group",
            "properties": {
                "name": {
                    "description": "Group name",
                    "type": "string"
                },
                "directMembersCount": {
                    "description": "Group direct members count",
                    "format": "int64",
                    "type": "string"
                },
                "aliases": {
                    "description": "List of aliases (Read-only)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Unique identifier of Group (Read-only)",
                    "type": "string"
                },
                "nonEditableAliases": {
                    "description": "List of non editable aliases (Read-only)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "admin#directory#group",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "adminCreated": {
                    "description": "Is the group created by admin (Read-only) *",
                    "type": "boolean"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the group",
                    "type": "string"
                },
                "email": {
                    "annotations": {
                        "required": [
                            "directory.groups.insert"
                        ]
                    },
                    "description": "Email of Group",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CalendarResource": {
            "description": "Public API: Resources.calendars",
            "id": "CalendarResource",
            "properties": {
                "floorSection": {
                    "description": "Name of the section within a floor a resource is located in.",
                    "type": "string"
                },
                "resourceEmail": {
                    "description": "The read-only email for the calendar resource. Generated as part of creating a new calendar resource.",
                    "type": "string"
                },
                "buildingId": {
                    "description": "Unique ID for the building a resource is located in.",
                    "type": "string"
                },
                "generatedResourceName": {
                    "description": "The read-only auto-generated name of the calendar resource which includes metadata about the resource such as building name, floor, capacity, etc. For example, \"NYC-2-Training Room 1A (16)\".",
                    "type": "string"
                },
                "capacity": {
                    "description": "Capacity of a resource, number of seats in a room.",
                    "format": "int32",
                    "type": "integer"
                },
                "resourceType": {
                    "description": "The type of the calendar resource, intended for non-room resources.",
                    "type": "string"
                },
                "resourceName": {
                    "annotations": {
                        "required": [
                            "directory.resources.calendars.insert"
                        ]
                    },
                    "description": "The name of the calendar resource. For example, \"Training Room 1A\".",
                    "type": "string"
                },
                "etags": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "userVisibleDescription": {
                    "description": "Description of the resource, visible to users and admins.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#resources#calendars#CalendarResource",
                    "description": "The type of the resource. For calendar resources, the value is admin#directory#resources#calendars#CalendarResource.",
                    "type": "string"
                },
                "resourceCategory": {
                    "description": "The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to CATEGORY_UNKNOWN.",
                    "type": "string"
                },
                "resourceDescription": {
                    "description": "Description of the resource, visible only to admins.",
                    "type": "string"
                },
                "resourceId": {
                    "annotations": {
                        "required": [
                            "directory.resources.calendars.insert"
                        ]
                    },
                    "description": "The unique ID for the calendar resource.",
                    "type": "string"
                },
                "featureInstances": {
                    "description": "Instances of features for the calendar resource.",
                    "type": "any"
                },
                "floorName": {
                    "description": "Name of the floor a resource is located on.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserPhoto": {
            "description": "STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "UserPhoto",
            "properties": {
                "mimeType": {
                    "description": "Mime Type of the photo",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#user#photo",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "height": {
                    "description": "Height in pixels of the photo",
                    "format": "int32",
                    "type": "integer"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier of User (Read-only)",
                    "type": "string"
                },
                "primaryEmail": {
                    "description": "Primary email of User (Read-only)",
                    "type": "string"
                },
                "width": {
                    "description": "Width in pixels of the photo",
                    "format": "int32",
                    "type": "integer"
                },
                "photoData": {
                    "annotations": {
                        "required": [
                            "directory.users.photos.update"
                        ]
                    },
                    "description": "Base64 encoded photo data",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Feature": {
            "description": "JSON template for Feature object in Directory API.",
            "id": "Feature",
            "properties": {
                "kind": {
                    "default": "admin#directory#resources#features#Feature",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "name": {
                    "annotations": {
                        "required": [
                            "directory.resources.features.insert"
                        ]
                    },
                    "description": "The name of the feature.",
                    "type": "string"
                },
                "etags": {
                    "description": "ETag of the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OrgUnit": {
            "description": "JSON template for Org Unit resource in Directory API. STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "OrgUnit",
            "properties": {
                "orgUnitPath": {
                    "description": "Path of OrgUnit",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#orgUnit",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "parentOrgUnitId": {
                    "description": "Id of parent OrgUnit",
                    "type": "string"
                },
                "name": {
                    "annotations": {
                        "required": [
                            "directory.orgunits.insert"
                        ]
                    },
                    "description": "Name of OrgUnit",
                    "type": "string"
                },
                "orgUnitId": {
                    "description": "Id of OrgUnit",
                    "type": "string"
                },
                "description": {
                    "description": "Description of OrgUnit",
                    "type": "string"
                },
                "blockInheritance": {
                    "description": "Should block inheritance",
                    "type": "boolean"
                },
                "parentOrgUnitPath": {
                    "description": "Path of parent OrgUnit",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserWebsite": {
            "description": "JSON template for a website entry.",
            "id": "UserWebsite",
            "properties": {
                "value": {
                    "description": "Website.",
                    "type": "string"
                },
                "primary": {
                    "description": "If this is user's primary website or not.",
                    "type": "boolean"
                },
                "customType": {
                    "description": "Custom Type.",
                    "type": "string"
                },
                "type": {
                    "description": "Each entry can have a type which indicates standard types of that entry. For example website could be of home work blog etc. In addition to the standard type an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Schema": {
            "description": "JSON template for Schema resource in Directory API. STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "Schema",
            "properties": {
                "schemaName": {
                    "annotations": {
                        "required": [
                            "directory.schemas.insert"
                        ]
                    },
                    "description": "Schema name",
                    "type": "string"
                },
                "displayName": {
                    "annotations": {
                        "required": [
                            "directory.schemas.insert"
                        ]
                    },
                    "description": "Display name for the schema.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#schema",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "schemaId": {
                    "description": "Unique identifier of Schema (Read-only)",
                    "type": "string"
                },
                "fields": {
                    "annotations": {
                        "required": [
                            "directory.schemas.insert",
                            "directory.schemas.update"
                        ]
                    },
                    "description": "Fields of Schema",
                    "items": {
                        "$ref": "SchemaFieldSpec"
                    },
                    "type": "array"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserLanguage": {
            "description": "JSON template for a language entry.",
            "id": "UserLanguage",
            "properties": {
                "customLanguage": {
                    "description": "Other language. User can provide own language name if there is no corresponding Google III language code. If this is set LanguageCode can't be set",
                    "type": "string"
                },
                "languageCode": {
                    "description": "Language Code. Should be used for storing Google III LanguageCode string representation for language. Illegal values cause SchemaException.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChromeOsDevice": {
            "description": "STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "ChromeOsDevice",
            "properties": {
                "lastKnownNetwork": {
                    "description": "Contains last known network (Read-only)",
                    "items": {
                        "description": "Information for an ip address.",
                        "properties": {
                            "wanIpAddress": {
                                "description": "The WAN IP address.",
                                "type": "string"
                            },
                            "ipAddress": {
                                "description": "The IP address.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "osVersion": {
                    "description": "Chromebook Os Version (Read-only)",
                    "type": "string"
                },
                "supportEndDate": {
                    "description": "Final date the device will be supported (Read-only)",
                    "format": "date-time",
                    "type": "string"
                },
                "recentUsers": {
                    "description": "List of recent device users, in descending order by last login time (Read-only)",
                    "items": {
                        "properties": {
                            "email": {
                                "description": "Email address of the user. Present only if the user type is managed",
                                "type": "string"
                            },
                            "type": {
                                "description": "The type of the user",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "systemRamTotal": {
                    "description": "Total RAM on the device [in bytes] (Read-only)",
                    "format": "int64",
                    "type": "string"
                },
                "ethernetMacAddress": {
                    "description": "Chromebook Mac Address on ethernet network interface (Read-only)",
                    "type": "string"
                },
                "annotatedAssetId": {
                    "description": "AssetId specified during enrollment or through later annotation",
                    "type": "string"
                },
                "platformVersion": {
                    "description": "Chromebook platform version (Read-only)",
                    "type": "string"
                },
                "diskVolumeReports": {
                    "description": "Reports of disk space and other info about mounted/connected volumes.",
                    "items": {
                        "properties": {
                            "volumeInfo": {
                                "description": "Disk volumes",
                                "items": {
                                    "properties": {
                                        "volumeId": {
                                            "description": "Volume id",
                                            "type": "string"
                                        },
                                        "storageTotal": {
                                            "description": "Total disk space [in bytes]",
                                            "format": "int64",
                                            "type": "string"
                                        },
                                        "storageFree": {
                                            "description": "Free disk space [in bytes]",
                                            "format": "int64",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "systemRamFreeReports": {
                    "description": "Reports of amounts of available RAM memory (Read-only)",
                    "items": {
                        "properties": {
                            "systemRamFreeInfo": {
                                "items": {
                                    "format": "int64",
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "reportTime": {
                                "description": "Date and time the report was received.",
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "serialNumber": {
                    "description": "Chromebook serial number (Read-only)",
                    "type": "string"
                },
                "orderNumber": {
                    "description": "Chromebook order number (Read-only)",
                    "type": "string"
                },
                "lastSync": {
                    "description": "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)",
                    "format": "date-time",
                    "type": "string"
                },
                "annotatedUser": {
                    "description": "User of the device",
                    "type": "string"
                },
                "tpmVersionInfo": {
                    "description": "Trusted Platform Module (TPM) (Read-only)",
                    "properties": {
                        "specLevel": {
                            "description": "TPM specification level.",
                            "type": "string"
                        },
                        "manufacturer": {
                            "description": "TPM manufacturer code.",
                            "type": "string"
                        },
                        "firmwareVersion": {
                            "description": "TPM firmware version.",
                            "type": "string"
                        },
                        "vendorSpecific": {
                            "description": "Vendor-specific information such as Vendor ID.",
                            "type": "string"
                        },
                        "family": {
                            "description": "TPM family.",
                            "type": "string"
                        },
                        "tpmModel": {
                            "description": "TPM model number.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "willAutoRenew": {
                    "description": "Will Chromebook auto renew after support end date (Read-only)",
                    "type": "boolean"
                },
                "model": {
                    "description": "Chromebook Model (Read-only)",
                    "type": "string"
                },
                "notes": {
                    "description": "Notes added by the administrator",
                    "type": "string"
                },
                "deviceId": {
                    "description": "Unique identifier of Chrome OS Device (Read-only)",
                    "type": "string"
                },
                "cpuStatusReports": {
                    "description": "Reports of CPU utilization and temperature (Read-only)",
                    "items": {
                        "properties": {
                            "cpuUtilizationPercentageInfo": {
                                "items": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "type": "array"
                            },
                            "cpuTemperatureInfo": {
                                "description": "List of CPU temperature samples.",
                                "items": {
                                    "properties": {
                                        "temperature": {
                                            "description": "Temperature in Celsius degrees.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "label": {
                                            "description": "CPU label",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "reportTime": {
                                "description": "Date and time the report was received.",
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "orgUnitPath": {
                    "description": "OrgUnit of the device",
                    "type": "string"
                },
                "autoUpdateExpiration": {
                    "description": "(Read-only) The timestamp after which the device will stop receiving Chrome updates or support",
                    "format": "int64",
                    "type": "string"
                },
                "meid": {
                    "description": "Contains either the Mobile Equipment identifier (MEID) or the International Mobile Equipment Identity (IMEI) for the 3G mobile card in the Chromebook (Read-only)",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#chromeosdevice",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "ethernetMacAddress0": {
                    "description": "(Read-only) MAC address used by the Chromebook’s internal ethernet port, and for onboard network (ethernet) interface. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices.",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "deviceFiles": {
                    "description": "List of device files to download (Read-only)",
                    "items": {
                        "properties": {
                            "type": {
                                "description": "File type",
                                "type": "string"
                            },
                            "downloadUrl": {
                                "description": "File download URL",
                                "type": "string"
                            },
                            "name": {
                                "description": "File name",
                                "type": "string"
                            },
                            "createTime": {
                                "description": "Date and time the file was created",
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "macAddress": {
                    "description": "Chromebook Mac Address on wifi network interface (Read-only)",
                    "type": "string"
                },
                "manufactureDate": {
                    "description": "(Read-only) The date the device was manufactured in yyyy-mm-dd format.",
                    "type": "string"
                },
                "activeTimeRanges": {
                    "description": "List of active time ranges (Read-only)",
                    "items": {
                        "properties": {
                            "activeTime": {
                                "description": "Duration in milliseconds",
                                "format": "int32",
                                "type": "integer"
                            },
                            "date": {
                                "description": "Date of usage",
                                "format": "date",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "annotatedLocation": {
                    "description": "Address or location of the device as noted by the administrator",
                    "type": "string"
                },
                "bootMode": {
                    "description": "Chromebook boot mode (Read-only)",
                    "type": "string"
                },
                "dockMacAddress": {
                    "description": "(Read-only) Built-in MAC address for the docking station that the device connected to. Factory sets Media access control address (MAC address) assigned for use by a dock. It is reserved specifically for MAC pass through device policy. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices.",
                    "type": "string"
                },
                "lastEnrollmentTime": {
                    "description": "Date and time the device was last enrolled (Read-only)",
                    "format": "date-time",
                    "type": "string"
                },
                "firmwareVersion": {
                    "description": "Chromebook firmware version (Read-only)",
                    "type": "string"
                },
                "status": {
                    "description": "status of the device (Read-only)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FeatureInstance": {
            "description": "JSON template for a feature instance.",
            "id": "FeatureInstance",
            "properties": {
                "feature": {
                    "$ref": "Feature",
                    "description": "The feature that this is an instance of. A calendar resource may have multiple instances of a feature."
                }
            },
            "type": "object"
        },
        "UserGender": {
            "id": "UserGender",
            "properties": {
                "type": {
                    "description": "Gender.",
                    "type": "string"
                },
                "addressMeAs": {
                    "description": "AddressMeAs. A human-readable string containing the proper way to refer to the profile owner by humans for example he/him/his or they/them/their.",
                    "type": "string"
                },
                "customGender": {
                    "description": "Custom gender.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Privileges": {
            "id": "Privileges",
            "properties": {
                "items": {
                    "description": "A list of Privilege resources.",
                    "items": {
                        "$ref": "Privilege"
                    },
                    "type": "array"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#privileges",
                    "description": "The type of the API resource. This is always admin#directory#privileges.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserAbout": {
            "description": "JSON template for About (notes) of a user in Directory API.",
            "id": "UserAbout",
            "properties": {
                "value": {
                    "description": "Actual value of notes.",
                    "type": "string"
                },
                "contentType": {
                    "description": "About entry can have a type which indicates the content type. It can either be plain or html. By default, notes contents are assumed to contain plain text.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OrgUnits": {
            "description": "JSON response template for List Organization Units operation in Directory API. STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "OrgUnits",
            "properties": {
                "organizationUnits": {
                    "description": "List of user objects.",
                    "items": {
                        "$ref": "OrgUnit"
                    },
                    "type": "array"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#orgUnits",
                    "description": "Kind of resource this is.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "VerificationCode": {
            "description": "JSON template for verification codes in Directory API. STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "VerificationCode",
            "properties": {
                "userId": {
                    "description": "The obfuscated unique ID of the user.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#verificationCode",
                    "description": "The type of the resource. This is always admin#directory#verificationCode.",
                    "type": "string"
                },
                "verificationCode": {
                    "description": "A current verification code for the user. Invalidated or used verification codes are not returned as part of the result.",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BuildingCoordinates": {
            "description": "Public API: Resources.buildings",
            "id": "BuildingCoordinates",
            "properties": {
                "latitude": {
                    "description": "Latitude in decimal degrees.",
                    "format": "double",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude in decimal degrees.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DomainAlias": {
            "id": "DomainAlias",
            "properties": {
                "kind": {
                    "default": "admin#directory#domainAlias",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "parentDomainName": {
                    "annotations": {
                        "required": [
                            "directory.domains.insert"
                        ]
                    },
                    "description": "The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "creationTime": {
                    "description": "The creation time of the domain alias. (Read-only).",
                    "format": "int64",
                    "type": "string"
                },
                "domainAliasName": {
                    "description": "The domain alias name.",
                    "type": "string"
                },
                "verified": {
                    "description": "Indicates the verification state of a domain alias. (Read-only)",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Building": {
            "description": "Public API: Resources.buildings",
            "id": "Building",
            "properties": {
                "floorNames": {
                    "description": "The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, [\"B2\", \"B1\", \"L\", \"1\", \"2\", \"2M\", \"3\", \"PH\"] Must contain at least one entry.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "coordinates": {
                    "$ref": "BuildingCoordinates",
                    "description": "The geographic coordinates of the center of the building, expressed as latitude and longitude in decimal degrees."
                },
                "etags": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "address": {
                    "$ref": "BuildingAddress",
                    "description": "The postal address of the building. See PostalAddress for details. Note that only a single address line and region code are required."
                },
                "kind": {
                    "default": "admin#directory#resources#buildings#Building",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "buildingName": {
                    "description": "The building name as seen by users in Calendar. Must be unique for the customer. For example, \"NYC-CHEL\". The maximum length is 100 characters.",
                    "type": "string"
                },
                "description": {
                    "description": "A brief description of the building. For example, \"Chelsea Market\".",
                    "type": "string"
                },
                "buildingId": {
                    "description": "Unique identifier for the building. The maximum length is 100 characters.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserMakeAdmin": {
            "id": "UserMakeAdmin",
            "properties": {
                "status": {
                    "annotations": {
                        "required": [
                            "directory.users.makeAdmin"
                        ]
                    },
                    "description": "Boolean indicating new admin status of the user",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "FeatureRename": {
            "id": "FeatureRename",
            "properties": {
                "newName": {
                    "annotations": {
                        "required": [
                            "directory.resources.features.rename"
                        ]
                    },
                    "description": "New name of the feature.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserCustomProperties": {
            "additionalProperties": {
                "type": "any"
            },
            "description": "JSON template for a set of custom properties (i.e. all fields in a particular schema)",
            "id": "UserCustomProperties",
            "type": "object"
        },
        "UserUndelete": {
            "id": "UserUndelete",
            "properties": {
                "orgUnitPath": {
                    "description": "OrgUnit of User",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserPosixAccount": {
            "description": "JSON template for a POSIX account entry. Description of the field family: go/fbs-posix.",
            "id": "UserPosixAccount",
            "properties": {
                "gecos": {
                    "description": "The GECOS (user information) for this account.",
                    "type": "string"
                },
                "primary": {
                    "description": "If this is user's primary account within the SystemId.",
                    "type": "boolean"
                },
                "homeDirectory": {
                    "description": "The path to the home directory for this account.",
                    "type": "string"
                },
                "operatingSystemType": {
                    "description": "The operating system type for this account.",
                    "type": "string"
                },
                "username": {
                    "description": "The username of the account.",
                    "type": "string"
                },
                "uid": {
                    "description": "The POSIX compliant user ID.",
                    "format": "uint64",
                    "type": "string"
                },
                "accountId": {
                    "description": "A POSIX account field identifier.",
                    "type": "string"
                },
                "systemId": {
                    "description": "System identifier for which account Username or Uid apply to.",
                    "type": "string"
                },
                "gid": {
                    "description": "The default group ID.",
                    "format": "uint64",
                    "type": "string"
                },
                "shell": {
                    "description": "The path to the login shell for this account.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Member": {
            "id": "Member",
            "properties": {
                "kind": {
                    "default": "admin#directory#member",
                    "description": "Kind of resource this is.",
                    "type": "string"
                },
                "delivery_settings": {
                    "description": "Delivery settings of member",
                    "type": "string"
                },
                "status": {
                    "description": "Status of member (Immutable)",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier of group (Read-only) Unique identifier of member (Read-only) The unique ID of the group member. A member id can be used as a member request URI's memberKey.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of member (Immutable)",
                    "type": "string"
                },
                "email": {
                    "description": "Email of member (Read-only)",
                    "type": "string"
                },
                "role": {
                    "description": "Role of member",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserSshPublicKey": {
            "description": "JSON template for a POSIX account entry.",
            "id": "UserSshPublicKey",
            "properties": {
                "fingerprint": {
                    "description": "A SHA-256 fingerprint of the SSH public key. (Read-only)",
                    "readOnly": true,
                    "type": "string"
                },
                "key": {
                    "description": "An SSH public key.",
                    "type": "string"
                },
                "expirationTimeUsec": {
                    "description": "An expiration time in microseconds since epoch.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Privilege": {
            "id": "Privilege",
            "properties": {
                "kind": {
                    "default": "admin#directory#privilege",
                    "description": "The type of the API resource. This is always admin#directory#privilege.",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "serviceName": {
                    "description": "The name of the service this privilege is for.",
                    "type": "string"
                },
                "childPrivileges": {
                    "description": "A list of child privileges. Privileges for a service form a tree. Each privilege can have a list of child privileges; this list is empty for a leaf privilege.",
                    "items": {
                        "$ref": "Privilege"
                    },
                    "type": "array"
                },
                "serviceId": {
                    "description": "The obfuscated ID of the service this privilege is for. This value is returned with Privileges.list().",
                    "type": "string"
                },
                "privilegeName": {
                    "description": "The name of the privilege.",
                    "type": "string"
                },
                "isOuScopable": {
                    "description": "If the privilege can be restricted to an organization unit.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UserAddress": {
            "description": "JSON template for address.",
            "id": "UserAddress",
            "properties": {
                "region": {
                    "description": "Region.",
                    "type": "string"
                },
                "type": {
                    "description": "Each entry can have a type which indicates standard values of that entry. For example address could be of home work etc. In addition to the standard type an entry can have a custom type and can take any value. Such type should have the CUSTOM value as type and also have a customType value.",
                    "type": "string"
                },
                "postalCode": {
                    "description": "Postal code.",
                    "type": "string"
                },
                "countryCode": {
                    "description": "Country code.",
                    "type": "string"
                },
                "sourceIsStructured": {
                    "description": "User supplied address was structured. Structured addresses are NOT supported at this time. You might be able to write structured addresses but any values will eventually be clobbered.",
                    "type": "boolean"
                },
                "extendedAddress": {
                    "description": "Extended Address.",
                    "type": "string"
                },
                "customType": {
                    "description": "Custom type.",
                    "type": "string"
                },
                "locality": {
                    "description": "Locality.",
                    "type": "string"
                },
                "poBox": {
                    "description": "Other parts of address.",
                    "type": "string"
                },
                "streetAddress": {
                    "description": "Street.",
                    "type": "string"
                },
                "formatted": {
                    "description": "Formatted address.",
                    "type": "string"
                },
                "country": {
                    "description": "Country.",
                    "type": "string"
                },
                "primary": {
                    "description": "If this is user's primary address. Only one entry could be marked as primary.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Users": {
            "description": "STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "Users",
            "properties": {
                "trigger_event": {
                    "description": "Event that triggered this response (only used in case of Push Response)",
                    "type": "string"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "Token used to access next page of this result.",
                    "type": "string"
                },
                "users": {
                    "description": "List of user objects.",
                    "items": {
                        "$ref": "User"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "admin#directory#users",
                    "description": "Kind of resource this is.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserOrganization": {
            "description": "JSON template for an organization entry.",
            "id": "UserOrganization",
            "properties": {
                "customType": {
                    "description": "Custom type.",
                    "type": "string"
                },
                "title": {
                    "description": "Title (designation) of the user in the organization.",
                    "type": "string"
                },
                "costCenter": {
                    "description": "The cost center of the users department.",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the organization.",
                    "type": "string"
                },
                "type": {
                    "description": "Each entry can have a type which indicates standard types of that entry. For example organization could be of school work etc. In addition to the standard type an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a CustomType value.",
                    "type": "string"
                },
                "primary": {
                    "description": "If it user's primary organization.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the organization",
                    "type": "string"
                },
                "department": {
                    "description": "Department within the organization.",
                    "type": "string"
                },
                "fullTimeEquivalent": {
                    "description": "The full-time equivalent millipercent within the organization (100000 = 100%).",
                    "format": "int32",
                    "type": "integer"
                },
                "location": {
                    "description": "Location of the organization. This need not be fully qualified address.",
                    "type": "string"
                },
                "domain": {
                    "description": "The domain to which the organization belongs to.",
                    "type": "string"
                },
                "symbol": {
                    "description": "Symbol of the organization.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChromeOsDeviceAction": {
            "id": "ChromeOsDeviceAction",
            "properties": {
                "deprovisionReason": {
                    "type": "string"
                },
                "action": {
                    "annotations": {
                        "required": [
                            "directory.chromeosdevices.action"
                        ]
                    },
                    "description": "Action to be taken on the ChromeOs Device",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Token": {
            "description": "JSON template for token resource in Directory API. STEPLADDER: Generated unstable field number for field 'kind'. (See http://go/stepladder-help#fieldNumber) STEPLADDER: Generated unstable field number for field 'etag'. (See http://go/stepladder-help#fieldNumber)",
            "id": "Token",
            "properties": {
                "userKey": {
                    "description": "The unique ID of the user that issued the token.",
                    "type": "string"
                },
                "clientId": {
                    "description": "The Client ID of the application the token is issued to.",
                    "type": "string"
                },
                "kind": {
                    "default": "admin#directory#token",
                    "description": "The type of the API resource. This is always admin#directory#token.",
                    "type": "string"
                },
                "nativeApp": {
                    "description": "Whether the token is issued to an installed application. The value is true if the application is installed to a desktop or mobile device.",
                    "type": "boolean"
                },
                "etag": {
                    "description": "ETag of the resource.",
                    "type": "string"
                },
                "scopes": {
                    "description": "A list of authorization scopes the application is granted.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "displayText": {
                    "description": "The displayable name of the application the token is issued to.",
                    "type": "string"
                },
                "anonymous": {
                    "description": "Whether the application is registered with Google. The value is true if the application has an anonymous Client ID.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Aliases": {
            "description": "JSON response template to list aliases in Directory API.",
            "id": "Aliases",
            "properties": {
                "aliases": {
                    "items": {
                        "type": "any"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "admin#directory#aliases",
                    "type": "string"
                },
                "etag": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Admin SDK",
    "version": "directory_v1"
}