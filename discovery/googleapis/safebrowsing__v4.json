{
    "basePath": "",
    "baseUrl": "https://safebrowsing.googleapis.com/",
    "batchPath": "batch",
    "description": "Enables client applications to check web resources (most commonly URLs) against Google-generated lists of unsafe web resources.",
    "discoveryVersion": "v1",
    "documentationLink": "https://developers.google.com/safe-browsing/",
    "etag": "\"tbys6C40o18GZwyMen5GMkdK-3s/Yoew02BLq1-_QyzwsVjtSdddocY\"",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "safebrowsing:v4",
    "kind": "discovery#restDescription",
    "name": "safebrowsing",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "bearer_token": {
            "description": "OAuth bearer token.",
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "pp": {
            "default": "true",
            "description": "Pretty-print response.",
            "location": "query",
            "type": "boolean"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "$.xgafv": {
            "description": "V1 error format.",
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "threatMatches": {
            "methods": {
                "find": {
                    "description": "Finds the threat entries that match the Safe Browsing lists.",
                    "httpMethod": "POST",
                    "id": "safebrowsing.threatMatches.find",
                    "path": "v4/threatMatches:find",
                    "request": {
                        "$ref": "FindThreatMatchesRequest"
                    },
                    "response": {
                        "$ref": "FindThreatMatchesResponse"
                    }
                }
            }
        },
        "threatListUpdates": {
            "methods": {
                "fetch": {
                    "description": "Fetches the most recent threat list updates. A client can request updates for multiple lists at once.",
                    "httpMethod": "POST",
                    "id": "safebrowsing.threatListUpdates.fetch",
                    "path": "v4/threatListUpdates:fetch",
                    "request": {
                        "$ref": "FetchThreatListUpdatesRequest"
                    },
                    "response": {
                        "$ref": "FetchThreatListUpdatesResponse"
                    }
                }
            }
        },
        "fullHashes": {
            "methods": {
                "find": {
                    "description": "Finds the full hashes that match the requested hash prefixes.",
                    "httpMethod": "POST",
                    "id": "safebrowsing.fullHashes.find",
                    "path": "v4/fullHashes:find",
                    "request": {
                        "$ref": "FindFullHashesRequest"
                    },
                    "response": {
                        "$ref": "FindFullHashesResponse"
                    }
                }
            }
        },
        "threatLists": {
            "methods": {
                "list": {
                    "description": "Lists the Safe Browsing threat lists available for download.",
                    "httpMethod": "GET",
                    "id": "safebrowsing.threatLists.list",
                    "path": "v4/threatLists",
                    "response": {
                        "$ref": "ListThreatListsResponse"
                    }
                }
            }
        }
    },
    "revision": "20160520",
    "rootUrl": "https://safebrowsing.googleapis.com/",
    "schemas": {
        "FindThreatMatchesRequest": {
            "description": "Request to check entries against lists.",
            "id": "FindThreatMatchesRequest",
            "properties": {
                "client": {
                    "$ref": "ClientInfo",
                    "description": "The client metadata."
                },
                "threatInfo": {
                    "$ref": "ThreatInfo",
                    "description": "The lists and entries to be checked for matches."
                }
            },
            "type": "object"
        },
        "ClientInfo": {
            "description": "The client metadata associated with Safe Browsing API requests.",
            "id": "ClientInfo",
            "properties": {
                "clientId": {
                    "description": "A client ID that (hopefully) uniquely identifies the client implementation of the Safe Browsing API.",
                    "type": "string"
                },
                "clientVersion": {
                    "description": "The version of the client implementation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ThreatInfo": {
            "description": "The information regarding one or more threats that a client submits when checking for matches in threat lists.",
            "id": "ThreatInfo",
            "properties": {
                "threatTypes": {
                    "description": "The threat types to be checked.",
                    "enumDescriptions": [
                        "Unknown.",
                        "Malware threat type.",
                        "Social engineering threat type.",
                        "Unwanted software threat type.",
                        "Potentially harmful application threat type."
                    ],
                    "items": {
                        "enum": [
                            "THREAT_TYPE_UNSPECIFIED",
                            "MALWARE",
                            "SOCIAL_ENGINEERING",
                            "UNWANTED_SOFTWARE",
                            "POTENTIALLY_HARMFUL_APPLICATION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "platformTypes": {
                    "description": "The platform types to be checked.",
                    "enumDescriptions": [
                        "Unknown platform.",
                        "Threat posed to Windows.",
                        "Threat posed to Linux.",
                        "Threat posed to Android.",
                        "Threat posed to OS X.",
                        "Threat posed to iOS.",
                        "Threat posed to at least one of the defined platforms.",
                        "Threat posed to all defined platforms.",
                        "Threat posed to Chrome."
                    ],
                    "items": {
                        "enum": [
                            "PLATFORM_TYPE_UNSPECIFIED",
                            "WINDOWS",
                            "LINUX",
                            "ANDROID",
                            "OSX",
                            "IOS",
                            "ANY_PLATFORM",
                            "ALL_PLATFORMS",
                            "CHROME"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "threatEntryTypes": {
                    "description": "The entry types to be checked.",
                    "enumDescriptions": [
                        "Unspecified.",
                        "A URL.",
                        "An executable program.",
                        "An IP range."
                    ],
                    "items": {
                        "enum": [
                            "THREAT_ENTRY_TYPE_UNSPECIFIED",
                            "URL",
                            "EXECUTABLE",
                            "IP_RANGE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "threatEntries": {
                    "description": "The threat entries to be checked.",
                    "items": {
                        "$ref": "ThreatEntry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ThreatEntry": {
            "description": "An individual threat; for example, a malicious URL or its hash representation. Only one of these fields should be set.",
            "id": "ThreatEntry",
            "properties": {
                "hash": {
                    "description": "A hash prefix, consisting of the most significant 4-32 bytes of a SHA256 hash. This field is in binary format.",
                    "format": "byte",
                    "type": "string"
                },
                "url": {
                    "description": "A URL.",
                    "type": "string"
                },
                "digest": {
                    "description": "The digest of an executable in SHA256 format. The API supports both binary and hex digests.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FindThreatMatchesResponse": {
            "id": "FindThreatMatchesResponse",
            "properties": {
                "matches": {
                    "description": "The threat list matches.",
                    "items": {
                        "$ref": "ThreatMatch"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ThreatMatch": {
            "description": "A match when checking a threat entry in the Safe Browsing threat lists.",
            "id": "ThreatMatch",
            "properties": {
                "threatType": {
                    "description": "The threat type matching this threat.",
                    "enum": [
                        "THREAT_TYPE_UNSPECIFIED",
                        "MALWARE",
                        "SOCIAL_ENGINEERING",
                        "UNWANTED_SOFTWARE",
                        "POTENTIALLY_HARMFUL_APPLICATION"
                    ],
                    "type": "string"
                },
                "platformType": {
                    "description": "The platform type matching this threat.",
                    "enum": [
                        "PLATFORM_TYPE_UNSPECIFIED",
                        "WINDOWS",
                        "LINUX",
                        "ANDROID",
                        "OSX",
                        "IOS",
                        "ANY_PLATFORM",
                        "ALL_PLATFORMS",
                        "CHROME"
                    ],
                    "type": "string"
                },
                "threatEntryType": {
                    "description": "The threat entry type matching this threat.",
                    "enum": [
                        "THREAT_ENTRY_TYPE_UNSPECIFIED",
                        "URL",
                        "EXECUTABLE",
                        "IP_RANGE"
                    ],
                    "type": "string"
                },
                "threat": {
                    "$ref": "ThreatEntry",
                    "description": "The threat matching this threat."
                },
                "threatEntryMetadata": {
                    "$ref": "ThreatEntryMetadata",
                    "description": "Optional metadata associated with this threat."
                },
                "cacheDuration": {
                    "description": "The cache lifetime for the returned match. Clients must not cache this response for more than this duration to avoid false positives.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ThreatEntryMetadata": {
            "description": "The metadata associated with a specific threat entry. The client is expected to know the metadata key/value pairs associated with each threat type.",
            "id": "ThreatEntryMetadata",
            "properties": {
                "entries": {
                    "description": "The metadata entries.",
                    "items": {
                        "$ref": "MetadataEntry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MetadataEntry": {
            "description": "A single metadata entry.",
            "id": "MetadataEntry",
            "properties": {
                "key": {
                    "description": "The metadata entry key.",
                    "format": "byte",
                    "type": "string"
                },
                "value": {
                    "description": "The metadata entry value.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FetchThreatListUpdatesRequest": {
            "description": "Describes a Safe Browsing API update request. Clients can request updates for multiple lists in a single request. NOTE: Field index 2 is unused. NEXT: 4",
            "id": "FetchThreatListUpdatesRequest",
            "properties": {
                "client": {
                    "$ref": "ClientInfo",
                    "description": "The client metadata."
                },
                "listUpdateRequests": {
                    "description": "The requested threat list updates.",
                    "items": {
                        "$ref": "ListUpdateRequest"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListUpdateRequest": {
            "description": "A single list update request.",
            "id": "ListUpdateRequest",
            "properties": {
                "threatType": {
                    "description": "The type of threat posed by entries present in the list.",
                    "enum": [
                        "THREAT_TYPE_UNSPECIFIED",
                        "MALWARE",
                        "SOCIAL_ENGINEERING",
                        "UNWANTED_SOFTWARE",
                        "POTENTIALLY_HARMFUL_APPLICATION"
                    ],
                    "type": "string"
                },
                "platformType": {
                    "description": "The type of platform at risk by entries present in the list.",
                    "enum": [
                        "PLATFORM_TYPE_UNSPECIFIED",
                        "WINDOWS",
                        "LINUX",
                        "ANDROID",
                        "OSX",
                        "IOS",
                        "ANY_PLATFORM",
                        "ALL_PLATFORMS",
                        "CHROME"
                    ],
                    "type": "string"
                },
                "threatEntryType": {
                    "description": "The types of entries present in the list.",
                    "enum": [
                        "THREAT_ENTRY_TYPE_UNSPECIFIED",
                        "URL",
                        "EXECUTABLE",
                        "IP_RANGE"
                    ],
                    "type": "string"
                },
                "state": {
                    "description": "The current state of the client for the requested list (the encrypted client state that was received from the last successful list update).",
                    "format": "byte",
                    "type": "string"
                },
                "constraints": {
                    "$ref": "Constraints",
                    "description": "The constraints associated with this request."
                }
            },
            "type": "object"
        },
        "Constraints": {
            "description": "The constraints for this update.",
            "id": "Constraints",
            "properties": {
                "maxUpdateEntries": {
                    "description": "The maximum size in number of entries. The update will not contain more entries than this value. This should be a power of 2 between 2**10 and 2**20. If zero, no update size limit is set.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxDatabaseEntries": {
                    "description": "Sets the maximum number of entries that the client is willing to have in the local database. This should be a power of 2 between 2**10 and 2**20. If zero, no database size limit is set.",
                    "format": "int32",
                    "type": "integer"
                },
                "region": {
                    "description": "Requests the list for a specific geographic location. If not set the server may pick that value based on the user's IP address. Expects ISO 3166-1 alpha-2 format.",
                    "type": "string"
                },
                "supportedCompressions": {
                    "description": "The compression types supported by the client.",
                    "enumDescriptions": [
                        "Unknown.",
                        "Raw, uncompressed data.",
                        "Rice-Golomb encoded data."
                    ],
                    "items": {
                        "enum": [
                            "COMPRESSION_TYPE_UNSPECIFIED",
                            "RAW",
                            "RICE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FetchThreatListUpdatesResponse": {
            "id": "FetchThreatListUpdatesResponse",
            "properties": {
                "listUpdateResponses": {
                    "description": "The list updates requested by the clients.",
                    "items": {
                        "$ref": "ListUpdateResponse"
                    },
                    "type": "array"
                },
                "minimumWaitDuration": {
                    "description": "The minimum duration the client must wait before issuing any update request. If this field is not set clients may update as soon as they want.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListUpdateResponse": {
            "description": "An update to an individual list.",
            "id": "ListUpdateResponse",
            "properties": {
                "threatType": {
                    "description": "The threat type for which data is returned.",
                    "enum": [
                        "THREAT_TYPE_UNSPECIFIED",
                        "MALWARE",
                        "SOCIAL_ENGINEERING",
                        "UNWANTED_SOFTWARE",
                        "POTENTIALLY_HARMFUL_APPLICATION"
                    ],
                    "type": "string"
                },
                "threatEntryType": {
                    "description": "The format of the threats.",
                    "enum": [
                        "THREAT_ENTRY_TYPE_UNSPECIFIED",
                        "URL",
                        "EXECUTABLE",
                        "IP_RANGE"
                    ],
                    "type": "string"
                },
                "platformType": {
                    "description": "The platform type for which data is returned.",
                    "enum": [
                        "PLATFORM_TYPE_UNSPECIFIED",
                        "WINDOWS",
                        "LINUX",
                        "ANDROID",
                        "OSX",
                        "IOS",
                        "ANY_PLATFORM",
                        "ALL_PLATFORMS",
                        "CHROME"
                    ],
                    "type": "string"
                },
                "responseType": {
                    "description": "The type of response. This may indicate that an action is required by the client when the response is received.",
                    "enum": [
                        "RESPONSE_TYPE_UNSPECIFIED",
                        "PARTIAL_UPDATE",
                        "FULL_UPDATE"
                    ],
                    "type": "string"
                },
                "additions": {
                    "description": "A set of entries to add to a local threat type's list. Repeated to allow for a combination of compressed and raw data to be sent in a single response.",
                    "items": {
                        "$ref": "ThreatEntrySet"
                    },
                    "type": "array"
                },
                "removals": {
                    "description": "A set of entries to remove from a local threat type's list. Repeated for the same reason as above.",
                    "items": {
                        "$ref": "ThreatEntrySet"
                    },
                    "type": "array"
                },
                "newClientState": {
                    "description": "The new client state, in encrypted format. Opaque to clients.",
                    "format": "byte",
                    "type": "string"
                },
                "checksum": {
                    "$ref": "Checksum",
                    "description": "The expected SHA256 hash of the client state; that is, of the sorted list of all hashes present in the database after applying the provided update. If the client state doesn't match the expected state, the client must disregard this update and retry later."
                }
            },
            "type": "object"
        },
        "ThreatEntrySet": {
            "description": "A set of threats that should be added or removed from a client's local database.",
            "id": "ThreatEntrySet",
            "properties": {
                "compressionType": {
                    "description": "The compression type for the entries in this set.",
                    "enum": [
                        "COMPRESSION_TYPE_UNSPECIFIED",
                        "RAW",
                        "RICE"
                    ],
                    "type": "string"
                },
                "rawHashes": {
                    "$ref": "RawHashes",
                    "description": "The raw SHA256-formatted entries."
                },
                "rawIndices": {
                    "$ref": "RawIndices",
                    "description": "The raw removal indices for a local list."
                },
                "riceHashes": {
                    "$ref": "RiceDeltaEncoding",
                    "description": "The encoded 4-byte prefixes of SHA256-formatted entries, using a Golomb-Rice encoding."
                },
                "riceIndices": {
                    "$ref": "RiceDeltaEncoding",
                    "description": "The encoded local, lexicographically-sorted list indices, using a Golomb-Rice encoding. Used for sending compressed removal indices."
                }
            },
            "type": "object"
        },
        "RawHashes": {
            "description": "The uncompressed threat entries in hash format of a particular prefix length. Hashes can be anywhere from 4 to 32 bytes in size. A large majority are 4 bytes, but some hashes are lengthened if they collide with the hash of a popular URL. Used for sending ThreatEntrySet to clients that do not support compression, or when sending non-4-byte hashes to clients that do support compression.",
            "id": "RawHashes",
            "properties": {
                "prefixSize": {
                    "description": "The number of bytes for each prefix encoded below. This field can be anywhere from 4 (shortest prefix) to 32 (full SHA256 hash).",
                    "format": "int32",
                    "type": "integer"
                },
                "rawHashes": {
                    "description": "The hashes, all concatenated into one long string. Each hash has a prefix size of |prefix_size| above. Hashes are sorted in lexicographic order.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RawIndices": {
            "description": "A set of raw indices to remove from a local list.",
            "id": "RawIndices",
            "properties": {
                "indices": {
                    "description": "The indices to remove from a lexicographically-sorted local list.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RiceDeltaEncoding": {
            "description": "The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or compressed removal indices.",
            "id": "RiceDeltaEncoding",
            "properties": {
                "firstValue": {
                    "description": "The offset of the first entry in the encoded data, or, if only a single integer was encoded, that single integer's value.",
                    "format": "int64",
                    "type": "string"
                },
                "riceParameter": {
                    "description": "The Golomb-Rice parameter, which is a number between 2 and 28. This field is missing (that is, zero) if `num_entries` is zero.",
                    "format": "int32",
                    "type": "integer"
                },
                "numEntries": {
                    "description": "The number of entries that are delta encoded in the encoded data. If only a single integer was encoded, this will be zero and the single value will be stored in `first_value`.",
                    "format": "int32",
                    "type": "integer"
                },
                "encodedData": {
                    "description": "The encoded deltas that are encoded using the Golomb-Rice coder.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Checksum": {
            "description": "The expected state of a client's local database.",
            "id": "Checksum",
            "properties": {
                "sha256": {
                    "description": "The SHA256 hash of the client state; that is, of the sorted list of all hashes present in the database.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FindFullHashesRequest": {
            "description": "Request to return full hashes matched by the provided hash prefixes.",
            "id": "FindFullHashesRequest",
            "properties": {
                "client": {
                    "$ref": "ClientInfo",
                    "description": "The client metadata."
                },
                "clientStates": {
                    "description": "The current client states for each of the client's local threat lists.",
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "threatInfo": {
                    "$ref": "ThreatInfo",
                    "description": "The lists and hashes to be checked."
                }
            },
            "type": "object"
        },
        "FindFullHashesResponse": {
            "id": "FindFullHashesResponse",
            "properties": {
                "matches": {
                    "description": "The full hashes that matched the requested prefixes.",
                    "items": {
                        "$ref": "ThreatMatch"
                    },
                    "type": "array"
                },
                "minimumWaitDuration": {
                    "description": "The minimum duration the client must wait before issuing any find hashes request. If this field is not set, clients can issue a request as soon as they want.",
                    "type": "string"
                },
                "negativeCacheDuration": {
                    "description": "For requested entities that did not match the threat list, how long to cache the response.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListThreatListsResponse": {
            "id": "ListThreatListsResponse",
            "properties": {
                "threatLists": {
                    "description": "The lists available for download by the client.",
                    "items": {
                        "$ref": "ThreatListDescriptor"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ThreatListDescriptor": {
            "description": "Describes an individual threat list. A list is defined by three parameters: the type of threat posed, the type of platform targeted by the threat, and the type of entries in the list.",
            "id": "ThreatListDescriptor",
            "properties": {
                "threatType": {
                    "description": "The threat type posed by the list's entries.",
                    "enum": [
                        "THREAT_TYPE_UNSPECIFIED",
                        "MALWARE",
                        "SOCIAL_ENGINEERING",
                        "UNWANTED_SOFTWARE",
                        "POTENTIALLY_HARMFUL_APPLICATION"
                    ],
                    "type": "string"
                },
                "platformType": {
                    "description": "The platform type targeted by the list's entries.",
                    "enum": [
                        "PLATFORM_TYPE_UNSPECIFIED",
                        "WINDOWS",
                        "LINUX",
                        "ANDROID",
                        "OSX",
                        "IOS",
                        "ANY_PLATFORM",
                        "ALL_PLATFORMS",
                        "CHROME"
                    ],
                    "type": "string"
                },
                "threatEntryType": {
                    "description": "The entry types contained in the list.",
                    "enum": [
                        "THREAT_ENTRY_TYPE_UNSPECIFIED",
                        "URL",
                        "EXECUTABLE",
                        "IP_RANGE"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Safe Browsing APIs",
    "version": "v4"
}