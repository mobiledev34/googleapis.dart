{
    "basePath": "/identitytoolkit/v3/relyingparty/",
    "baseUrl": "https://www.googleapis.com/identitytoolkit/v3/relyingparty/",
    "batchPath": "batch",
    "canonicalName": "Identity Toolkit",
    "description": "Help the third party sites to implement federated login.",
    "discoveryVersion": "v1",
    "documentationLink": "https://developers.google.com/identity-toolkit/v3/",
    "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/EhuUOPPlYPrmY4sLFYuHLiUXEXw\"",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "identitytoolkit:v3",
    "kind": "discovery#restDescription",
    "name": "identitytoolkit",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "alt": {
            "default": "json",
            "description": "Data format for the response.",
            "enum": [
                "json"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json"
            ],
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
            "location": "query",
            "type": "string"
        },
        "userIp": {
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "relyingparty": {
            "methods": {
                "createAuthUri": {
                    "description": "Creates the URI used by the IdP to authenticate the user.",
                    "httpMethod": "POST",
                    "id": "identitytoolkit.relyingparty.createAuthUri",
                    "path": "createAuthUri",
                    "request": {
                        "$ref": "IdentitytoolkitRelyingpartyCreateAuthUriRequest"
                    },
                    "response": {
                        "$ref": "CreateAuthUriResponse"
                    }
                },
                "deleteAccount": {
                    "description": "Delete user account.",
                    "httpMethod": "POST",
                    "id": "identitytoolkit.relyingparty.deleteAccount",
                    "path": "deleteAccount",
                    "request": {
                        "$ref": "IdentitytoolkitRelyingpartyDeleteAccountRequest"
                    },
                    "response": {
                        "$ref": "DeleteAccountResponse"
                    }
                },
                "downloadAccount": {
                    "description": "Batch download user accounts.",
                    "httpMethod": "POST",
                    "id": "identitytoolkit.relyingparty.downloadAccount",
                    "path": "downloadAccount",
                    "request": {
                        "$ref": "IdentitytoolkitRelyingpartyDownloadAccountRequest"
                    },
                    "response": {
                        "$ref": "DownloadAccountResponse"
                    }
                },
                "getAccountInfo": {
                    "description": "Returns the account info.",
                    "httpMethod": "POST",
                    "id": "identitytoolkit.relyingparty.getAccountInfo",
                    "path": "getAccountInfo",
                    "request": {
                        "$ref": "IdentitytoolkitRelyingpartyGetAccountInfoRequest"
                    },
                    "response": {
                        "$ref": "GetAccountInfoResponse"
                    }
                },
                "getOobConfirmationCode": {
                    "description": "Get a code for user action confirmation.",
                    "httpMethod": "POST",
                    "id": "identitytoolkit.relyingparty.getOobConfirmationCode",
                    "path": "getOobConfirmationCode",
                    "request": {
                        "$ref": "Relyingparty"
                    },
                    "response": {
                        "$ref": "GetOobConfirmationCodeResponse"
                    }
                },
                "getPublicKeys": {
                    "description": "Get token signing public key.",
                    "httpMethod": "GET",
                    "id": "identitytoolkit.relyingparty.getPublicKeys",
                    "path": "publicKeys",
                    "response": {
                        "$ref": "IdentitytoolkitRelyingpartyGetPublicKeysResponse"
                    }
                },
                "getRecaptchaParam": {
                    "description": "Get recaptcha secure param.",
                    "httpMethod": "GET",
                    "id": "identitytoolkit.relyingparty.getRecaptchaParam",
                    "path": "getRecaptchaParam",
                    "response": {
                        "$ref": "GetRecaptchaParamResponse"
                    }
                },
                "resetPassword": {
                    "description": "Reset password for a user.",
                    "httpMethod": "POST",
                    "id": "identitytoolkit.relyingparty.resetPassword",
                    "path": "resetPassword",
                    "request": {
                        "$ref": "IdentitytoolkitRelyingpartyResetPasswordRequest"
                    },
                    "response": {
                        "$ref": "ResetPasswordResponse"
                    }
                },
                "setAccountInfo": {
                    "description": "Set account info for a user.",
                    "httpMethod": "POST",
                    "id": "identitytoolkit.relyingparty.setAccountInfo",
                    "path": "setAccountInfo",
                    "request": {
                        "$ref": "IdentitytoolkitRelyingpartySetAccountInfoRequest"
                    },
                    "response": {
                        "$ref": "SetAccountInfoResponse"
                    }
                },
                "uploadAccount": {
                    "description": "Batch upload existing user accounts.",
                    "httpMethod": "POST",
                    "id": "identitytoolkit.relyingparty.uploadAccount",
                    "path": "uploadAccount",
                    "request": {
                        "$ref": "IdentitytoolkitRelyingpartyUploadAccountRequest"
                    },
                    "response": {
                        "$ref": "UploadAccountResponse"
                    }
                },
                "verifyAssertion": {
                    "description": "Verifies the assertion returned by the IdP.",
                    "httpMethod": "POST",
                    "id": "identitytoolkit.relyingparty.verifyAssertion",
                    "path": "verifyAssertion",
                    "request": {
                        "$ref": "IdentitytoolkitRelyingpartyVerifyAssertionRequest"
                    },
                    "response": {
                        "$ref": "VerifyAssertionResponse"
                    }
                },
                "verifyPassword": {
                    "description": "Verifies the user entered password.",
                    "httpMethod": "POST",
                    "id": "identitytoolkit.relyingparty.verifyPassword",
                    "path": "verifyPassword",
                    "request": {
                        "$ref": "IdentitytoolkitRelyingpartyVerifyPasswordRequest"
                    },
                    "response": {
                        "$ref": "VerifyPasswordResponse"
                    }
                }
            }
        }
    },
    "revision": "20150902",
    "rootUrl": "https://www.googleapis.com/",
    "schemas": {
        "CreateAuthUriResponse": {
            "description": "Response of creating the IDP authentication URL.",
            "id": "CreateAuthUriResponse",
            "properties": {
                "authUri": {
                    "description": "The URI used by the IDP to authenticate the user.",
                    "type": "string"
                },
                "captchaRequired": {
                    "description": "True if captcha is required.",
                    "type": "boolean"
                },
                "forExistingProvider": {
                    "description": "True if the authUri is for user's existing provider.",
                    "type": "boolean"
                },
                "kind": {
                    "default": "identitytoolkit#CreateAuthUriResponse",
                    "description": "The fixed string identitytoolkit#CreateAuthUriResponse\".",
                    "type": "string"
                },
                "providerId": {
                    "description": "The provider ID of the auth URI.",
                    "type": "string"
                },
                "registered": {
                    "description": "Whether the user is registered if the identifier is an email.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DeleteAccountResponse": {
            "description": "Respone of deleting account.",
            "id": "DeleteAccountResponse",
            "properties": {
                "kind": {
                    "default": "identitytoolkit#DeleteAccountResponse",
                    "description": "The fixed string \"identitytoolkit#DeleteAccountResponse\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadAccountResponse": {
            "description": "Respone of downloading accounts in batch.",
            "id": "DownloadAccountResponse",
            "properties": {
                "kind": {
                    "default": "identitytoolkit#DownloadAccountResponse",
                    "description": "The fixed string \"identitytoolkit#DownloadAccountResponse\".",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "The next page token. To be used in a subsequent request to return the next page of results.",
                    "type": "string"
                },
                "users": {
                    "description": "The user accounts data.",
                    "items": {
                        "$ref": "UserInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetAccountInfoResponse": {
            "description": "Response of getting account information.",
            "id": "GetAccountInfoResponse",
            "properties": {
                "kind": {
                    "default": "identitytoolkit#GetAccountInfoResponse",
                    "description": "The fixed string \"identitytoolkit#GetAccountInfoResponse\".",
                    "type": "string"
                },
                "users": {
                    "description": "The info of the users.",
                    "items": {
                        "$ref": "UserInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetOobConfirmationCodeResponse": {
            "description": "Response of getting a code for user confirmation (reset password, change email etc.).",
            "id": "GetOobConfirmationCodeResponse",
            "properties": {
                "kind": {
                    "default": "identitytoolkit#GetOobConfirmationCodeResponse",
                    "description": "The fixed string \"identitytoolkit#GetOobConfirmationCodeResponse\".",
                    "type": "string"
                },
                "oobCode": {
                    "description": "The code to be send to the user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetRecaptchaParamResponse": {
            "description": "Response of getting recaptcha param.",
            "id": "GetRecaptchaParamResponse",
            "properties": {
                "kind": {
                    "default": "identitytoolkit#GetRecaptchaParamResponse",
                    "description": "The fixed string \"identitytoolkit#GetRecaptchaParamResponse\".",
                    "type": "string"
                },
                "recaptchaSiteKey": {
                    "description": "Site key registered at recaptcha.",
                    "type": "string"
                },
                "recaptchaStoken": {
                    "description": "The stoken field for the recaptcha widget, used to request captcha challenge.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IdentitytoolkitRelyingpartyCreateAuthUriRequest": {
            "description": "Request to get the IDP authentication URL.",
            "id": "IdentitytoolkitRelyingpartyCreateAuthUriRequest",
            "properties": {
                "appId": {
                    "description": "The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.",
                    "type": "string"
                },
                "clientId": {
                    "description": "The relying party OAuth client ID.",
                    "type": "string"
                },
                "context": {
                    "description": "The opaque value used by the client to maintain context info between the authentication request and the IDP callback.",
                    "type": "string"
                },
                "continueUri": {
                    "description": "The URI to which the IDP redirects the user after the federated login flow.",
                    "type": "string"
                },
                "identifier": {
                    "description": "The email or federated ID of the user.",
                    "type": "string"
                },
                "oauthConsumerKey": {
                    "description": "The developer's consumer key for OpenId OAuth Extension",
                    "type": "string"
                },
                "oauthScope": {
                    "description": "Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant",
                    "type": "string"
                },
                "openidRealm": {
                    "description": "Optional realm for OpenID protocol. The sub string \"scheme://domain:port\" of the param \"continueUri\" is used if this is not set.",
                    "type": "string"
                },
                "otaApp": {
                    "description": "The native app package for OTA installation.",
                    "type": "string"
                },
                "providerId": {
                    "description": "The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IdentitytoolkitRelyingpartyDeleteAccountRequest": {
            "description": "Request to delete account.",
            "id": "IdentitytoolkitRelyingpartyDeleteAccountRequest",
            "properties": {
                "localId": {
                    "description": "The local ID of the user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IdentitytoolkitRelyingpartyDownloadAccountRequest": {
            "description": "Request to download user account in batch.",
            "id": "IdentitytoolkitRelyingpartyDownloadAccountRequest",
            "properties": {
                "maxResults": {
                    "description": "The max number of results to return in the response.",
                    "format": "uint32",
                    "type": "integer"
                },
                "nextPageToken": {
                    "description": "The token for the next page. This should be taken from the previous response.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IdentitytoolkitRelyingpartyGetAccountInfoRequest": {
            "description": "Request to get the account information.",
            "id": "IdentitytoolkitRelyingpartyGetAccountInfoRequest",
            "properties": {
                "email": {
                    "description": "The list of emails of the users to inquiry.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "idToken": {
                    "description": "The GITKit token of the authenticated user.",
                    "type": "string"
                },
                "localId": {
                    "description": "The list of local ID's of the users to inquiry.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IdentitytoolkitRelyingpartyGetPublicKeysResponse": {
            "additionalProperties": {
                "type": "string"
            },
            "description": "Respone of getting public keys.",
            "id": "IdentitytoolkitRelyingpartyGetPublicKeysResponse",
            "type": "object"
        },
        "IdentitytoolkitRelyingpartyResetPasswordRequest": {
            "description": "Request to reset the password.",
            "id": "IdentitytoolkitRelyingpartyResetPasswordRequest",
            "properties": {
                "email": {
                    "description": "The email address of the user.",
                    "type": "string"
                },
                "newPassword": {
                    "description": "The new password inputted by the user.",
                    "type": "string"
                },
                "oldPassword": {
                    "description": "The old password inputted by the user.",
                    "type": "string"
                },
                "oobCode": {
                    "description": "The confirmation code.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IdentitytoolkitRelyingpartySetAccountInfoRequest": {
            "description": "Request to set the account information.",
            "id": "IdentitytoolkitRelyingpartySetAccountInfoRequest",
            "properties": {
                "captchaChallenge": {
                    "description": "The captcha challenge.",
                    "type": "string"
                },
                "captchaResponse": {
                    "description": "Response to the captcha.",
                    "type": "string"
                },
                "disableUser": {
                    "description": "Whether to disable the user.",
                    "type": "boolean"
                },
                "displayName": {
                    "description": "The name of the user.",
                    "type": "string"
                },
                "email": {
                    "description": "The email of the user.",
                    "type": "string"
                },
                "emailVerified": {
                    "description": "Mark the email as verified or not.",
                    "type": "boolean"
                },
                "idToken": {
                    "description": "The GITKit token of the authenticated user.",
                    "type": "string"
                },
                "localId": {
                    "description": "The local ID of the user.",
                    "type": "string"
                },
                "oobCode": {
                    "description": "The out-of-band code of the change email request.",
                    "type": "string"
                },
                "password": {
                    "description": "The new password of the user.",
                    "type": "string"
                },
                "provider": {
                    "description": "The associated IDPs of the user.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "upgradeToFederatedLogin": {
                    "description": "Mark the user to upgrade to federated login.",
                    "type": "boolean"
                },
                "validSince": {
                    "description": "Timestamp in seconds for valid login token.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IdentitytoolkitRelyingpartyUploadAccountRequest": {
            "description": "Request to upload user account in batch.",
            "id": "IdentitytoolkitRelyingpartyUploadAccountRequest",
            "properties": {
                "hashAlgorithm": {
                    "description": "The password hash algorithm.",
                    "type": "string"
                },
                "memoryCost": {
                    "description": "Memory cost for hash calculation. Used by scrypt similar algorithms.",
                    "format": "int32",
                    "type": "integer"
                },
                "rounds": {
                    "description": "Rounds for hash calculation. Used by scrypt and similar algorithms.",
                    "format": "int32",
                    "type": "integer"
                },
                "saltSeparator": {
                    "description": "The salt separator.",
                    "format": "byte",
                    "type": "string"
                },
                "signerKey": {
                    "description": "The key for to hash the password.",
                    "format": "byte",
                    "type": "string"
                },
                "users": {
                    "description": "The account info to be stored.",
                    "items": {
                        "$ref": "UserInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IdentitytoolkitRelyingpartyVerifyAssertionRequest": {
            "description": "Request to verify the IDP assertion.",
            "id": "IdentitytoolkitRelyingpartyVerifyAssertionRequest",
            "properties": {
                "pendingIdToken": {
                    "description": "The GITKit token for the non-trusted IDP pending to be confirmed by the user.",
                    "type": "string"
                },
                "postBody": {
                    "description": "The post body if the request is a HTTP POST.",
                    "type": "string"
                },
                "requestUri": {
                    "description": "The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.",
                    "type": "string"
                },
                "returnRefreshToken": {
                    "description": "Whether to return refresh tokens.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IdentitytoolkitRelyingpartyVerifyPasswordRequest": {
            "description": "Request to verify the password.",
            "id": "IdentitytoolkitRelyingpartyVerifyPasswordRequest",
            "properties": {
                "captchaChallenge": {
                    "description": "The captcha challenge.",
                    "type": "string"
                },
                "captchaResponse": {
                    "description": "Response to the captcha.",
                    "type": "string"
                },
                "email": {
                    "description": "The email of the user.",
                    "type": "string"
                },
                "password": {
                    "description": "The password inputed by the user.",
                    "type": "string"
                },
                "pendingIdToken": {
                    "description": "The GITKit token for the non-trusted IDP, which is to be confirmed by the user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Relyingparty": {
            "description": "Request of getting a code for user confirmation (reset password, change email etc.)",
            "id": "Relyingparty",
            "properties": {
                "captchaResp": {
                    "description": "The recaptcha response from the user.",
                    "type": "string"
                },
                "challenge": {
                    "description": "The recaptcha challenge presented to the user.",
                    "type": "string"
                },
                "email": {
                    "description": "The email of the user.",
                    "type": "string"
                },
                "idToken": {
                    "description": "The user's Gitkit login token for email change.",
                    "type": "string"
                },
                "kind": {
                    "default": "identitytoolkit#relyingparty",
                    "description": "The fixed string \"identitytoolkit#relyingparty\".",
                    "type": "string"
                },
                "newEmail": {
                    "description": "The new email if the code is for email change.",
                    "type": "string"
                },
                "requestType": {
                    "description": "The request type.",
                    "type": "string"
                },
                "userIp": {
                    "description": "The IP address of the user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResetPasswordResponse": {
            "description": "Response of resetting the password.",
            "id": "ResetPasswordResponse",
            "properties": {
                "email": {
                    "description": "The user's email.",
                    "type": "string"
                },
                "kind": {
                    "default": "identitytoolkit#ResetPasswordResponse",
                    "description": "The fixed string \"identitytoolkit#ResetPasswordResponse\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SetAccountInfoResponse": {
            "description": "Respone of setting the account information.",
            "id": "SetAccountInfoResponse",
            "properties": {
                "displayName": {
                    "description": "The name of the user.",
                    "type": "string"
                },
                "email": {
                    "description": "The email of the user.",
                    "type": "string"
                },
                "idToken": {
                    "description": "The Gitkit id token to login the newly sign up user.",
                    "type": "string"
                },
                "kind": {
                    "default": "identitytoolkit#SetAccountInfoResponse",
                    "description": "The fixed string \"identitytoolkit#SetAccountInfoResponse\".",
                    "type": "string"
                },
                "providerUserInfo": {
                    "description": "The user's profiles at the associated IdPs.",
                    "items": {
                        "properties": {
                            "displayName": {
                                "description": "The user's display name at the IDP.",
                                "type": "string"
                            },
                            "photoUrl": {
                                "description": "The user's photo url at the IDP.",
                                "type": "string"
                            },
                            "providerId": {
                                "description": "The IdP ID. For whitelisted IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "UploadAccountResponse": {
            "description": "Respone of uploading accounts in batch.",
            "id": "UploadAccountResponse",
            "properties": {
                "error": {
                    "description": "The error encountered while processing the account info.",
                    "items": {
                        "properties": {
                            "index": {
                                "description": "The index of the malformed account, starting from 0.",
                                "format": "int32",
                                "type": "integer"
                            },
                            "message": {
                                "description": "Detailed error message for the account info.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "identitytoolkit#UploadAccountResponse",
                    "description": "The fixed string \"identitytoolkit#UploadAccountResponse\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserInfo": {
            "description": "Template for an individual account info.",
            "id": "UserInfo",
            "properties": {
                "disabled": {
                    "description": "Whether the user is disabled.",
                    "type": "boolean"
                },
                "displayName": {
                    "description": "The name of the user.",
                    "type": "string"
                },
                "email": {
                    "description": "The email of the user.",
                    "type": "string"
                },
                "emailVerified": {
                    "description": "Whether the email has been verified.",
                    "type": "boolean"
                },
                "localId": {
                    "description": "The local ID of the user.",
                    "type": "string"
                },
                "passwordHash": {
                    "description": "The user's hashed password.",
                    "format": "byte",
                    "type": "string"
                },
                "passwordUpdatedAt": {
                    "description": "The timestamp when the password was last updated.",
                    "format": "double",
                    "type": "number"
                },
                "photoUrl": {
                    "description": "The URL of the user profile photo.",
                    "type": "string"
                },
                "providerUserInfo": {
                    "description": "The IDP of the user.",
                    "items": {
                        "properties": {
                            "displayName": {
                                "description": "The user's display name at the IDP.",
                                "type": "string"
                            },
                            "federatedId": {
                                "description": "User's identifier at IDP.",
                                "type": "string"
                            },
                            "photoUrl": {
                                "description": "The user's photo url at the IDP.",
                                "type": "string"
                            },
                            "providerId": {
                                "description": "The IdP ID. For white listed IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "salt": {
                    "description": "The user's password salt.",
                    "format": "byte",
                    "type": "string"
                },
                "validSince": {
                    "description": "Timestamp in seconds for valid login token.",
                    "format": "int64",
                    "type": "string"
                },
                "version": {
                    "description": "Version of the user's password.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "VerifyAssertionResponse": {
            "description": "Response of verifying the IDP assertion.",
            "id": "VerifyAssertionResponse",
            "properties": {
                "action": {
                    "description": "The action code.",
                    "type": "string"
                },
                "appInstallationUrl": {
                    "description": "URL for OTA app installation.",
                    "type": "string"
                },
                "appScheme": {
                    "description": "The custom scheme used by mobile app.",
                    "type": "string"
                },
                "context": {
                    "description": "The opaque value used by the client to maintain context info between the authentication request and the IDP callback.",
                    "type": "string"
                },
                "dateOfBirth": {
                    "description": "The birth date of the IdP account.",
                    "type": "string"
                },
                "displayName": {
                    "description": "The display name of the user.",
                    "type": "string"
                },
                "email": {
                    "description": "The email returned by the IdP. NOTE: The federated login user may not own the email.",
                    "type": "string"
                },
                "emailRecycled": {
                    "description": "It's true if the email is recycled.",
                    "type": "boolean"
                },
                "emailVerified": {
                    "description": "The value is true if the IDP is also the email provider. It means the user owns the email.",
                    "type": "boolean"
                },
                "federatedId": {
                    "description": "The unique ID identifies the IdP account.",
                    "type": "string"
                },
                "firstName": {
                    "description": "The first name of the user.",
                    "type": "string"
                },
                "fullName": {
                    "description": "The full name of the user.",
                    "type": "string"
                },
                "idToken": {
                    "description": "The ID token.",
                    "type": "string"
                },
                "inputEmail": {
                    "description": "It's the identifier param in the createAuthUri request if the identifier is an email. It can be used to check whether the user input email is different from the asserted email.",
                    "type": "string"
                },
                "kind": {
                    "default": "identitytoolkit#VerifyAssertionResponse",
                    "description": "The fixed string \"identitytoolkit#VerifyAssertionResponse\".",
                    "type": "string"
                },
                "language": {
                    "description": "The language preference of the user.",
                    "type": "string"
                },
                "lastName": {
                    "description": "The last name of the user.",
                    "type": "string"
                },
                "localId": {
                    "description": "The RP local ID if it's already been mapped to the IdP account identified by the federated ID.",
                    "type": "string"
                },
                "needConfirmation": {
                    "description": "Whether the assertion is from a non-trusted IDP and need account linking confirmation.",
                    "type": "boolean"
                },
                "nickName": {
                    "description": "The nick name of the user.",
                    "type": "string"
                },
                "oauthAccessToken": {
                    "description": "The OAuth2 access token.",
                    "type": "string"
                },
                "oauthAuthorizationCode": {
                    "description": "The OAuth2 authorization code.",
                    "type": "string"
                },
                "oauthExpireIn": {
                    "description": "The lifetime in seconds of the OAuth2 access token.",
                    "format": "int32",
                    "type": "integer"
                },
                "oauthRequestToken": {
                    "description": "The user approved request token for the OpenID OAuth extension.",
                    "type": "string"
                },
                "oauthScope": {
                    "description": "The scope for the OpenID OAuth extension.",
                    "type": "string"
                },
                "originalEmail": {
                    "description": "The original email stored in the mapping storage. It's returned when the federated ID is associated to a different email.",
                    "type": "string"
                },
                "photoUrl": {
                    "description": "The URI of the public accessible profiel picture.",
                    "type": "string"
                },
                "providerId": {
                    "description": "The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. If the \"providerId\" param is set to OpenID OP identifer other than the whilte listed IdPs the OP identifier is returned. If the \"identifier\" param is federated ID in the createAuthUri request. The domain part of the federated ID is returned.",
                    "type": "string"
                },
                "timeZone": {
                    "description": "The timezone of the user.",
                    "type": "string"
                },
                "verifiedProvider": {
                    "description": "When action is 'map', contains the idps which can be used for confirmation.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "VerifyPasswordResponse": {
            "description": "Request of verifying the password.",
            "id": "VerifyPasswordResponse",
            "properties": {
                "displayName": {
                    "description": "The name of the user.",
                    "type": "string"
                },
                "email": {
                    "description": "The email returned by the IdP. NOTE: The federated login user may not own the email.",
                    "type": "string"
                },
                "idToken": {
                    "description": "The GITKit token for authenticated user.",
                    "type": "string"
                },
                "kind": {
                    "default": "identitytoolkit#VerifyPasswordResponse",
                    "description": "The fixed string \"identitytoolkit#VerifyPasswordResponse\".",
                    "type": "string"
                },
                "localId": {
                    "description": "The RP local ID if it's already been mapped to the IdP account identified by the federated ID.",
                    "type": "string"
                },
                "oauthAccessToken": {
                    "description": "The OAuth2 access token.",
                    "type": "string"
                },
                "oauthAuthorizationCode": {
                    "description": "The OAuth2 authorization code.",
                    "type": "string"
                },
                "oauthExpireIn": {
                    "description": "The lifetime in seconds of the OAuth2 access token.",
                    "format": "int32",
                    "type": "integer"
                },
                "photoUrl": {
                    "description": "The URI of the user's photo at IdP",
                    "type": "string"
                },
                "registered": {
                    "description": "Whether the email is registered.",
                    "type": "boolean"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "identitytoolkit/v3/relyingparty/",
    "title": "Google Identity Toolkit API",
    "version": "v3"
}