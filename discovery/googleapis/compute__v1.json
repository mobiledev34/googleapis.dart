{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/compute": {
                    "description": "View and manage your Google Compute Engine resources"
                },
                "https://www.googleapis.com/auth/compute.readonly": {
                    "description": "View your Google Compute Engine resources"
                },
                "https://www.googleapis.com/auth/devstorage.full_control": {
                    "description": "Manage your data and permissions in Google Cloud Storage"
                },
                "https://www.googleapis.com/auth/devstorage.read_only": {
                    "description": "View your data in Google Cloud Storage"
                },
                "https://www.googleapis.com/auth/devstorage.read_write": {
                    "description": "Manage your data in Google Cloud Storage"
                }
            }
        }
    },
    "basePath": "/compute/v1/projects/",
    "baseUrl": "https://www.googleapis.com/compute/v1/projects/",
    "batchPath": "batch",
    "description": "API for the Google Compute Engine service.",
    "discoveryVersion": "v1",
    "documentationLink": "https://developers.google.com/compute/docs/reference/latest/",
    "etag": "\"l66ggWbucbkBw9Lpos72oziyefE/qp3DHGvWPpREzEdWk7WwxnpgC9w\"",
    "icons": {
        "x16": "https://www.google.com/images/icons/product/compute_engine-16.png",
        "x32": "https://www.google.com/images/icons/product/compute_engine-32.png"
    },
    "id": "compute:v1",
    "kind": "discovery#restDescription",
    "name": "compute",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "alt": {
            "default": "json",
            "description": "Data format for the response.",
            "enum": [
                "json"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json"
            ],
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
            "location": "query",
            "type": "string"
        },
        "userIp": {
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "addresses": {
            "methods": {
                "aggregatedList": {
                    "description": "Retrieves the list of addresses grouped by scope.",
                    "httpMethod": "GET",
                    "id": "compute.addresses.aggregatedList",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/aggregated/addresses",
                    "response": {
                        "$ref": "AddressAggregatedList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "delete": {
                    "description": "Deletes the specified address resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.addresses.delete",
                    "parameterOrder": [
                        "project",
                        "region",
                        "address"
                    ],
                    "parameters": {
                        "address": {
                            "description": "Name of the address resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/addresses/{address}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified address resource.",
                    "httpMethod": "GET",
                    "id": "compute.addresses.get",
                    "parameterOrder": [
                        "project",
                        "region",
                        "address"
                    ],
                    "parameters": {
                        "address": {
                            "description": "Name of the address resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/addresses/{address}",
                    "response": {
                        "$ref": "Address"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates an address resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.addresses.insert",
                    "parameterOrder": [
                        "project",
                        "region"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/addresses",
                    "request": {
                        "$ref": "Address"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of address resources contained within the specified region.",
                    "httpMethod": "GET",
                    "id": "compute.addresses.list",
                    "parameterOrder": [
                        "project",
                        "region"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/addresses",
                    "response": {
                        "$ref": "AddressList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "backendServices": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified BackendService resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.backendServices.delete",
                    "parameterOrder": [
                        "project",
                        "backendService"
                    ],
                    "parameters": {
                        "backendService": {
                            "description": "Name of the BackendService resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/backendServices/{backendService}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified BackendService resource.",
                    "httpMethod": "GET",
                    "id": "compute.backendServices.get",
                    "parameterOrder": [
                        "project",
                        "backendService"
                    ],
                    "parameters": {
                        "backendService": {
                            "description": "Name of the BackendService resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/backendServices/{backendService}",
                    "response": {
                        "$ref": "BackendService"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "getHealth": {
                    "description": "Gets the most recent health check results for this BackendService.",
                    "httpMethod": "POST",
                    "id": "compute.backendServices.getHealth",
                    "parameterOrder": [
                        "project",
                        "backendService"
                    ],
                    "parameters": {
                        "backendService": {
                            "description": "Name of the BackendService resource to which the queried instance belongs.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/backendServices/{backendService}/getHealth",
                    "request": {
                        "$ref": "ResourceGroupReference"
                    },
                    "response": {
                        "$ref": "BackendServiceGroupHealth"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a BackendService resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.backendServices.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/backendServices",
                    "request": {
                        "$ref": "BackendService"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of BackendService resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.backendServices.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/backendServices",
                    "response": {
                        "$ref": "BackendServiceList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "patch": {
                    "description": "Update the entire content of the BackendService resource. This method supports patch semantics.",
                    "httpMethod": "PATCH",
                    "id": "compute.backendServices.patch",
                    "parameterOrder": [
                        "project",
                        "backendService"
                    ],
                    "parameters": {
                        "backendService": {
                            "description": "Name of the BackendService resource to update.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/backendServices/{backendService}",
                    "request": {
                        "$ref": "BackendService"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "update": {
                    "description": "Update the entire content of the BackendService resource.",
                    "httpMethod": "PUT",
                    "id": "compute.backendServices.update",
                    "parameterOrder": [
                        "project",
                        "backendService"
                    ],
                    "parameters": {
                        "backendService": {
                            "description": "Name of the BackendService resource to update.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/backendServices/{backendService}",
                    "request": {
                        "$ref": "BackendService"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                }
            }
        },
        "diskTypes": {
            "methods": {
                "aggregatedList": {
                    "description": "Retrieves the list of disk type resources grouped by scope.",
                    "httpMethod": "GET",
                    "id": "compute.diskTypes.aggregatedList",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/aggregated/diskTypes",
                    "response": {
                        "$ref": "DiskTypeAggregatedList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "get": {
                    "description": "Returns the specified disk type resource.",
                    "httpMethod": "GET",
                    "id": "compute.diskTypes.get",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "diskType"
                    ],
                    "parameters": {
                        "diskType": {
                            "description": "Name of the disk type resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/diskTypes/{diskType}",
                    "response": {
                        "$ref": "DiskType"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of disk type resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.diskTypes.list",
                    "parameterOrder": [
                        "project",
                        "zone"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/diskTypes",
                    "response": {
                        "$ref": "DiskTypeList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "disks": {
            "methods": {
                "aggregatedList": {
                    "description": "Retrieves the list of disks grouped by scope.",
                    "httpMethod": "GET",
                    "id": "compute.disks.aggregatedList",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/aggregated/disks",
                    "response": {
                        "$ref": "DiskAggregatedList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "createSnapshot": {
                    "httpMethod": "POST",
                    "id": "compute.disks.createSnapshot",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "disk"
                    ],
                    "parameters": {
                        "disk": {
                            "description": "Name of the persistent disk resource to snapshot.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/disks/{disk}/createSnapshot",
                    "request": {
                        "$ref": "Snapshot"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "delete": {
                    "description": "Deletes the specified persistent disk resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.disks.delete",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "disk"
                    ],
                    "parameters": {
                        "disk": {
                            "description": "Name of the persistent disk resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/disks/{disk}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified persistent disk resource.",
                    "httpMethod": "GET",
                    "id": "compute.disks.get",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "disk"
                    ],
                    "parameters": {
                        "disk": {
                            "description": "Name of the persistent disk resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/disks/{disk}",
                    "response": {
                        "$ref": "Disk"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a persistent disk resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.disks.insert",
                    "parameterOrder": [
                        "project",
                        "zone"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "sourceImage": {
                            "description": "Optional. Source image to restore onto a disk.",
                            "location": "query",
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/disks",
                    "request": {
                        "$ref": "Disk"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of persistent disk resources contained within the specified zone.",
                    "httpMethod": "GET",
                    "id": "compute.disks.list",
                    "parameterOrder": [
                        "project",
                        "zone"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/disks",
                    "response": {
                        "$ref": "DiskList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "firewalls": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified firewall resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.firewalls.delete",
                    "parameterOrder": [
                        "project",
                        "firewall"
                    ],
                    "parameters": {
                        "firewall": {
                            "description": "Name of the firewall resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/firewalls/{firewall}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified firewall resource.",
                    "httpMethod": "GET",
                    "id": "compute.firewalls.get",
                    "parameterOrder": [
                        "project",
                        "firewall"
                    ],
                    "parameters": {
                        "firewall": {
                            "description": "Name of the firewall resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/firewalls/{firewall}",
                    "response": {
                        "$ref": "Firewall"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a firewall resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.firewalls.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/firewalls",
                    "request": {
                        "$ref": "Firewall"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of firewall resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.firewalls.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/firewalls",
                    "response": {
                        "$ref": "FirewallList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "patch": {
                    "description": "Updates the specified firewall resource with the data included in the request. This method supports patch semantics.",
                    "httpMethod": "PATCH",
                    "id": "compute.firewalls.patch",
                    "parameterOrder": [
                        "project",
                        "firewall"
                    ],
                    "parameters": {
                        "firewall": {
                            "description": "Name of the firewall resource to update.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/firewalls/{firewall}",
                    "request": {
                        "$ref": "Firewall"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "update": {
                    "description": "Updates the specified firewall resource with the data included in the request.",
                    "httpMethod": "PUT",
                    "id": "compute.firewalls.update",
                    "parameterOrder": [
                        "project",
                        "firewall"
                    ],
                    "parameters": {
                        "firewall": {
                            "description": "Name of the firewall resource to update.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/firewalls/{firewall}",
                    "request": {
                        "$ref": "Firewall"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                }
            }
        },
        "forwardingRules": {
            "methods": {
                "aggregatedList": {
                    "description": "Retrieves the list of forwarding rules grouped by scope.",
                    "httpMethod": "GET",
                    "id": "compute.forwardingRules.aggregatedList",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/aggregated/forwardingRules",
                    "response": {
                        "$ref": "ForwardingRuleAggregatedList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "delete": {
                    "description": "Deletes the specified ForwardingRule resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.forwardingRules.delete",
                    "parameterOrder": [
                        "project",
                        "region",
                        "forwardingRule"
                    ],
                    "parameters": {
                        "forwardingRule": {
                            "description": "Name of the ForwardingRule resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/forwardingRules/{forwardingRule}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified ForwardingRule resource.",
                    "httpMethod": "GET",
                    "id": "compute.forwardingRules.get",
                    "parameterOrder": [
                        "project",
                        "region",
                        "forwardingRule"
                    ],
                    "parameters": {
                        "forwardingRule": {
                            "description": "Name of the ForwardingRule resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/forwardingRules/{forwardingRule}",
                    "response": {
                        "$ref": "ForwardingRule"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a ForwardingRule resource in the specified project and region using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.forwardingRules.insert",
                    "parameterOrder": [
                        "project",
                        "region"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/forwardingRules",
                    "request": {
                        "$ref": "ForwardingRule"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of ForwardingRule resources available to the specified project and region.",
                    "httpMethod": "GET",
                    "id": "compute.forwardingRules.list",
                    "parameterOrder": [
                        "project",
                        "region"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/forwardingRules",
                    "response": {
                        "$ref": "ForwardingRuleList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "setTarget": {
                    "description": "Changes target url for forwarding rule.",
                    "httpMethod": "POST",
                    "id": "compute.forwardingRules.setTarget",
                    "parameterOrder": [
                        "project",
                        "region",
                        "forwardingRule"
                    ],
                    "parameters": {
                        "forwardingRule": {
                            "description": "Name of the ForwardingRule resource in which target is to be set.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget",
                    "request": {
                        "$ref": "TargetReference"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                }
            }
        },
        "globalAddresses": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified address resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.globalAddresses.delete",
                    "parameterOrder": [
                        "project",
                        "address"
                    ],
                    "parameters": {
                        "address": {
                            "description": "Name of the address resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/addresses/{address}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified address resource.",
                    "httpMethod": "GET",
                    "id": "compute.globalAddresses.get",
                    "parameterOrder": [
                        "project",
                        "address"
                    ],
                    "parameters": {
                        "address": {
                            "description": "Name of the address resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/addresses/{address}",
                    "response": {
                        "$ref": "Address"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates an address resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.globalAddresses.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/addresses",
                    "request": {
                        "$ref": "Address"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of global address resources.",
                    "httpMethod": "GET",
                    "id": "compute.globalAddresses.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/addresses",
                    "response": {
                        "$ref": "AddressList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "globalForwardingRules": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified ForwardingRule resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.globalForwardingRules.delete",
                    "parameterOrder": [
                        "project",
                        "forwardingRule"
                    ],
                    "parameters": {
                        "forwardingRule": {
                            "description": "Name of the ForwardingRule resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/forwardingRules/{forwardingRule}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified ForwardingRule resource.",
                    "httpMethod": "GET",
                    "id": "compute.globalForwardingRules.get",
                    "parameterOrder": [
                        "project",
                        "forwardingRule"
                    ],
                    "parameters": {
                        "forwardingRule": {
                            "description": "Name of the ForwardingRule resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/forwardingRules/{forwardingRule}",
                    "response": {
                        "$ref": "ForwardingRule"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a ForwardingRule resource in the specified project and region using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.globalForwardingRules.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/forwardingRules",
                    "request": {
                        "$ref": "ForwardingRule"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of ForwardingRule resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.globalForwardingRules.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/forwardingRules",
                    "response": {
                        "$ref": "ForwardingRuleList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "setTarget": {
                    "description": "Changes target url for forwarding rule.",
                    "httpMethod": "POST",
                    "id": "compute.globalForwardingRules.setTarget",
                    "parameterOrder": [
                        "project",
                        "forwardingRule"
                    ],
                    "parameters": {
                        "forwardingRule": {
                            "description": "Name of the ForwardingRule resource in which target is to be set.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/forwardingRules/{forwardingRule}/setTarget",
                    "request": {
                        "$ref": "TargetReference"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                }
            }
        },
        "globalOperations": {
            "methods": {
                "aggregatedList": {
                    "description": "Retrieves the list of all operations grouped by scope.",
                    "httpMethod": "GET",
                    "id": "compute.globalOperations.aggregatedList",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/aggregated/operations",
                    "response": {
                        "$ref": "OperationAggregatedList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "delete": {
                    "description": "Deletes the specified operation resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.globalOperations.delete",
                    "parameterOrder": [
                        "project",
                        "operation"
                    ],
                    "parameters": {
                        "operation": {
                            "description": "Name of the operation resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/operations/{operation}",
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Retrieves the specified operation resource.",
                    "httpMethod": "GET",
                    "id": "compute.globalOperations.get",
                    "parameterOrder": [
                        "project",
                        "operation"
                    ],
                    "parameters": {
                        "operation": {
                            "description": "Name of the operation resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/operations/{operation}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of operation resources contained within the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.globalOperations.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/operations",
                    "response": {
                        "$ref": "OperationList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "httpHealthChecks": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified HttpHealthCheck resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.httpHealthChecks.delete",
                    "parameterOrder": [
                        "project",
                        "httpHealthCheck"
                    ],
                    "parameters": {
                        "httpHealthCheck": {
                            "description": "Name of the HttpHealthCheck resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/httpHealthChecks/{httpHealthCheck}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified HttpHealthCheck resource.",
                    "httpMethod": "GET",
                    "id": "compute.httpHealthChecks.get",
                    "parameterOrder": [
                        "project",
                        "httpHealthCheck"
                    ],
                    "parameters": {
                        "httpHealthCheck": {
                            "description": "Name of the HttpHealthCheck resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/httpHealthChecks/{httpHealthCheck}",
                    "response": {
                        "$ref": "HttpHealthCheck"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a HttpHealthCheck resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.httpHealthChecks.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/httpHealthChecks",
                    "request": {
                        "$ref": "HttpHealthCheck"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of HttpHealthCheck resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.httpHealthChecks.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/httpHealthChecks",
                    "response": {
                        "$ref": "HttpHealthCheckList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "patch": {
                    "description": "Updates a HttpHealthCheck resource in the specified project using the data included in the request. This method supports patch semantics.",
                    "httpMethod": "PATCH",
                    "id": "compute.httpHealthChecks.patch",
                    "parameterOrder": [
                        "project",
                        "httpHealthCheck"
                    ],
                    "parameters": {
                        "httpHealthCheck": {
                            "description": "Name of the HttpHealthCheck resource to update.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/httpHealthChecks/{httpHealthCheck}",
                    "request": {
                        "$ref": "HttpHealthCheck"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "update": {
                    "description": "Updates a HttpHealthCheck resource in the specified project using the data included in the request.",
                    "httpMethod": "PUT",
                    "id": "compute.httpHealthChecks.update",
                    "parameterOrder": [
                        "project",
                        "httpHealthCheck"
                    ],
                    "parameters": {
                        "httpHealthCheck": {
                            "description": "Name of the HttpHealthCheck resource to update.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/httpHealthChecks/{httpHealthCheck}",
                    "request": {
                        "$ref": "HttpHealthCheck"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                }
            }
        },
        "images": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified image resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.images.delete",
                    "parameterOrder": [
                        "project",
                        "image"
                    ],
                    "parameters": {
                        "image": {
                            "description": "Name of the image resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/images/{image}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "deprecate": {
                    "description": "Sets the deprecation status of an image. If no message body is given, clears the deprecation status instead.",
                    "httpMethod": "POST",
                    "id": "compute.images.deprecate",
                    "parameterOrder": [
                        "project",
                        "image"
                    ],
                    "parameters": {
                        "image": {
                            "description": "Image name.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/images/{image}/deprecate",
                    "request": {
                        "$ref": "DeprecationStatus"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified image resource.",
                    "httpMethod": "GET",
                    "id": "compute.images.get",
                    "parameterOrder": [
                        "project",
                        "image"
                    ],
                    "parameters": {
                        "image": {
                            "description": "Name of the image resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/images/{image}",
                    "response": {
                        "$ref": "Image"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates an image resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.images.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/images",
                    "request": {
                        "$ref": "Image"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/devstorage.full_control",
                        "https://www.googleapis.com/auth/devstorage.read_only",
                        "https://www.googleapis.com/auth/devstorage.read_write"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of image resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.images.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/images",
                    "response": {
                        "$ref": "ImageList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "instanceTemplates": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified instance template resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.instanceTemplates.delete",
                    "parameterOrder": [
                        "project",
                        "instanceTemplate"
                    ],
                    "parameters": {
                        "instanceTemplate": {
                            "description": "Name of the instance template resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/instanceTemplates/{instanceTemplate}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified instance template resource.",
                    "httpMethod": "GET",
                    "id": "compute.instanceTemplates.get",
                    "parameterOrder": [
                        "project",
                        "instanceTemplate"
                    ],
                    "parameters": {
                        "instanceTemplate": {
                            "description": "Name of the instance template resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/instanceTemplates/{instanceTemplate}",
                    "response": {
                        "$ref": "InstanceTemplate"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates an instance template resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.instanceTemplates.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/instanceTemplates",
                    "request": {
                        "$ref": "InstanceTemplate"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of instance template resources contained within the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.instanceTemplates.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/instanceTemplates",
                    "response": {
                        "$ref": "InstanceTemplateList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "instances": {
            "methods": {
                "addAccessConfig": {
                    "description": "Adds an access config to an instance's network interface.",
                    "httpMethod": "POST",
                    "id": "compute.instances.addAccessConfig",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance",
                        "networkInterface"
                    ],
                    "parameters": {
                        "instance": {
                            "description": "Instance name.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "networkInterface": {
                            "description": "Network interface name.",
                            "location": "query",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Project name.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}/addAccessConfig",
                    "request": {
                        "$ref": "AccessConfig"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "aggregatedList": {
                    "httpMethod": "GET",
                    "id": "compute.instances.aggregatedList",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/aggregated/instances",
                    "response": {
                        "$ref": "InstanceAggregatedList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "attachDisk": {
                    "description": "Attaches a disk resource to an instance.",
                    "httpMethod": "POST",
                    "id": "compute.instances.attachDisk",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance"
                    ],
                    "parameters": {
                        "instance": {
                            "description": "Instance name.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Project name.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}/attachDisk",
                    "request": {
                        "$ref": "AttachedDisk"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "delete": {
                    "description": "Deletes the specified instance resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.instances.delete",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance"
                    ],
                    "parameters": {
                        "instance": {
                            "description": "Name of the instance resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "deleteAccessConfig": {
                    "description": "Deletes an access config from an instance's network interface.",
                    "httpMethod": "POST",
                    "id": "compute.instances.deleteAccessConfig",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance",
                        "accessConfig",
                        "networkInterface"
                    ],
                    "parameters": {
                        "accessConfig": {
                            "description": "Access config name.",
                            "location": "query",
                            "required": true,
                            "type": "string"
                        },
                        "instance": {
                            "description": "Instance name.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "networkInterface": {
                            "description": "Network interface name.",
                            "location": "query",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Project name.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}/deleteAccessConfig",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "detachDisk": {
                    "description": "Detaches a disk from an instance.",
                    "httpMethod": "POST",
                    "id": "compute.instances.detachDisk",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance",
                        "deviceName"
                    ],
                    "parameters": {
                        "deviceName": {
                            "description": "Disk device name to detach.",
                            "location": "query",
                            "pattern": "\\w[\\w.-]{0,254}",
                            "required": true,
                            "type": "string"
                        },
                        "instance": {
                            "description": "Instance name.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Project name.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}/detachDisk",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified instance resource.",
                    "httpMethod": "GET",
                    "id": "compute.instances.get",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance"
                    ],
                    "parameters": {
                        "instance": {
                            "description": "Name of the instance resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}",
                    "response": {
                        "$ref": "Instance"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "getSerialPortOutput": {
                    "description": "Returns the specified instance's serial port output.",
                    "httpMethod": "GET",
                    "id": "compute.instances.getSerialPortOutput",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance"
                    ],
                    "parameters": {
                        "instance": {
                            "description": "Name of the instance scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}/serialPort",
                    "response": {
                        "$ref": "SerialPortOutput"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates an instance resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.instances.insert",
                    "parameterOrder": [
                        "project",
                        "zone"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances",
                    "request": {
                        "$ref": "Instance"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of instance resources contained within the specified zone.",
                    "httpMethod": "GET",
                    "id": "compute.instances.list",
                    "parameterOrder": [
                        "project",
                        "zone"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances",
                    "response": {
                        "$ref": "InstanceList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "reset": {
                    "description": "Performs a hard reset on the instance.",
                    "httpMethod": "POST",
                    "id": "compute.instances.reset",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance"
                    ],
                    "parameters": {
                        "instance": {
                            "description": "Name of the instance scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}/reset",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "setDiskAutoDelete": {
                    "description": "Sets the auto-delete flag for a disk attached to an instance",
                    "httpMethod": "POST",
                    "id": "compute.instances.setDiskAutoDelete",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance",
                        "autoDelete",
                        "deviceName"
                    ],
                    "parameters": {
                        "autoDelete": {
                            "description": "Whether to auto-delete the disk when the instance is deleted.",
                            "location": "query",
                            "required": true,
                            "type": "boolean"
                        },
                        "deviceName": {
                            "description": "Disk device name to modify.",
                            "location": "query",
                            "pattern": "\\w[\\w.-]{0,254}",
                            "required": true,
                            "type": "string"
                        },
                        "instance": {
                            "description": "Instance name.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Project name.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "setMetadata": {
                    "description": "Sets metadata for the specified instance to the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.instances.setMetadata",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance"
                    ],
                    "parameters": {
                        "instance": {
                            "description": "Name of the instance scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}/setMetadata",
                    "request": {
                        "$ref": "Metadata"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "setScheduling": {
                    "description": "Sets an instance's scheduling options.",
                    "httpMethod": "POST",
                    "id": "compute.instances.setScheduling",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance"
                    ],
                    "parameters": {
                        "instance": {
                            "description": "Instance name.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Project name.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}/setScheduling",
                    "request": {
                        "$ref": "Scheduling"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "setTags": {
                    "description": "Sets tags for the specified instance to the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.instances.setTags",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "instance"
                    ],
                    "parameters": {
                        "instance": {
                            "description": "Name of the instance scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/instances/{instance}/setTags",
                    "request": {
                        "$ref": "Tags"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                }
            }
        },
        "licenses": {
            "methods": {
                "get": {
                    "description": "Returns the specified license resource.",
                    "httpMethod": "GET",
                    "id": "compute.licenses.get",
                    "parameterOrder": [
                        "project",
                        "license"
                    ],
                    "parameters": {
                        "license": {
                            "description": "Name of the license resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/licenses/{license}",
                    "response": {
                        "$ref": "License"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "machineTypes": {
            "methods": {
                "aggregatedList": {
                    "description": "Retrieves the list of machine type resources grouped by scope.",
                    "httpMethod": "GET",
                    "id": "compute.machineTypes.aggregatedList",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/aggregated/machineTypes",
                    "response": {
                        "$ref": "MachineTypeAggregatedList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "get": {
                    "description": "Returns the specified machine type resource.",
                    "httpMethod": "GET",
                    "id": "compute.machineTypes.get",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "machineType"
                    ],
                    "parameters": {
                        "machineType": {
                            "description": "Name of the machine type resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/machineTypes/{machineType}",
                    "response": {
                        "$ref": "MachineType"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of machine type resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.machineTypes.list",
                    "parameterOrder": [
                        "project",
                        "zone"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/machineTypes",
                    "response": {
                        "$ref": "MachineTypeList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "networks": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified network resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.networks.delete",
                    "parameterOrder": [
                        "project",
                        "network"
                    ],
                    "parameters": {
                        "network": {
                            "description": "Name of the network resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/networks/{network}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified network resource.",
                    "httpMethod": "GET",
                    "id": "compute.networks.get",
                    "parameterOrder": [
                        "project",
                        "network"
                    ],
                    "parameters": {
                        "network": {
                            "description": "Name of the network resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/networks/{network}",
                    "response": {
                        "$ref": "Network"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a network resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.networks.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/networks",
                    "request": {
                        "$ref": "Network"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of network resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.networks.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/networks",
                    "response": {
                        "$ref": "NetworkList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "projects": {
            "methods": {
                "get": {
                    "description": "Returns the specified project resource.",
                    "httpMethod": "GET",
                    "id": "compute.projects.get",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project resource to retrieve.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}",
                    "response": {
                        "$ref": "Project"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "setCommonInstanceMetadata": {
                    "description": "Sets metadata common to all instances within the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.projects.setCommonInstanceMetadata",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/setCommonInstanceMetadata",
                    "request": {
                        "$ref": "Metadata"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "setUsageExportBucket": {
                    "description": "Sets usage export location",
                    "httpMethod": "POST",
                    "id": "compute.projects.setUsageExportBucket",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/setUsageExportBucket",
                    "request": {
                        "$ref": "UsageExportLocation"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/devstorage.full_control",
                        "https://www.googleapis.com/auth/devstorage.read_only",
                        "https://www.googleapis.com/auth/devstorage.read_write"
                    ]
                }
            }
        },
        "regionOperations": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified region-specific operation resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.regionOperations.delete",
                    "parameterOrder": [
                        "project",
                        "region",
                        "operation"
                    ],
                    "parameters": {
                        "operation": {
                            "description": "Name of the operation resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/operations/{operation}",
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Retrieves the specified region-specific operation resource.",
                    "httpMethod": "GET",
                    "id": "compute.regionOperations.get",
                    "parameterOrder": [
                        "project",
                        "region",
                        "operation"
                    ],
                    "parameters": {
                        "operation": {
                            "description": "Name of the operation resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/operations/{operation}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of operation resources contained within the specified region.",
                    "httpMethod": "GET",
                    "id": "compute.regionOperations.list",
                    "parameterOrder": [
                        "project",
                        "region"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/operations",
                    "response": {
                        "$ref": "OperationList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "regions": {
            "methods": {
                "get": {
                    "description": "Returns the specified region resource.",
                    "httpMethod": "GET",
                    "id": "compute.regions.get",
                    "parameterOrder": [
                        "project",
                        "region"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}",
                    "response": {
                        "$ref": "Region"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of region resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.regions.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions",
                    "response": {
                        "$ref": "RegionList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "routes": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified route resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.routes.delete",
                    "parameterOrder": [
                        "project",
                        "route"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "route": {
                            "description": "Name of the route resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/routes/{route}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified route resource.",
                    "httpMethod": "GET",
                    "id": "compute.routes.get",
                    "parameterOrder": [
                        "project",
                        "route"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "route": {
                            "description": "Name of the route resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/routes/{route}",
                    "response": {
                        "$ref": "Route"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a route resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.routes.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/routes",
                    "request": {
                        "$ref": "Route"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of route resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.routes.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/routes",
                    "response": {
                        "$ref": "RouteList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "snapshots": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified persistent disk snapshot resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.snapshots.delete",
                    "parameterOrder": [
                        "project",
                        "snapshot"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "snapshot": {
                            "description": "Name of the persistent disk snapshot resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/snapshots/{snapshot}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified persistent disk snapshot resource.",
                    "httpMethod": "GET",
                    "id": "compute.snapshots.get",
                    "parameterOrder": [
                        "project",
                        "snapshot"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "snapshot": {
                            "description": "Name of the persistent disk snapshot resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/snapshots/{snapshot}",
                    "response": {
                        "$ref": "Snapshot"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of persistent disk snapshot resources contained within the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.snapshots.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/snapshots",
                    "response": {
                        "$ref": "SnapshotList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "targetHttpProxies": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified TargetHttpProxy resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.targetHttpProxies.delete",
                    "parameterOrder": [
                        "project",
                        "targetHttpProxy"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "targetHttpProxy": {
                            "description": "Name of the TargetHttpProxy resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/targetHttpProxies/{targetHttpProxy}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified TargetHttpProxy resource.",
                    "httpMethod": "GET",
                    "id": "compute.targetHttpProxies.get",
                    "parameterOrder": [
                        "project",
                        "targetHttpProxy"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "targetHttpProxy": {
                            "description": "Name of the TargetHttpProxy resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/targetHttpProxies/{targetHttpProxy}",
                    "response": {
                        "$ref": "TargetHttpProxy"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a TargetHttpProxy resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.targetHttpProxies.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/targetHttpProxies",
                    "request": {
                        "$ref": "TargetHttpProxy"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of TargetHttpProxy resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.targetHttpProxies.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/targetHttpProxies",
                    "response": {
                        "$ref": "TargetHttpProxyList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "setUrlMap": {
                    "description": "Changes the URL map for TargetHttpProxy.",
                    "httpMethod": "POST",
                    "id": "compute.targetHttpProxies.setUrlMap",
                    "parameterOrder": [
                        "project",
                        "targetHttpProxy"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "targetHttpProxy": {
                            "description": "Name of the TargetHttpProxy resource whose URL map is to be set.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap",
                    "request": {
                        "$ref": "UrlMapReference"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                }
            }
        },
        "targetInstances": {
            "methods": {
                "aggregatedList": {
                    "description": "Retrieves the list of target instances grouped by scope.",
                    "httpMethod": "GET",
                    "id": "compute.targetInstances.aggregatedList",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/aggregated/targetInstances",
                    "response": {
                        "$ref": "TargetInstanceAggregatedList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "delete": {
                    "description": "Deletes the specified TargetInstance resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.targetInstances.delete",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "targetInstance"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "targetInstance": {
                            "description": "Name of the TargetInstance resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/targetInstances/{targetInstance}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified TargetInstance resource.",
                    "httpMethod": "GET",
                    "id": "compute.targetInstances.get",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "targetInstance"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "targetInstance": {
                            "description": "Name of the TargetInstance resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/targetInstances/{targetInstance}",
                    "response": {
                        "$ref": "TargetInstance"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a TargetInstance resource in the specified project and zone using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.targetInstances.insert",
                    "parameterOrder": [
                        "project",
                        "zone"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/targetInstances",
                    "request": {
                        "$ref": "TargetInstance"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of TargetInstance resources available to the specified project and zone.",
                    "httpMethod": "GET",
                    "id": "compute.targetInstances.list",
                    "parameterOrder": [
                        "project",
                        "zone"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/targetInstances",
                    "response": {
                        "$ref": "TargetInstanceList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "targetPools": {
            "methods": {
                "addHealthCheck": {
                    "description": "Adds health check URL to targetPool.",
                    "httpMethod": "POST",
                    "id": "compute.targetPools.addHealthCheck",
                    "parameterOrder": [
                        "project",
                        "region",
                        "targetPool"
                    ],
                    "parameters": {
                        "project": {
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "targetPool": {
                            "description": "Name of the TargetPool resource to which health_check_url is to be added.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck",
                    "request": {
                        "$ref": "TargetPoolsAddHealthCheckRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "addInstance": {
                    "description": "Adds instance url to targetPool.",
                    "httpMethod": "POST",
                    "id": "compute.targetPools.addInstance",
                    "parameterOrder": [
                        "project",
                        "region",
                        "targetPool"
                    ],
                    "parameters": {
                        "project": {
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "targetPool": {
                            "description": "Name of the TargetPool resource to which instance_url is to be added.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/targetPools/{targetPool}/addInstance",
                    "request": {
                        "$ref": "TargetPoolsAddInstanceRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "aggregatedList": {
                    "description": "Retrieves the list of target pools grouped by scope.",
                    "httpMethod": "GET",
                    "id": "compute.targetPools.aggregatedList",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/aggregated/targetPools",
                    "response": {
                        "$ref": "TargetPoolAggregatedList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "delete": {
                    "description": "Deletes the specified TargetPool resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.targetPools.delete",
                    "parameterOrder": [
                        "project",
                        "region",
                        "targetPool"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "targetPool": {
                            "description": "Name of the TargetPool resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/targetPools/{targetPool}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified TargetPool resource.",
                    "httpMethod": "GET",
                    "id": "compute.targetPools.get",
                    "parameterOrder": [
                        "project",
                        "region",
                        "targetPool"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "targetPool": {
                            "description": "Name of the TargetPool resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/targetPools/{targetPool}",
                    "response": {
                        "$ref": "TargetPool"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "getHealth": {
                    "description": "Gets the most recent health check results for each IP for the given instance that is referenced by given TargetPool.",
                    "httpMethod": "POST",
                    "id": "compute.targetPools.getHealth",
                    "parameterOrder": [
                        "project",
                        "region",
                        "targetPool"
                    ],
                    "parameters": {
                        "project": {
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "targetPool": {
                            "description": "Name of the TargetPool resource to which the queried instance belongs.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/targetPools/{targetPool}/getHealth",
                    "request": {
                        "$ref": "InstanceReference"
                    },
                    "response": {
                        "$ref": "TargetPoolInstanceHealth"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a TargetPool resource in the specified project and region using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.targetPools.insert",
                    "parameterOrder": [
                        "project",
                        "region"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/targetPools",
                    "request": {
                        "$ref": "TargetPool"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of TargetPool resources available to the specified project and region.",
                    "httpMethod": "GET",
                    "id": "compute.targetPools.list",
                    "parameterOrder": [
                        "project",
                        "region"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/targetPools",
                    "response": {
                        "$ref": "TargetPoolList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "removeHealthCheck": {
                    "description": "Removes health check URL from targetPool.",
                    "httpMethod": "POST",
                    "id": "compute.targetPools.removeHealthCheck",
                    "parameterOrder": [
                        "project",
                        "region",
                        "targetPool"
                    ],
                    "parameters": {
                        "project": {
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "targetPool": {
                            "description": "Name of the TargetPool resource to which health_check_url is to be removed.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck",
                    "request": {
                        "$ref": "TargetPoolsRemoveHealthCheckRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "removeInstance": {
                    "description": "Removes instance URL from targetPool.",
                    "httpMethod": "POST",
                    "id": "compute.targetPools.removeInstance",
                    "parameterOrder": [
                        "project",
                        "region",
                        "targetPool"
                    ],
                    "parameters": {
                        "project": {
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "targetPool": {
                            "description": "Name of the TargetPool resource to which instance_url is to be removed.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/targetPools/{targetPool}/removeInstance",
                    "request": {
                        "$ref": "TargetPoolsRemoveInstanceRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "setBackup": {
                    "description": "Changes backup pool configurations.",
                    "httpMethod": "POST",
                    "id": "compute.targetPools.setBackup",
                    "parameterOrder": [
                        "project",
                        "region",
                        "targetPool"
                    ],
                    "parameters": {
                        "failoverRatio": {
                            "description": "New failoverRatio value for the containing target pool.",
                            "format": "float",
                            "location": "query",
                            "type": "number"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "region": {
                            "description": "Name of the region scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "targetPool": {
                            "description": "Name of the TargetPool resource for which the backup is to be set.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/regions/{region}/targetPools/{targetPool}/setBackup",
                    "request": {
                        "$ref": "TargetReference"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                }
            }
        },
        "urlMaps": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified UrlMap resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.urlMaps.delete",
                    "parameterOrder": [
                        "project",
                        "urlMap"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "urlMap": {
                            "description": "Name of the UrlMap resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/urlMaps/{urlMap}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Returns the specified UrlMap resource.",
                    "httpMethod": "GET",
                    "id": "compute.urlMaps.get",
                    "parameterOrder": [
                        "project",
                        "urlMap"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "urlMap": {
                            "description": "Name of the UrlMap resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/urlMaps/{urlMap}",
                    "response": {
                        "$ref": "UrlMap"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "insert": {
                    "description": "Creates a UrlMap resource in the specified project using the data included in the request.",
                    "httpMethod": "POST",
                    "id": "compute.urlMaps.insert",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/urlMaps",
                    "request": {
                        "$ref": "UrlMap"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of UrlMap resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.urlMaps.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/urlMaps",
                    "response": {
                        "$ref": "UrlMapList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "patch": {
                    "description": "Update the entire content of the UrlMap resource. This method supports patch semantics.",
                    "httpMethod": "PATCH",
                    "id": "compute.urlMaps.patch",
                    "parameterOrder": [
                        "project",
                        "urlMap"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "urlMap": {
                            "description": "Name of the UrlMap resource to update.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/urlMaps/{urlMap}",
                    "request": {
                        "$ref": "UrlMap"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "update": {
                    "description": "Update the entire content of the UrlMap resource.",
                    "httpMethod": "PUT",
                    "id": "compute.urlMaps.update",
                    "parameterOrder": [
                        "project",
                        "urlMap"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "urlMap": {
                            "description": "Name of the UrlMap resource to update.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/urlMaps/{urlMap}",
                    "request": {
                        "$ref": "UrlMap"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "validate": {
                    "description": "Run static validation for the UrlMap. In particular, the tests of the provided UrlMap will be run. Calling this method does NOT create the UrlMap.",
                    "httpMethod": "POST",
                    "id": "compute.urlMaps.validate",
                    "parameterOrder": [
                        "project",
                        "urlMap"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "urlMap": {
                            "description": "Name of the UrlMap resource to be validated as.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/global/urlMaps/{urlMap}/validate",
                    "request": {
                        "$ref": "UrlMapsValidateRequest"
                    },
                    "response": {
                        "$ref": "UrlMapsValidateResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                }
            }
        },
        "zoneOperations": {
            "methods": {
                "delete": {
                    "description": "Deletes the specified zone-specific operation resource.",
                    "httpMethod": "DELETE",
                    "id": "compute.zoneOperations.delete",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "operation"
                    ],
                    "parameters": {
                        "operation": {
                            "description": "Name of the operation resource to delete.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/operations/{operation}",
                    "scopes": [
                        "https://www.googleapis.com/auth/compute"
                    ]
                },
                "get": {
                    "description": "Retrieves the specified zone-specific operation resource.",
                    "httpMethod": "GET",
                    "id": "compute.zoneOperations.get",
                    "parameterOrder": [
                        "project",
                        "zone",
                        "operation"
                    ],
                    "parameters": {
                        "operation": {
                            "description": "Name of the operation resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/operations/{operation}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of operation resources contained within the specified zone.",
                    "httpMethod": "GET",
                    "id": "compute.zoneOperations.list",
                    "parameterOrder": [
                        "project",
                        "zone"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone scoping this request.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}/operations",
                    "response": {
                        "$ref": "OperationList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        },
        "zones": {
            "methods": {
                "get": {
                    "description": "Returns the specified zone resource.",
                    "httpMethod": "GET",
                    "id": "compute.zones.get",
                    "parameterOrder": [
                        "project",
                        "zone"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        },
                        "zone": {
                            "description": "Name of the zone resource to return.",
                            "location": "path",
                            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones/{zone}",
                    "response": {
                        "$ref": "Zone"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                },
                "list": {
                    "description": "Retrieves the list of zone resources available to the specified project.",
                    "httpMethod": "GET",
                    "id": "compute.zones.list",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "Optional. Filter expression for filtering listed resources.",
                            "location": "query",
                            "type": "string"
                        },
                        "maxResults": {
                            "default": "500",
                            "description": "Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.",
                            "format": "uint32",
                            "location": "query",
                            "maximum": "500",
                            "minimum": "0",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.",
                            "location": "query",
                            "type": "string"
                        },
                        "project": {
                            "description": "Name of the project scoping this request.",
                            "location": "path",
                            "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "{project}/zones",
                    "response": {
                        "$ref": "ZoneList"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/compute",
                        "https://www.googleapis.com/auth/compute.readonly"
                    ]
                }
            }
        }
    },
    "revision": "20141014",
    "rootUrl": "https://www.googleapis.com/",
    "schemas": {
        "AccessConfig": {
            "description": "An access configuration attached to an instance's network interface.",
            "id": "AccessConfig",
            "properties": {
                "kind": {
                    "default": "compute#accessConfig",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of this access configuration.",
                    "type": "string"
                },
                "natIP": {
                    "description": "An external IP address associated with this instance. Specify an unused static IP address available to the project. If not specified, the external IP will be drawn from a shared ephemeral pool.",
                    "type": "string"
                },
                "type": {
                    "default": "ONE_TO_ONE_NAT",
                    "description": "Type of configuration. Must be set to \"ONE_TO_ONE_NAT\". This configures port-for-port NAT to the internet.",
                    "enum": [
                        "ONE_TO_ONE_NAT"
                    ],
                    "enumDescriptions": [
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Address": {
            "description": "A reserved address resource.",
            "id": "Address",
            "properties": {
                "address": {
                    "description": "The IP address represented by this resource.",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#address",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "annotations": {
                        "required": [
                            "compute.addresses.insert"
                        ]
                    },
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "region": {
                    "description": "URL of the region where the regional address resides (output only). This field is not applicable to global addresses.",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the address (output only).",
                    "enum": [
                        "IN_USE",
                        "RESERVED"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "users": {
                    "description": "The resources that are using this address resource.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AddressAggregatedList": {
            "id": "AddressAggregatedList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "additionalProperties": {
                        "$ref": "AddressesScopedList",
                        "description": "Name of the scope containing this set of addresses."
                    },
                    "description": "A map of scoped address lists.",
                    "type": "object"
                },
                "kind": {
                    "default": "compute#addressAggregatedList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AddressList": {
            "description": "Contains a list of address resources.",
            "id": "AddressList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The address resources.",
                    "items": {
                        "$ref": "Address"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#addressList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AddressesScopedList": {
            "id": "AddressesScopedList",
            "properties": {
                "addresses": {
                    "description": "List of addresses contained in this scope.",
                    "items": {
                        "$ref": "Address"
                    },
                    "type": "array"
                },
                "warning": {
                    "description": "Informational warning which replaces the list of addresses when the list is empty.",
                    "properties": {
                        "code": {
                            "description": "The warning type identifier for this warning.",
                            "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "INJECTED_KERNELS_DEPRECATED",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_NOT_RUNNING",
                                "NO_RESULTS_ON_PAGE",
                                "REQUIRED_TOS_AGREEMENT",
                                "RESOURCE_NOT_DELETED",
                                "UNREACHABLE"
                            ],
                            "enumDescriptions": [
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                ""
                            ],
                            "type": "string"
                        },
                        "data": {
                            "description": "Metadata for this warning in 'key: value' format.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "description": "A key for the warning data.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "A warning data value corresponding to the key.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "message": {
                            "description": "Optional human-readable details for this warning.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AttachedDisk": {
            "description": "An instance-attached disk resource.",
            "id": "AttachedDisk",
            "properties": {
                "autoDelete": {
                    "description": "Whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
                    "type": "boolean"
                },
                "boot": {
                    "description": "Indicates that this is a boot disk. VM will use the first partition of the disk for its root filesystem.",
                    "type": "boolean"
                },
                "deviceName": {
                    "description": "Persistent disk only; must be unique within the instance when specified. This represents a unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance. If not specified, a default will be chosen by the system.",
                    "type": "string"
                },
                "index": {
                    "description": "A zero-based index to assign to this disk, where 0 is reserved for the boot disk. If not specified, the server will choose an appropriate value (output only).",
                    "format": "int32",
                    "type": "integer"
                },
                "initializeParams": {
                    "$ref": "AttachedDiskInitializeParams",
                    "description": "Initialization parameters."
                },
                "interface": {
                    "enum": [
                        "NVME",
                        "SCSI"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "kind": {
                    "default": "compute#attachedDisk",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "licenses": {
                    "description": "Public visible licenses.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "mode": {
                    "description": "The mode in which to attach this disk, either \"READ_WRITE\" or \"READ_ONLY\".",
                    "enum": [
                        "READ_ONLY",
                        "READ_WRITE"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "source": {
                    "description": "Persistent disk only; the URL of the persistent disk resource.",
                    "type": "string"
                },
                "type": {
                    "annotations": {
                        "required": [
                            "compute.instances.insert"
                        ]
                    },
                    "description": "Type of the disk, either \"SCRATCH\" or \"PERSISTENT\". Note that persistent disks must be created before you can specify them here.",
                    "enum": [
                        "PERSISTENT",
                        "SCRATCH"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AttachedDiskInitializeParams": {
            "description": "Initialization parameters for the new disk (input-only). Can only be specified on the boot disk or local SSDs. Mutually exclusive with 'source'.",
            "id": "AttachedDiskInitializeParams",
            "properties": {
                "diskName": {
                    "description": "Name of the disk (when not provided defaults to the name of the instance).",
                    "type": "string"
                },
                "diskSizeGb": {
                    "description": "Size of the disk in base-2 GB.",
                    "format": "int64",
                    "type": "string"
                },
                "diskType": {
                    "description": "URL of the disk type resource describing which disk type to use to create the disk; provided by the client when the disk is created.",
                    "type": "string"
                },
                "sourceImage": {
                    "description": "The source image used to create this disk.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Backend": {
            "description": "Message containing information of one individual backend.",
            "id": "Backend",
            "properties": {
                "balancingMode": {
                    "description": "The balancing mode of this backend, default is UTILIZATION.",
                    "enum": [
                        "RATE",
                        "UTILIZATION"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "capacityScaler": {
                    "description": "The multiplier (a value between 0 and 1e6) of the max capacity (CPU or RPS, depending on 'balancingMode') the group should serve up to. 0 means the group is totally drained. Default value is 1. Valid range is [0, 1e6].",
                    "format": "float",
                    "type": "number"
                },
                "description": {
                    "description": "An optional textual description of the resource, which is provided by the client when the resource is created.",
                    "type": "string"
                },
                "group": {
                    "description": "URL of a zonal Cloud Resource View resource. This resource view defines the list of instances that serve traffic. Member virtual machine instances from each resource view must live in the same zone as the resource view itself. No two backends in a backend service are allowed to use same Resource View resource.",
                    "type": "string"
                },
                "maxRate": {
                    "description": "The max RPS of the group. Can be used with either balancing mode, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxRatePerInstance": {
                    "description": "The max RPS that a single backed instance can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
                    "format": "float",
                    "type": "number"
                },
                "maxUtilization": {
                    "description": "Used when 'balancingMode' is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0, 1].",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "BackendService": {
            "description": "A BackendService resource. This resource defines a group of backend VMs together with their serving capacity.",
            "id": "BackendService",
            "properties": {
                "backends": {
                    "description": "The list of backends that serve this BackendService.",
                    "items": {
                        "$ref": "Backend"
                    },
                    "type": "array"
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "fingerprint": {
                    "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService.",
                    "format": "byte",
                    "type": "string"
                },
                "healthChecks": {
                    "description": "The list of URLs to the HttpHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#backendService",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "port": {
                    "description": "Deprecated in favor of port_name. The TCP port to connect on the backend. The default value is 80.",
                    "format": "int32",
                    "type": "integer"
                },
                "portName": {
                    "description": "Name of backend port. The same name should appear in the resource views referenced by this service. Required.",
                    "type": "string"
                },
                "protocol": {
                    "enum": [
                        "HTTP"
                    ],
                    "enumDescriptions": [
                        ""
                    ],
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "timeoutSec": {
                    "description": "How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BackendServiceGroupHealth": {
            "id": "BackendServiceGroupHealth",
            "properties": {
                "healthStatus": {
                    "items": {
                        "$ref": "HealthStatus"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#backendServiceGroupHealth",
                    "description": "Type of resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BackendServiceList": {
            "description": "Contains a list of BackendService resources.",
            "id": "BackendServiceList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The BackendService resources.",
                    "items": {
                        "$ref": "BackendService"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#backendServiceList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeprecationStatus": {
            "description": "Deprecation status for a public resource.",
            "id": "DeprecationStatus",
            "properties": {
                "deleted": {
                    "description": "An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DELETED.",
                    "type": "string"
                },
                "deprecated": {
                    "description": "An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to DEPRECATED.",
                    "type": "string"
                },
                "obsolete": {
                    "description": "An optional RFC3339 timestamp on or after which the deprecation state of this resource will be changed to OBSOLETE.",
                    "type": "string"
                },
                "replacement": {
                    "description": "A URL of the suggested replacement for the deprecated resource. The deprecated resource and its replacement must be resources of the same kind.",
                    "type": "string"
                },
                "state": {
                    "description": "The deprecation state. Can be \"DEPRECATED\", \"OBSOLETE\", or \"DELETED\". Operations which create a new resource using a \"DEPRECATED\" resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. New uses of \"OBSOLETE\" or \"DELETED\" resources will result in an error.",
                    "enum": [
                        "DELETED",
                        "DEPRECATED",
                        "OBSOLETE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Disk": {
            "description": "A persistent disk resource.",
            "id": "Disk",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#disk",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "licenses": {
                    "description": "Public visible licenses.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "annotations": {
                        "required": [
                            "compute.disks.insert"
                        ]
                    },
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "options": {
                    "description": "Internal use only.",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "sizeGb": {
                    "description": "Size of the persistent disk, specified in GB. This parameter is optional when creating a disk from a disk image or a snapshot, otherwise it is required.",
                    "format": "int64",
                    "type": "string"
                },
                "sourceImage": {
                    "description": "The source image used to create this disk.",
                    "type": "string"
                },
                "sourceImageId": {
                    "description": "The 'id' value of the image used to create this disk. This value may be used to determine whether the disk was created from the current or a previous instance of a given image.",
                    "type": "string"
                },
                "sourceSnapshot": {
                    "description": "The source snapshot used to create this disk.",
                    "type": "string"
                },
                "sourceSnapshotId": {
                    "description": "The 'id' value of the snapshot used to create this disk. This value may be used to determine whether the disk was created from the current or a previous instance of a given disk snapshot.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of disk creation (output only).",
                    "enum": [
                        "CREATING",
                        "FAILED",
                        "READY",
                        "RESTORING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "URL of the disk type resource describing which disk type to use to create the disk; provided by the client when the disk is created.",
                    "type": "string"
                },
                "zone": {
                    "description": "URL of the zone where the disk resides (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DiskAggregatedList": {
            "id": "DiskAggregatedList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "additionalProperties": {
                        "$ref": "DisksScopedList",
                        "description": "Name of the scope containing this set of disks."
                    },
                    "description": "A map of scoped disk lists.",
                    "type": "object"
                },
                "kind": {
                    "default": "compute#diskAggregatedList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DiskList": {
            "description": "Contains a list of persistent disk resources.",
            "id": "DiskList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The persistent disk resources.",
                    "items": {
                        "$ref": "Disk"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#diskList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DiskType": {
            "description": "A disk type resource.",
            "id": "DiskType",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "defaultDiskSizeGb": {
                    "description": "Server defined default disk size in gb (output only).",
                    "format": "int64",
                    "type": "string"
                },
                "deprecated": {
                    "$ref": "DeprecationStatus",
                    "description": "The deprecation status associated with this disk type."
                },
                "description": {
                    "description": "An optional textual description of the resource.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#diskType",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "validDiskSize": {
                    "description": "An optional textual descroption of the valid disk size, e.g., \"10GB-10TB\".",
                    "type": "string"
                },
                "zone": {
                    "description": "Url of the zone where the disk type resides (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DiskTypeAggregatedList": {
            "id": "DiskTypeAggregatedList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "additionalProperties": {
                        "$ref": "DiskTypesScopedList",
                        "description": "Name of the scope containing this set of disk types."
                    },
                    "description": "A map of scoped disk type lists.",
                    "type": "object"
                },
                "kind": {
                    "default": "compute#diskTypeAggregatedList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DiskTypeList": {
            "description": "Contains a list of disk type resources.",
            "id": "DiskTypeList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The disk type resources.",
                    "items": {
                        "$ref": "DiskType"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#diskTypeList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DiskTypesScopedList": {
            "id": "DiskTypesScopedList",
            "properties": {
                "diskTypes": {
                    "description": "List of disk types contained in this scope.",
                    "items": {
                        "$ref": "DiskType"
                    },
                    "type": "array"
                },
                "warning": {
                    "description": "Informational warning which replaces the list of disk types when the list is empty.",
                    "properties": {
                        "code": {
                            "description": "The warning type identifier for this warning.",
                            "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "INJECTED_KERNELS_DEPRECATED",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_NOT_RUNNING",
                                "NO_RESULTS_ON_PAGE",
                                "REQUIRED_TOS_AGREEMENT",
                                "RESOURCE_NOT_DELETED",
                                "UNREACHABLE"
                            ],
                            "enumDescriptions": [
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                ""
                            ],
                            "type": "string"
                        },
                        "data": {
                            "description": "Metadata for this warning in 'key: value' format.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "description": "A key for the warning data.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "A warning data value corresponding to the key.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "message": {
                            "description": "Optional human-readable details for this warning.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DisksScopedList": {
            "id": "DisksScopedList",
            "properties": {
                "disks": {
                    "description": "List of disks contained in this scope.",
                    "items": {
                        "$ref": "Disk"
                    },
                    "type": "array"
                },
                "warning": {
                    "description": "Informational warning which replaces the list of disks when the list is empty.",
                    "properties": {
                        "code": {
                            "description": "The warning type identifier for this warning.",
                            "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "INJECTED_KERNELS_DEPRECATED",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_NOT_RUNNING",
                                "NO_RESULTS_ON_PAGE",
                                "REQUIRED_TOS_AGREEMENT",
                                "RESOURCE_NOT_DELETED",
                                "UNREACHABLE"
                            ],
                            "enumDescriptions": [
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                ""
                            ],
                            "type": "string"
                        },
                        "data": {
                            "description": "Metadata for this warning in 'key: value' format.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "description": "A key for the warning data.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "A warning data value corresponding to the key.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "message": {
                            "description": "Optional human-readable details for this warning.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Firewall": {
            "description": "A firewall resource.",
            "id": "Firewall",
            "properties": {
                "allowed": {
                    "description": "The list of rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.",
                    "items": {
                        "properties": {
                            "IPProtocol": {
                                "description": "Required; this is the IP protocol that is allowed for this rule. This can either be one of the following well known protocol strings [\"tcp\", \"udp\", \"icmp\", \"esp\", \"ah\", \"sctp\"], or the IP protocol number.",
                                "type": "string"
                            },
                            "ports": {
                                "description": "An optional list of ports which are allowed. It is an error to specify this for any protocol that isn't UDP or TCP. Each entry must be either an integer or a range. If not specified, connections through any port are allowed.\n\nExample inputs include: [\"22\"], [\"80\",\"443\"] and [\"12345-12349\"].",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#firewall",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "annotations": {
                        "required": [
                            "compute.firewalls.insert",
                            "compute.firewalls.patch"
                        ]
                    },
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "network": {
                    "description": "URL of the network to which this firewall is applied; provided by the client when the firewall is created.",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "sourceRanges": {
                    "description": "A list of IP address blocks expressed in CIDR format which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sourceTags": {
                    "description": "A list of instance tags which this rule applies to. One or both of sourceRanges and sourceTags may be set; an inbound connection is allowed if either the range or the tag of the source matches.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "targetTags": {
                    "description": "A list of instance tags indicating sets of instances located on network which may make network connections as specified in allowed. If no targetTags are specified, the firewall rule applies to all instances on the specified network.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FirewallList": {
            "description": "Contains a list of firewall resources.",
            "id": "FirewallList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The firewall resources.",
                    "items": {
                        "$ref": "Firewall"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#firewallList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ForwardingRule": {
            "description": "A ForwardingRule resource. A ForwardingRule resource specifies which pool of target VMs to forward a packet to if it matches the given [IPAddress, IPProtocol, portRange] tuple.",
            "id": "ForwardingRule",
            "properties": {
                "IPAddress": {
                    "description": "Value of the reserved IP address that this forwarding rule is serving on behalf of. For global forwarding rules, the address must be a global IP; for regional forwarding rules, the address must live in the same region as the forwarding rule. If left empty (default value), an ephemeral IP from the same scope (global or regional) will be assigned.",
                    "type": "string"
                },
                "IPProtocol": {
                    "description": "The IP protocol to which this rule applies, valid options are 'TCP', 'UDP', 'ESP', 'AH' or 'SCTP'.",
                    "enum": [
                        "AH",
                        "ESP",
                        "SCTP",
                        "TCP",
                        "UDP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#forwardingRule",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "portRange": {
                    "description": "Applicable only when 'IPProtocol' is 'TCP', 'UDP' or 'SCTP', only packets addressed to ports in the specified range will be forwarded to 'target'. If 'portRange' is left empty (default value), all ports are forwarded. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges.",
                    "type": "string"
                },
                "region": {
                    "description": "URL of the region where the regional forwarding rule resides (output only). This field is not applicable to global forwarding rules.",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "target": {
                    "description": "The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global TargetHttpProxy resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ForwardingRuleAggregatedList": {
            "id": "ForwardingRuleAggregatedList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "additionalProperties": {
                        "$ref": "ForwardingRulesScopedList",
                        "description": "Name of the scope containing this set of addresses."
                    },
                    "description": "A map of scoped forwarding rule lists.",
                    "type": "object"
                },
                "kind": {
                    "default": "compute#forwardingRuleAggregatedList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ForwardingRuleList": {
            "description": "Contains a list of ForwardingRule resources.",
            "id": "ForwardingRuleList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The ForwardingRule resources.",
                    "items": {
                        "$ref": "ForwardingRule"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#forwardingRuleList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ForwardingRulesScopedList": {
            "id": "ForwardingRulesScopedList",
            "properties": {
                "forwardingRules": {
                    "description": "List of forwarding rules contained in this scope.",
                    "items": {
                        "$ref": "ForwardingRule"
                    },
                    "type": "array"
                },
                "warning": {
                    "description": "Informational warning which replaces the list of forwarding rules when the list is empty.",
                    "properties": {
                        "code": {
                            "description": "The warning type identifier for this warning.",
                            "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "INJECTED_KERNELS_DEPRECATED",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_NOT_RUNNING",
                                "NO_RESULTS_ON_PAGE",
                                "REQUIRED_TOS_AGREEMENT",
                                "RESOURCE_NOT_DELETED",
                                "UNREACHABLE"
                            ],
                            "enumDescriptions": [
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                ""
                            ],
                            "type": "string"
                        },
                        "data": {
                            "description": "Metadata for this warning in 'key: value' format.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "description": "A key for the warning data.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "A warning data value corresponding to the key.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "message": {
                            "description": "Optional human-readable details for this warning.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "HealthCheckReference": {
            "id": "HealthCheckReference",
            "properties": {
                "healthCheck": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HealthStatus": {
            "id": "HealthStatus",
            "properties": {
                "healthState": {
                    "description": "Health state of the instance.",
                    "enum": [
                        "HEALTHY",
                        "UNHEALTHY"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "instance": {
                    "description": "URL of the instance resource.",
                    "type": "string"
                },
                "ipAddress": {
                    "description": "The IP address represented by this resource.",
                    "type": "string"
                },
                "port": {
                    "description": "The port on the instance.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HostRule": {
            "description": "A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService.",
            "id": "HostRule",
            "properties": {
                "description": {
                    "type": "string"
                },
                "hosts": {
                    "description": "The list of host patterns to match. They must be valid hostnames except that they may start with *. or *-. The * acts like a glob and will match any string of atoms (separated by .s and -s) to the left.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "pathMatcher": {
                    "description": "The name of the PathMatcher to match the path portion of the URL, if the this HostRule matches the URL's host portion.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HttpHealthCheck": {
            "description": "An HttpHealthCheck resource. This resource defines a template for how individual VMs should be checked for health, via HTTP.",
            "id": "HttpHealthCheck",
            "properties": {
                "checkIntervalSec": {
                    "description": "How often (in seconds) to send a health check. The default value is 5 seconds.",
                    "format": "int32",
                    "type": "integer"
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "healthyThreshold": {
                    "description": "A so-far unhealthy VM will be marked healthy after this many consecutive successes. The default value is 2.",
                    "format": "int32",
                    "type": "integer"
                },
                "host": {
                    "description": "The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#httpHealthCheck",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "port": {
                    "description": "The TCP port number for the HTTP health check request. The default value is 80.",
                    "format": "int32",
                    "type": "integer"
                },
                "requestPath": {
                    "description": "The request path of the HTTP health check request. The default value is \"/\".",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "timeoutSec": {
                    "description": "How long (in seconds) to wait before claiming failure. The default value is 5 seconds.",
                    "format": "int32",
                    "type": "integer"
                },
                "unhealthyThreshold": {
                    "description": "A so-far healthy VM will be marked unhealthy after this many consecutive failures. The default value is 2.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HttpHealthCheckList": {
            "description": "Contains a list of HttpHealthCheck resources.",
            "id": "HttpHealthCheckList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The HttpHealthCheck resources.",
                    "items": {
                        "$ref": "HttpHealthCheck"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#httpHealthCheckList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Image": {
            "description": "A disk image resource.",
            "id": "Image",
            "properties": {
                "archiveSizeBytes": {
                    "description": "Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).",
                    "format": "int64",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "deprecated": {
                    "$ref": "DeprecationStatus",
                    "description": "The deprecation status associated with this image."
                },
                "description": {
                    "description": "Textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "diskSizeGb": {
                    "description": "Size of the image when restored onto a disk (in GiB).",
                    "format": "int64",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#image",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "licenses": {
                    "description": "Public visible licenses.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "annotations": {
                        "required": [
                            "compute.images.insert"
                        ]
                    },
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "rawDisk": {
                    "description": "The raw disk image parameters.",
                    "properties": {
                        "containerType": {
                            "description": "The format used to encode and transmit the block device. Should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.",
                            "enum": [
                                "TAR"
                            ],
                            "enumDescriptions": [
                                ""
                            ],
                            "type": "string"
                        },
                        "sha1Checksum": {
                            "description": "An optional SHA1 checksum of the disk image before unpackaging; provided by the client when the disk image is created.",
                            "pattern": "[a-f0-9]{40}",
                            "type": "string"
                        },
                        "source": {
                            "annotations": {
                                "required": [
                                    "compute.images.insert"
                                ]
                            },
                            "description": "The full Google Cloud Storage URL where the disk image is stored; provided by the client when the disk image is created.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "sourceDisk": {
                    "description": "The source disk used to create this image.",
                    "type": "string"
                },
                "sourceDiskId": {
                    "description": "The 'id' value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.",
                    "type": "string"
                },
                "sourceType": {
                    "default": "RAW",
                    "description": "Must be \"RAW\"; provided by the client when the disk image is created.",
                    "enum": [
                        "RAW"
                    ],
                    "enumDescriptions": [
                        ""
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "Status of the image (output only). It will be one of the following READY - after image has been successfully created and is ready for use FAILED - if creating the image fails for some reason PENDING - the image creation is in progress An image can be used to create other resources suck as instances only after the image has been successfully created and the status is set to READY.",
                    "enum": [
                        "FAILED",
                        "PENDING",
                        "READY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ImageList": {
            "description": "Contains a list of disk image resources.",
            "id": "ImageList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The disk image resources.",
                    "items": {
                        "$ref": "Image"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#imageList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Instance": {
            "description": "An instance resource.",
            "id": "Instance",
            "properties": {
                "canIpForward": {
                    "description": "Allows this instance to send packets with source IP addresses other than its own and receive packets with destination IP addresses other than its own. If this instance will be used as an IP gateway or it will be set as the next-hop in a Route resource, say true. If unsure, leave this set to false.",
                    "type": "boolean"
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "disks": {
                    "description": "Array of disks associated with this instance. Persistent disks must be created before you can assign them.",
                    "items": {
                        "$ref": "AttachedDisk"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#instance",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "machineType": {
                    "annotations": {
                        "required": [
                            "compute.instances.insert"
                        ]
                    },
                    "description": "URL of the machine type resource describing which machine type to use to host the instance; provided by the client when the instance is created.",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "Metadata",
                    "description": "Metadata key/value pairs assigned to this instance. Consists of custom metadata or predefined keys; see Instance documentation for more information."
                },
                "name": {
                    "annotations": {
                        "required": [
                            "compute.instances.insert"
                        ]
                    },
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "networkInterfaces": {
                    "description": "Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.",
                    "items": {
                        "$ref": "NetworkInterface"
                    },
                    "type": "array"
                },
                "scheduling": {
                    "$ref": "Scheduling",
                    "description": "Scheduling options for this instance."
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                },
                "serviceAccounts": {
                    "description": "A list of service accounts each with specified scopes, for which access tokens are to be made available to the instance through metadata queries.",
                    "items": {
                        "$ref": "ServiceAccount"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "Instance status. One of the following values: \"PROVISIONING\", \"STAGING\", \"RUNNING\", \"STOPPING\", \"STOPPED\", \"TERMINATED\" (output only).",
                    "enum": [
                        "PROVISIONING",
                        "RUNNING",
                        "STAGING",
                        "STOPPED",
                        "STOPPING",
                        "TERMINATED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "statusMessage": {
                    "description": "An optional, human-readable explanation of the status (output only).",
                    "type": "string"
                },
                "tags": {
                    "$ref": "Tags",
                    "description": "A list of tags to be applied to this instance. Used to identify valid sources or targets for network firewalls. Provided by the client on instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035."
                },
                "zone": {
                    "description": "URL of the zone where the instance resides (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InstanceAggregatedList": {
            "id": "InstanceAggregatedList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "additionalProperties": {
                        "$ref": "InstancesScopedList",
                        "description": "Name of the scope containing this set of instances."
                    },
                    "description": "A map of scoped instance lists.",
                    "type": "object"
                },
                "kind": {
                    "default": "compute#instanceAggregatedList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InstanceList": {
            "description": "Contains a list of instance resources.",
            "id": "InstanceList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "A list of instance resources.",
                    "items": {
                        "$ref": "Instance"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#instanceList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InstanceProperties": {
            "description": "",
            "id": "InstanceProperties",
            "properties": {
                "canIpForward": {
                    "description": "Allows instances created based on this template to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, say true. If unsure, leave this set to false.",
                    "type": "boolean"
                },
                "description": {
                    "description": "An optional textual description for the instances created based on the instance template resource; provided by the client when the template is created.",
                    "type": "string"
                },
                "disks": {
                    "description": "Array of disks associated with instance created based on this template.",
                    "items": {
                        "$ref": "AttachedDisk"
                    },
                    "type": "array"
                },
                "machineType": {
                    "annotations": {
                        "required": [
                            "compute.instanceTemplates.insert"
                        ]
                    },
                    "description": "Name of the machine type resource describing which machine type to use to host the instances created based on this template; provided by the client when the instance template is created.",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "Metadata",
                    "description": "Metadata key/value pairs assigned to instances created based on this template. Consists of custom metadata or predefined keys; see Instance documentation for more information."
                },
                "networkInterfaces": {
                    "description": "Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instances created based based on this template will have no external internet access.",
                    "items": {
                        "$ref": "NetworkInterface"
                    },
                    "type": "array"
                },
                "scheduling": {
                    "$ref": "Scheduling",
                    "description": "Scheduling options for the instances created based on this template."
                },
                "serviceAccounts": {
                    "description": "A list of service accounts each with specified scopes, for which access tokens are to be made available to the instances created based on this template, through metadata queries.",
                    "items": {
                        "$ref": "ServiceAccount"
                    },
                    "type": "array"
                },
                "tags": {
                    "$ref": "Tags",
                    "description": "A list of tags to be applied to the instances created based on this template used to identify valid sources or targets for network firewalls. Provided by the client on instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035."
                }
            },
            "type": "object"
        },
        "InstanceReference": {
            "id": "InstanceReference",
            "properties": {
                "instance": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InstanceTemplate": {
            "description": "An Instance Template resource.",
            "id": "InstanceTemplate",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the instance template resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#instanceTemplate",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "annotations": {
                        "required": [
                            "compute.instanceTemplates.insert"
                        ]
                    },
                    "description": "Name of the instance template resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "properties": {
                    "$ref": "InstanceProperties",
                    "description": "The instance properties portion of this instance template resource."
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InstanceTemplateList": {
            "description": "Contains a list of instance template resources.",
            "id": "InstanceTemplateList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "A list of instance template resources.",
                    "items": {
                        "$ref": "InstanceTemplate"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#instanceTemplateList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InstancesScopedList": {
            "id": "InstancesScopedList",
            "properties": {
                "instances": {
                    "description": "List of instances contained in this scope.",
                    "items": {
                        "$ref": "Instance"
                    },
                    "type": "array"
                },
                "warning": {
                    "description": "Informational warning which replaces the list of instances when the list is empty.",
                    "properties": {
                        "code": {
                            "description": "The warning type identifier for this warning.",
                            "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "INJECTED_KERNELS_DEPRECATED",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_NOT_RUNNING",
                                "NO_RESULTS_ON_PAGE",
                                "REQUIRED_TOS_AGREEMENT",
                                "RESOURCE_NOT_DELETED",
                                "UNREACHABLE"
                            ],
                            "enumDescriptions": [
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                ""
                            ],
                            "type": "string"
                        },
                        "data": {
                            "description": "Metadata for this warning in 'key: value' format.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "description": "A key for the warning data.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "A warning data value corresponding to the key.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "message": {
                            "description": "Optional human-readable details for this warning.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "License": {
            "description": "A license resource.",
            "id": "License",
            "properties": {
                "chargesUseFee": {
                    "description": "If true, the customer will be charged license fee for running software that contains this license on an instance.",
                    "type": "boolean"
                },
                "kind": {
                    "default": "compute#license",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "name": {
                    "annotations": {
                        "required": [
                            "compute.images.insert"
                        ]
                    },
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MachineType": {
            "description": "A machine type resource.",
            "id": "MachineType",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "deprecated": {
                    "$ref": "DeprecationStatus",
                    "description": "The deprecation status associated with this machine type."
                },
                "description": {
                    "description": "An optional textual description of the resource.",
                    "type": "string"
                },
                "guestCpus": {
                    "description": "Count of CPUs exposed to the instance.",
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "imageSpaceGb": {
                    "description": "Space allotted for the image, defined in GB.",
                    "format": "int32",
                    "type": "integer"
                },
                "kind": {
                    "default": "compute#machineType",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "maximumPersistentDisks": {
                    "description": "Maximum persistent disks allowed.",
                    "format": "int32",
                    "type": "integer"
                },
                "maximumPersistentDisksSizeGb": {
                    "description": "Maximum total persistent disks size (GB) allowed.",
                    "format": "int64",
                    "type": "string"
                },
                "memoryMb": {
                    "description": "Physical memory assigned to the instance, defined in MB.",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the resource.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "scratchDisks": {
                    "description": "List of extended scratch disks assigned to the instance.",
                    "items": {
                        "properties": {
                            "diskGb": {
                                "description": "Size of the scratch disk, defined in GB.",
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "zone": {
                    "description": "Url of the zone where the machine type resides (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MachineTypeAggregatedList": {
            "id": "MachineTypeAggregatedList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "additionalProperties": {
                        "$ref": "MachineTypesScopedList",
                        "description": "Name of the scope containing this set of machine types."
                    },
                    "description": "A map of scoped machine type lists.",
                    "type": "object"
                },
                "kind": {
                    "default": "compute#machineTypeAggregatedList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MachineTypeList": {
            "description": "Contains a list of machine type resources.",
            "id": "MachineTypeList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The machine type resources.",
                    "items": {
                        "$ref": "MachineType"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#machineTypeList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MachineTypesScopedList": {
            "id": "MachineTypesScopedList",
            "properties": {
                "machineTypes": {
                    "description": "List of machine types contained in this scope.",
                    "items": {
                        "$ref": "MachineType"
                    },
                    "type": "array"
                },
                "warning": {
                    "description": "Informational warning which replaces the list of machine types when the list is empty.",
                    "properties": {
                        "code": {
                            "description": "The warning type identifier for this warning.",
                            "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "INJECTED_KERNELS_DEPRECATED",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_NOT_RUNNING",
                                "NO_RESULTS_ON_PAGE",
                                "REQUIRED_TOS_AGREEMENT",
                                "RESOURCE_NOT_DELETED",
                                "UNREACHABLE"
                            ],
                            "enumDescriptions": [
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                ""
                            ],
                            "type": "string"
                        },
                        "data": {
                            "description": "Metadata for this warning in 'key: value' format.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "description": "A key for the warning data.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "A warning data value corresponding to the key.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "message": {
                            "description": "Optional human-readable details for this warning.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Metadata": {
            "description": "A metadata key/value entry.",
            "id": "Metadata",
            "properties": {
                "fingerprint": {
                    "description": "Fingerprint of this resource. A hash of the metadata's contents. This field is used for optimistic locking. An up-to-date metadata fingerprint must be provided in order to modify metadata.",
                    "format": "byte",
                    "type": "string"
                },
                "items": {
                    "description": "Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
                    "items": {
                        "properties": {
                            "key": {
                                "annotations": {
                                    "required": [
                                        "compute.instances.insert",
                                        "compute.projects.setCommonInstanceMetadata"
                                    ]
                                },
                                "description": "Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.",
                                "pattern": "[a-zA-Z0-9-_]{1,128}",
                                "type": "string"
                            },
                            "value": {
                                "annotations": {
                                    "required": [
                                        "compute.instances.insert",
                                        "compute.projects.setCommonInstanceMetadata"
                                    ]
                                },
                                "description": "Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#metadata",
                    "description": "Type of the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Network": {
            "description": "A network resource.",
            "id": "Network",
            "properties": {
                "IPv4Range": {
                    "annotations": {
                        "required": [
                            "compute.networks.insert"
                        ]
                    },
                    "description": "Required; The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.",
                    "pattern": "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}/[0-9]{1,2}",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "gatewayIPv4": {
                    "description": "An optional address that is used for default routing to other networks. This must be within the range specified by IPv4Range, and is typically the first usable address in that range. If not specified, the default value is the first usable address in IPv4Range.",
                    "pattern": "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#network",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "annotations": {
                        "required": [
                            "compute.networks.insert"
                        ]
                    },
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NetworkInterface": {
            "description": "A network interface resource attached to an instance.",
            "id": "NetworkInterface",
            "properties": {
                "accessConfigs": {
                    "description": "Array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Currently, ONE_TO_ONE_NAT is the only access config supported. If there are no accessConfigs specified, then this instance will have no external internet access.",
                    "items": {
                        "$ref": "AccessConfig"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the network interface, determined by the server; for network devices, these are e.g. eth0, eth1, etc. (output only).",
                    "type": "string"
                },
                "network": {
                    "annotations": {
                        "required": [
                            "compute.instances.insert"
                        ]
                    },
                    "description": "URL of the network resource attached to this interface.",
                    "type": "string"
                },
                "networkIP": {
                    "description": "An optional IPV4 internal network address assigned to the instance for this network interface (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NetworkList": {
            "description": "Contains a list of network resources.",
            "id": "NetworkList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The network resources.",
                    "items": {
                        "$ref": "Network"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#networkList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Operation": {
            "description": "An operation resource, used to manage asynchronous API requests.",
            "id": "Operation",
            "properties": {
                "clientOperationId": {
                    "description": "An optional identifier specified by the client when the mutation was initiated. Must be unique for all operation resources in the project (output only).",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "endTime": {
                    "description": "The time that this operation was completed. This is in RFC 3339 format (output only).",
                    "type": "string"
                },
                "error": {
                    "description": "If errors occurred during processing of this operation, this field will be populated (output only).",
                    "properties": {
                        "errors": {
                            "description": "The array of errors encountered while processing this operation.",
                            "items": {
                                "properties": {
                                    "code": {
                                        "description": "The error type identifier for this error.",
                                        "type": "string"
                                    },
                                    "location": {
                                        "description": "Indicates the field in the request which caused the error. This property is optional.",
                                        "type": "string"
                                    },
                                    "message": {
                                        "description": "An optional, human-readable error message.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "httpErrorMessage": {
                    "description": "If operation fails, the HTTP error message returned, e.g. NOT FOUND. (output only).",
                    "type": "string"
                },
                "httpErrorStatusCode": {
                    "description": "If operation fails, the HTTP error status code returned, e.g. 404. (output only).",
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "insertTime": {
                    "description": "The time that this operation was requested. This is in RFC 3339 format (output only).",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#operation",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource (output only).",
                    "type": "string"
                },
                "operationType": {
                    "description": "Type of the operation. Examples include \"insert\", \"update\", and \"delete\" (output only).",
                    "type": "string"
                },
                "progress": {
                    "description": "An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess at when the operation will be complete. This number should be monotonically increasing as the operation progresses (output only).",
                    "format": "int32",
                    "type": "integer"
                },
                "region": {
                    "description": "URL of the region where the operation resides (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "startTime": {
                    "description": "The time that this operation was started by the server. This is in RFC 3339 format (output only).",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the operation. Can be one of the following: \"PENDING\", \"RUNNING\", or \"DONE\" (output only).",
                    "enum": [
                        "DONE",
                        "PENDING",
                        "RUNNING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "statusMessage": {
                    "description": "An optional textual description of the current status of the operation (output only).",
                    "type": "string"
                },
                "targetId": {
                    "description": "Unique target id which identifies a particular incarnation of the target (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "targetLink": {
                    "description": "URL of the resource the operation is mutating (output only).",
                    "type": "string"
                },
                "user": {
                    "description": "User who requested the operation, for example \"user@example.com\" (output only).",
                    "type": "string"
                },
                "warnings": {
                    "description": "If warning messages generated during processing of this operation, this field will be populated (output only).",
                    "items": {
                        "properties": {
                            "code": {
                                "description": "The warning type identifier for this warning.",
                                "enum": [
                                    "DEPRECATED_RESOURCE_USED",
                                    "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                    "INJECTED_KERNELS_DEPRECATED",
                                    "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                    "NEXT_HOP_CANNOT_IP_FORWARD",
                                    "NEXT_HOP_INSTANCE_NOT_FOUND",
                                    "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                    "NEXT_HOP_NOT_RUNNING",
                                    "NO_RESULTS_ON_PAGE",
                                    "REQUIRED_TOS_AGREEMENT",
                                    "RESOURCE_NOT_DELETED",
                                    "UNREACHABLE"
                                ],
                                "enumDescriptions": [
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    ""
                                ],
                                "type": "string"
                            },
                            "data": {
                                "description": "Metadata for this warning in 'key: value' format.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "description": "A key for the warning data.",
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "A warning data value corresponding to the key.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "message": {
                                "description": "Optional human-readable details for this warning.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "zone": {
                    "description": "URL of the zone where the operation resides (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OperationAggregatedList": {
            "id": "OperationAggregatedList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "additionalProperties": {
                        "$ref": "OperationsScopedList",
                        "description": "Name of the scope containing this set of operations."
                    },
                    "description": "A map of scoped operation lists.",
                    "type": "object"
                },
                "kind": {
                    "default": "compute#operationAggregatedList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OperationList": {
            "description": "Contains a list of operation resources.",
            "id": "OperationList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The operation resources.",
                    "items": {
                        "$ref": "Operation"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#operationList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OperationsScopedList": {
            "id": "OperationsScopedList",
            "properties": {
                "operations": {
                    "description": "List of operations contained in this scope.",
                    "items": {
                        "$ref": "Operation"
                    },
                    "type": "array"
                },
                "warning": {
                    "description": "Informational warning which replaces the list of operations when the list is empty.",
                    "properties": {
                        "code": {
                            "description": "The warning type identifier for this warning.",
                            "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "INJECTED_KERNELS_DEPRECATED",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_NOT_RUNNING",
                                "NO_RESULTS_ON_PAGE",
                                "REQUIRED_TOS_AGREEMENT",
                                "RESOURCE_NOT_DELETED",
                                "UNREACHABLE"
                            ],
                            "enumDescriptions": [
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                ""
                            ],
                            "type": "string"
                        },
                        "data": {
                            "description": "Metadata for this warning in 'key: value' format.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "description": "A key for the warning data.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "A warning data value corresponding to the key.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "message": {
                            "description": "Optional human-readable details for this warning.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PathMatcher": {
            "description": "A matcher for the path portion of the URL. The BackendService from the longest-matched rule will serve the URL. If no rule was matched, the default_service will be used.",
            "id": "PathMatcher",
            "properties": {
                "defaultService": {
                    "description": "The URL to the BackendService resource. This will be used if none of the 'pathRules' defined by this PathMatcher is met by the URL's path portion.",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "description": "The name to which this PathMatcher is referred by the HostRule.",
                    "type": "string"
                },
                "pathRules": {
                    "description": "The list of path rules.",
                    "items": {
                        "$ref": "PathRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PathRule": {
            "description": "A path-matching rule for a URL. If matched, will use the specified BackendService to handle the traffic arriving at this URL.",
            "id": "PathRule",
            "properties": {
                "paths": {
                    "description": "The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "service": {
                    "description": "The URL of the BackendService resource if this rule is matched.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Project": {
            "description": "A project resource. Projects can be created only in the APIs Console. Unless marked otherwise, values can only be modified in the console.",
            "id": "Project",
            "properties": {
                "commonInstanceMetadata": {
                    "$ref": "Metadata",
                    "description": "Metadata key/value pairs available to all instances contained in this project."
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#project",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource.",
                    "type": "string"
                },
                "quotas": {
                    "description": "Quotas assigned to this project.",
                    "items": {
                        "$ref": "Quota"
                    },
                    "type": "array"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "usageExportLocation": {
                    "$ref": "UsageExportLocation",
                    "description": "The location in Cloud Storage and naming method of the daily usage report."
                }
            },
            "type": "object"
        },
        "Quota": {
            "description": "A quotas entry.",
            "id": "Quota",
            "properties": {
                "limit": {
                    "description": "Quota limit for this metric.",
                    "format": "double",
                    "type": "number"
                },
                "metric": {
                    "description": "Name of the quota metric.",
                    "enum": [
                        "BACKEND_SERVICES",
                        "CPUS",
                        "DISKS",
                        "DISKS_TOTAL_GB",
                        "EPHEMERAL_ADDRESSES",
                        "FIREWALLS",
                        "FORWARDING_RULES",
                        "HEALTH_CHECKS",
                        "IMAGES",
                        "IMAGES_TOTAL_GB",
                        "INSTANCES",
                        "IN_USE_ADDRESSES",
                        "KERNELS",
                        "KERNELS_TOTAL_GB",
                        "LOCAL_SSD_TOTAL_GB",
                        "NETWORKS",
                        "OPERATIONS",
                        "ROUTES",
                        "SNAPSHOTS",
                        "SSD_TOTAL_GB",
                        "STATIC_ADDRESSES",
                        "TARGET_HTTP_PROXIES",
                        "TARGET_INSTANCES",
                        "TARGET_POOLS",
                        "URL_MAPS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "usage": {
                    "description": "Current usage of this metric.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Region": {
            "description": "Region resource.",
            "id": "Region",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "deprecated": {
                    "$ref": "DeprecationStatus",
                    "description": "The deprecation status associated with this region."
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#region",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource.",
                    "type": "string"
                },
                "quotas": {
                    "description": "Quotas assigned to this region.",
                    "items": {
                        "$ref": "Quota"
                    },
                    "type": "array"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the region, \"UP\" or \"DOWN\".",
                    "enum": [
                        "DOWN",
                        "UP"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "zones": {
                    "description": "A list of zones homed in this region, in the form of resource URLs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RegionList": {
            "description": "Contains a list of region resources.",
            "id": "RegionList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The region resources.",
                    "items": {
                        "$ref": "Region"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#regionList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResourceGroupReference": {
            "id": "ResourceGroupReference",
            "properties": {
                "group": {
                    "description": "A URI referencing one of the resource views listed in the backend service.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Route": {
            "description": "The route resource. A Route is a rule that specifies how certain packets should be handled by the virtual network. Routes are associated with VMs by tag and the set of Routes for a particular VM is called its routing table. For each packet leaving a VM, the system searches that VM's routing table for a single best matching Route. Routes match packets by destination IP address, preferring smaller or more specific ranges over larger ones. If there is a tie, the system selects the Route with the smallest priority value. If there is still a tie, it uses the layer three and four packet headers to select just one of the remaining matching Routes. The packet is then forwarded as specified by the next_hop field of the winning Route -- either to another VM destination, a VM gateway or a GCE operated gateway. Packets that do not match any Route in the sending VM's routing table will be dropped.",
            "id": "Route",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "destRange": {
                    "annotations": {
                        "required": [
                            "compute.routes.insert"
                        ]
                    },
                    "description": "Which packets does this route apply to?",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#route",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "annotations": {
                        "required": [
                            "compute.routes.insert"
                        ]
                    },
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "network": {
                    "annotations": {
                        "required": [
                            "compute.routes.insert"
                        ]
                    },
                    "description": "URL of the network to which this route is applied; provided by the client when the route is created.",
                    "type": "string"
                },
                "nextHopGateway": {
                    "description": "The URL to a gateway that should handle matching packets.",
                    "type": "string"
                },
                "nextHopInstance": {
                    "description": "The URL to an instance that should handle matching packets.",
                    "type": "string"
                },
                "nextHopIp": {
                    "description": "The network IP address of an instance that should handle matching packets.",
                    "type": "string"
                },
                "nextHopNetwork": {
                    "description": "The URL of the local network if it should handle matching packets.",
                    "type": "string"
                },
                "priority": {
                    "annotations": {
                        "required": [
                            "compute.routes.insert"
                        ]
                    },
                    "description": "Breaks ties between Routes of equal specificity. Routes with smaller values win when tied with routes with larger values.",
                    "format": "uint32",
                    "type": "integer"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "tags": {
                    "annotations": {
                        "required": [
                            "compute.routes.insert"
                        ]
                    },
                    "description": "A list of instance tags to which this route applies.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "warnings": {
                    "description": "If potential misconfigurations are detected for this route, this field will be populated with warning messages.",
                    "items": {
                        "properties": {
                            "code": {
                                "description": "The warning type identifier for this warning.",
                                "enum": [
                                    "DEPRECATED_RESOURCE_USED",
                                    "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                    "INJECTED_KERNELS_DEPRECATED",
                                    "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                    "NEXT_HOP_CANNOT_IP_FORWARD",
                                    "NEXT_HOP_INSTANCE_NOT_FOUND",
                                    "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                    "NEXT_HOP_NOT_RUNNING",
                                    "NO_RESULTS_ON_PAGE",
                                    "REQUIRED_TOS_AGREEMENT",
                                    "RESOURCE_NOT_DELETED",
                                    "UNREACHABLE"
                                ],
                                "enumDescriptions": [
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    ""
                                ],
                                "type": "string"
                            },
                            "data": {
                                "description": "Metadata for this warning in 'key: value' format.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "description": "A key for the warning data.",
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "A warning data value corresponding to the key.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "message": {
                                "description": "Optional human-readable details for this warning.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RouteList": {
            "description": "Contains a list of route resources.",
            "id": "RouteList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The route resources.",
                    "items": {
                        "$ref": "Route"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#routeList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Scheduling": {
            "description": "Scheduling options for an Instance.",
            "id": "Scheduling",
            "properties": {
                "automaticRestart": {
                    "description": "Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user).",
                    "type": "boolean"
                },
                "onHostMaintenance": {
                    "description": "How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance.",
                    "enum": [
                        "MIGRATE",
                        "TERMINATE"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SerialPortOutput": {
            "description": "An instance serial console output.",
            "id": "SerialPortOutput",
            "properties": {
                "contents": {
                    "description": "The contents of the console output.",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#serialPortOutput",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ServiceAccount": {
            "description": "A service account.",
            "id": "ServiceAccount",
            "properties": {
                "email": {
                    "description": "Email address of the service account.",
                    "type": "string"
                },
                "scopes": {
                    "description": "The list of scopes to be made available for this service account.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Snapshot": {
            "description": "A persistent disk snapshot resource.",
            "id": "Snapshot",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "diskSizeGb": {
                    "description": "Size of the persistent disk snapshot, specified in GB (output only).",
                    "format": "int64",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#snapshot",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "licenses": {
                    "description": "Public visible licenses.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "sourceDisk": {
                    "description": "The source disk used to create this snapshot.",
                    "type": "string"
                },
                "sourceDiskId": {
                    "description": "The 'id' value of the disk used to create this snapshot. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given disk name.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the persistent disk snapshot (output only).",
                    "enum": [
                        "CREATING",
                        "DELETING",
                        "FAILED",
                        "READY",
                        "UPLOADING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "storageBytes": {
                    "description": "A size of the the storage used by the snapshot. As snapshots share storage this number is expected to change with snapshot creation/deletion.",
                    "format": "int64",
                    "type": "string"
                },
                "storageBytesStatus": {
                    "description": "An indicator whether storageBytes is in a stable state, or it is being adjusted as a result of shared storage reallocation.",
                    "enum": [
                        "UPDATING",
                        "UP_TO_DATE"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotList": {
            "description": "Contains a list of persistent disk snapshot resources.",
            "id": "SnapshotList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The persistent snapshot resources.",
                    "items": {
                        "$ref": "Snapshot"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#snapshotList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Tags": {
            "description": "A set of instance tags.",
            "id": "Tags",
            "properties": {
                "fingerprint": {
                    "description": "Fingerprint of this resource. A hash of the tags stored in this object. This field is used optimistic locking. An up-to-date tags fingerprint must be provided in order to modify tags.",
                    "format": "byte",
                    "type": "string"
                },
                "items": {
                    "description": "An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TargetHttpProxy": {
            "description": "A TargetHttpProxy resource. This resource defines an HTTP proxy.",
            "id": "TargetHttpProxy",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#targetHttpProxy",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "urlMap": {
                    "description": "URL to the UrlMap resource that defines the mapping from URL to the BackendService.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetHttpProxyList": {
            "description": "Contains a list of TargetHttpProxy resources.",
            "id": "TargetHttpProxyList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The TargetHttpProxy resources.",
                    "items": {
                        "$ref": "TargetHttpProxy"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#targetHttpProxyList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetInstance": {
            "description": "A TargetInstance resource. This resource defines an endpoint VM that terminates traffic of certain protocols.",
            "id": "TargetInstance",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "instance": {
                    "description": "The URL to the instance that terminates the relevant traffic.",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#targetInstance",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "natPolicy": {
                    "description": "NAT option controlling how IPs are NAT'ed to the VM. Currently only NO_NAT (default value) is supported.",
                    "enum": [
                        "NO_NAT"
                    ],
                    "enumDescriptions": [
                        ""
                    ],
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "zone": {
                    "description": "URL of the zone where the target instance resides (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetInstanceAggregatedList": {
            "id": "TargetInstanceAggregatedList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "additionalProperties": {
                        "$ref": "TargetInstancesScopedList",
                        "description": "Name of the scope containing this set of target instances."
                    },
                    "description": "A map of scoped target instance lists.",
                    "type": "object"
                },
                "kind": {
                    "default": "compute#targetInstanceAggregatedList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetInstanceList": {
            "description": "Contains a list of TargetInstance resources.",
            "id": "TargetInstanceList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The TargetInstance resources.",
                    "items": {
                        "$ref": "TargetInstance"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#targetInstanceList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetInstancesScopedList": {
            "id": "TargetInstancesScopedList",
            "properties": {
                "targetInstances": {
                    "description": "List of target instances contained in this scope.",
                    "items": {
                        "$ref": "TargetInstance"
                    },
                    "type": "array"
                },
                "warning": {
                    "description": "Informational warning which replaces the list of addresses when the list is empty.",
                    "properties": {
                        "code": {
                            "description": "The warning type identifier for this warning.",
                            "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "INJECTED_KERNELS_DEPRECATED",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_NOT_RUNNING",
                                "NO_RESULTS_ON_PAGE",
                                "REQUIRED_TOS_AGREEMENT",
                                "RESOURCE_NOT_DELETED",
                                "UNREACHABLE"
                            ],
                            "enumDescriptions": [
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                ""
                            ],
                            "type": "string"
                        },
                        "data": {
                            "description": "Metadata for this warning in 'key: value' format.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "description": "A key for the warning data.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "A warning data value corresponding to the key.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "message": {
                            "description": "Optional human-readable details for this warning.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TargetPool": {
            "description": "A TargetPool resource. This resource defines a pool of VMs, associated HttpHealthCheck resources, and the fallback TargetPool.",
            "id": "TargetPool",
            "properties": {
                "backupPool": {
                    "description": "This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its 'failoverRatio' field is properly set to a value between [0, 1].\n\n'backupPool' and 'failoverRatio' together define the fallback behavior of the primary target pool: if the ratio of the healthy VMs in the primary pool is at or below 'failoverRatio', traffic arriving at the load-balanced IP will be directed to the backup pool.\n\nIn case where 'failoverRatio' and 'backupPool' are not set, or all the VMs in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the \"force\" mode, where traffic will be spread to the healthy VMs with the best effort, or to all VMs when no VM is healthy.",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "failoverRatio": {
                    "description": "This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1].\n\nIf set, 'backupPool' must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy VMs in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool.\n\nIn case where 'failoverRatio' is not set or all the VMs in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the \"force\" mode, where traffic will be spread to the healthy VMs with the best effort, or to all VMs when no VM is healthy.",
                    "format": "float",
                    "type": "number"
                },
                "healthChecks": {
                    "description": "A list of URLs to the HttpHealthCheck resource. A member VM in this pool is considered healthy if and only if all specified health checks pass. An empty list means all member VMs will be considered healthy at all times.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "instances": {
                    "description": "A list of resource URLs to the member VMs serving this pool. They must live in zones contained in the same region as this pool.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#targetPool",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "region": {
                    "description": "URL of the region where the target pool resides (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "sessionAffinity": {
                    "description": "Sesssion affinity option, must be one of the following values: 'NONE': Connections from the same client IP may go to any VM in the pool; 'CLIENT_IP': Connections from the same client IP will go to the same VM in the pool while that VM remains healthy. 'CLIENT_IP_PROTO': Connections from the same client IP with the same IP protocol will go to the same VM in the pool while that VM remains healthy.",
                    "enum": [
                        "CLIENT_IP",
                        "CLIENT_IP_PROTO",
                        "NONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetPoolAggregatedList": {
            "id": "TargetPoolAggregatedList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "additionalProperties": {
                        "$ref": "TargetPoolsScopedList",
                        "description": "Name of the scope containing this set of target pools."
                    },
                    "description": "A map of scoped target pool lists.",
                    "type": "object"
                },
                "kind": {
                    "default": "compute#targetPoolAggregatedList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetPoolInstanceHealth": {
            "id": "TargetPoolInstanceHealth",
            "properties": {
                "healthStatus": {
                    "items": {
                        "$ref": "HealthStatus"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#targetPoolInstanceHealth",
                    "description": "Type of resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetPoolList": {
            "description": "Contains a list of TargetPool resources.",
            "id": "TargetPoolList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The TargetPool resources.",
                    "items": {
                        "$ref": "TargetPool"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#targetPoolList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetPoolsAddHealthCheckRequest": {
            "id": "TargetPoolsAddHealthCheckRequest",
            "properties": {
                "healthChecks": {
                    "description": "Health check URLs to be added to targetPool.",
                    "items": {
                        "$ref": "HealthCheckReference"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TargetPoolsAddInstanceRequest": {
            "id": "TargetPoolsAddInstanceRequest",
            "properties": {
                "instances": {
                    "description": "URLs of the instances to be added to targetPool.",
                    "items": {
                        "$ref": "InstanceReference"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TargetPoolsRemoveHealthCheckRequest": {
            "id": "TargetPoolsRemoveHealthCheckRequest",
            "properties": {
                "healthChecks": {
                    "description": "Health check URLs to be removed from targetPool.",
                    "items": {
                        "$ref": "HealthCheckReference"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TargetPoolsRemoveInstanceRequest": {
            "id": "TargetPoolsRemoveInstanceRequest",
            "properties": {
                "instances": {
                    "description": "URLs of the instances to be removed from targetPool.",
                    "items": {
                        "$ref": "InstanceReference"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TargetPoolsScopedList": {
            "id": "TargetPoolsScopedList",
            "properties": {
                "targetPools": {
                    "description": "List of target pools contained in this scope.",
                    "items": {
                        "$ref": "TargetPool"
                    },
                    "type": "array"
                },
                "warning": {
                    "description": "Informational warning which replaces the list of addresses when the list is empty.",
                    "properties": {
                        "code": {
                            "description": "The warning type identifier for this warning.",
                            "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "INJECTED_KERNELS_DEPRECATED",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_NOT_RUNNING",
                                "NO_RESULTS_ON_PAGE",
                                "REQUIRED_TOS_AGREEMENT",
                                "RESOURCE_NOT_DELETED",
                                "UNREACHABLE"
                            ],
                            "enumDescriptions": [
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                "",
                                ""
                            ],
                            "type": "string"
                        },
                        "data": {
                            "description": "Metadata for this warning in 'key: value' format.",
                            "items": {
                                "properties": {
                                    "key": {
                                        "description": "A key for the warning data.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "A warning data value corresponding to the key.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "message": {
                            "description": "Optional human-readable details for this warning.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TargetReference": {
            "id": "TargetReference",
            "properties": {
                "target": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TestFailure": {
            "id": "TestFailure",
            "properties": {
                "actualService": {
                    "type": "string"
                },
                "expectedService": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UrlMap": {
            "description": "A UrlMap resource. This resource defines the mapping from URL to the BackendService resource, based on the \"longest-match\" of the URL's host and path.",
            "id": "UrlMap",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "defaultService": {
                    "description": "The URL of the BackendService resource if none of the hostRules match.",
                    "type": "string"
                },
                "description": {
                    "description": "An optional textual description of the resource; provided by the client when the resource is created.",
                    "type": "string"
                },
                "fingerprint": {
                    "description": "Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap.",
                    "format": "byte",
                    "type": "string"
                },
                "hostRules": {
                    "description": "The list of HostRules to use against the URL.",
                    "items": {
                        "$ref": "HostRule"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#urlMap",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035.",
                    "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
                    "type": "string"
                },
                "pathMatchers": {
                    "description": "The list of named PathMatchers to use against the URL.",
                    "items": {
                        "$ref": "PathMatcher"
                    },
                    "type": "array"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "tests": {
                    "description": "The list of expected URL mappings. Request to update this UrlMap will succeed only all of the test cases pass.",
                    "items": {
                        "$ref": "UrlMapTest"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "UrlMapList": {
            "description": "Contains a list of UrlMap resources.",
            "id": "UrlMapList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The UrlMap resources.",
                    "items": {
                        "$ref": "UrlMap"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#urlMapList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UrlMapReference": {
            "id": "UrlMapReference",
            "properties": {
                "urlMap": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UrlMapTest": {
            "description": "Message for the expected URL mappings.",
            "id": "UrlMapTest",
            "properties": {
                "description": {
                    "description": "Description of this test case.",
                    "type": "string"
                },
                "host": {
                    "description": "Host portion of the URL.",
                    "type": "string"
                },
                "path": {
                    "description": "Path portion of the URL.",
                    "type": "string"
                },
                "service": {
                    "description": "Expected BackendService resource the given URL should be mapped to.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UrlMapValidationResult": {
            "description": "Message representing the validation result for a UrlMap.",
            "id": "UrlMapValidationResult",
            "properties": {
                "loadErrors": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "loadSucceeded": {
                    "description": "Whether the given UrlMap can be successfully loaded. If false, 'loadErrors' indicates the reasons.",
                    "type": "boolean"
                },
                "testFailures": {
                    "items": {
                        "$ref": "TestFailure"
                    },
                    "type": "array"
                },
                "testPassed": {
                    "description": "If successfully loaded, this field indicates whether the test passed. If false, 'testFailures's indicate the reason of failure.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UrlMapsValidateRequest": {
            "id": "UrlMapsValidateRequest",
            "properties": {
                "resource": {
                    "$ref": "UrlMap",
                    "description": "Content of the UrlMap to be validated."
                }
            },
            "type": "object"
        },
        "UrlMapsValidateResponse": {
            "id": "UrlMapsValidateResponse",
            "properties": {
                "result": {
                    "$ref": "UrlMapValidationResult"
                }
            },
            "type": "object"
        },
        "UsageExportLocation": {
            "description": "The location in Cloud Storage and naming method of the daily usage report. Contains bucket_name and report_name prefix.",
            "id": "UsageExportLocation",
            "properties": {
                "bucketName": {
                    "description": "The name of an existing bucket in Cloud Storage where the usage report object is stored. The Google Service Account is granted write access to this bucket. This is simply the bucket name, with no \"gs://\" or \"https://storage.googleapis.com/\" in front of it.",
                    "type": "string"
                },
                "reportNamePrefix": {
                    "description": "An optional prefix for the name of the usage report object stored in bucket_name. If not supplied, defaults to \"usage_\". The report is stored as a CSV file named _gce_.csv. where  is the day of the usage according to Pacific Time. The prefix should conform to Cloud Storage object naming conventions.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Zone": {
            "description": "A zone resource.",
            "id": "Zone",
            "properties": {
                "creationTimestamp": {
                    "description": "Creation timestamp in RFC3339 text format (output only).",
                    "type": "string"
                },
                "deprecated": {
                    "$ref": "DeprecationStatus",
                    "description": "The deprecation status associated with this zone."
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "format": "uint64",
                    "type": "string"
                },
                "kind": {
                    "default": "compute#zone",
                    "description": "Type of the resource.",
                    "type": "string"
                },
                "maintenanceWindows": {
                    "description": "Scheduled maintenance windows for the zone. When the zone is in a maintenance window, all resources which reside in the zone will be unavailable.",
                    "items": {
                        "properties": {
                            "beginTime": {
                                "description": "Begin time of the maintenance window, in RFC 3339 format.",
                                "type": "string"
                            },
                            "description": {
                                "description": "Textual description of the maintenance window.",
                                "type": "string"
                            },
                            "endTime": {
                                "description": "End time of the maintenance window, in RFC 3339 format.",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name of the maintenance window.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the resource.",
                    "type": "string"
                },
                "region": {
                    "description": "Full URL reference to the region which hosts the zone (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for the resource (output only).",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the zone. \"UP\" or \"DOWN\".",
                    "enum": [
                        "DOWN",
                        "UP"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ZoneList": {
            "description": "Contains a list of zone resources.",
            "id": "ZoneList",
            "properties": {
                "id": {
                    "description": "Unique identifier for the resource; defined by the server (output only).",
                    "type": "string"
                },
                "items": {
                    "description": "The zone resources.",
                    "items": {
                        "$ref": "Zone"
                    },
                    "type": "array"
                },
                "kind": {
                    "default": "compute#zoneList",
                    "description": "Type of resource.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "A token used to continue a truncated list request (output only).",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Server defined URL for this resource (output only).",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "compute/v1/projects/",
    "title": "Compute Engine API",
    "version": "v1"
}