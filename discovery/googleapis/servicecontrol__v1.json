{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {
                    "description": "View and manage your data across Google Cloud Platform services"
                },
                "https://www.googleapis.com/auth/servicecontrol": {
                    "description": "Manage your Google Service Control data"
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://servicecontrol.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Service Control",
    "description": "The Service Control API",
    "discoveryVersion": "v1",
    "documentationLink": "https://cloud.google.com/service-control/",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "servicecontrol:v1",
    "kind": "discovery#restDescription",
    "name": "servicecontrol",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "pp": {
            "default": "true",
            "description": "Pretty-print response.",
            "location": "query",
            "type": "boolean"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "bearer_token": {
            "description": "OAuth bearer token.",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "services": {
            "methods": {
                "check": {
                    "description": "Checks an operation with Google Service Control to decide whether\nthe given operation should proceed. It should be called before the\noperation is executed.\n\nThis method requires the `servicemanagement.services.check` permission\non the specified service. For more information, see\n[Google Cloud IAM](https://cloud.google.com/iam).",
                    "httpMethod": "POST",
                    "id": "servicecontrol.services.check",
                    "parameterOrder": [
                        "serviceName"
                    ],
                    "parameters": {
                        "serviceName": {
                            "description": "The service name as specified in its service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/services/{serviceName}:check",
                    "request": {
                        "$ref": "CheckRequest"
                    },
                    "response": {
                        "$ref": "CheckResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ]
                },
                "report": {
                    "description": "Reports operations to Google Service Control. It should be called\nafter the operation is completed.\n\nThis method requires the `servicemanagement.services.report` permission\non the specified service. For more information, see\n[Google Cloud IAM](https://cloud.google.com/iam).",
                    "httpMethod": "POST",
                    "id": "servicecontrol.services.report",
                    "parameterOrder": [
                        "serviceName"
                    ],
                    "parameters": {
                        "serviceName": {
                            "description": "The service name as specified in its service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/services/{serviceName}:report",
                    "request": {
                        "$ref": "ReportRequest"
                    },
                    "response": {
                        "$ref": "ReportResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ]
                }
            }
        }
    },
    "revision": "20160801",
    "rootUrl": "https://servicecontrol.googleapis.com/",
    "schemas": {
        "CheckError": {
            "description": "Defines the errors to be returned in\ngoogle.api.servicecontrol.v1.CheckResponse.check_errors.",
            "id": "CheckError",
            "properties": {
                "code": {
                    "description": "The error code.",
                    "enum": [
                        "ERROR_CODE_UNSPECIFIED",
                        "NOT_FOUND",
                        "PERMISSION_DENIED",
                        "RESOURCE_EXHAUSTED",
                        "SERVICE_NOT_ACTIVATED",
                        "BILLING_DISABLED",
                        "PROJECT_DELETED",
                        "PROJECT_INVALID",
                        "IP_ADDRESS_BLOCKED",
                        "REFERER_BLOCKED",
                        "CLIENT_APP_BLOCKED",
                        "API_KEY_INVALID",
                        "API_KEY_EXPIRED",
                        "API_KEY_NOT_FOUND",
                        "NAMESPACE_LOOKUP_UNAVAILABLE",
                        "SERVICE_STATUS_UNAVAILABLE",
                        "BILLING_STATUS_UNAVAILABLE"
                    ],
                    "enumDescriptions": [
                        "This is never used in `CheckResponse`.",
                        "The consumer's project id was not found.\nSame as google.rpc.Code.NOT_FOUND.",
                        "The consumer doesn't have access to the specified resource.\nSame as google.rpc.Code.PERMISSION_DENIED.",
                        "Quota check failed. Same as google.rpc.Code.RESOURCE_EXHAUSTED.",
                        "The consumer hasn't activated the service.",
                        "The consumer cannot access the service because billing is disabled.",
                        "The consumer's project has been marked as deleted (soft deletion).",
                        "The consumer's project number or id does not represent a valid project.",
                        "The IP address of the consumer is invalid for the specific consumer\nproject.",
                        "The referer address of the consumer request is invalid for the specific\nconsumer project.",
                        "The client application of the consumer request is invalid for the\nspecific consumer project.",
                        "The consumer's API key is invalid.",
                        "The consumer's API Key has expired.",
                        "The consumer's API Key was not found in config record.",
                        "The backend server for looking up project id/number is unavailable.",
                        "The backend server for checking service status is unavailable.",
                        "The backend server for checking billing status is unavailable."
                    ],
                    "type": "string"
                },
                "detail": {
                    "description": "Free-form text providing details on the error cause of the error.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Status": {
            "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` which can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting purpose.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
            "id": "Status",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReportError": {
            "description": "Represents the processing error of one `Operation` in the request.",
            "id": "ReportError",
            "properties": {
                "operationId": {
                    "description": "The Operation.operation_id value from the request.",
                    "type": "string"
                },
                "status": {
                    "$ref": "Status",
                    "description": "Details of the error when processing the `Operation`."
                }
            },
            "type": "object"
        },
        "ExponentialBuckets": {
            "description": "Describing buckets with exponentially growing width.",
            "id": "ExponentialBuckets",
            "properties": {
                "growthFactor": {
                    "description": "The i'th exponential bucket covers the interval\n  [scale * growth_factor^(i-1), scale * growth_factor^i)\nwhere i ranges from 1 to num_finite_buckets inclusive.\nMust be larger than 1.0.",
                    "format": "double",
                    "type": "number"
                },
                "scale": {
                    "description": "The i'th exponential bucket covers the interval\n  [scale * growth_factor^(i-1), scale * growth_factor^i)\nwhere i ranges from 1 to num_finite_buckets inclusive.\nMust be > 0.",
                    "format": "double",
                    "type": "number"
                },
                "numFiniteBuckets": {
                    "description": "The number of finite buckets. With the underflow and overflow buckets,\nthe total number of buckets is `num_finite_buckets` + 2.\nSee comments on `bucket_options` for details.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Operation": {
            "description": "Represents information regarding an operation.",
            "id": "Operation",
            "properties": {
                "operationName": {
                    "description": "Fully qualified name of the operation. Reserved for future use.",
                    "type": "string"
                },
                "operationId": {
                    "description": "Identity of the operation. This must be unique within the scope of the\nservice that generated the operation. If the service calls\nCheck() and Report() on the same operation, the two calls should carry\nthe same id.\n\nUUID version 4 is recommended, though not required.\nIn scenarios where an operation is computed from existing information\nand an idempotent id is desirable for deduplication purpose, UUID version 5\nis recommended. See RFC 4122 for details.",
                    "type": "string"
                },
                "endTime": {
                    "description": "End time of the operation.\nRequired when the operation is used in ServiceController.Report,\nbut optional when the operation is used in ServiceController.Check.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels describing the operation. Only the following labels are allowed:\n\n- Labels describing monitored resources as defined in\n  the service configuration.\n- Default labels of metric values. When specified, labels defined in the\n  metric value override these default.\n- The following labels defined by Google Cloud Platform:\n    - `cloud.googleapis.com/location` describing the location where the\n       operation happened,\n    - `servicecontrol.googleapis.com/user_agent` describing the user agent\n       of the API request,\n    - `servicecontrol.googleapis.com/service_agent` describing the service\n       used to handle the API request (e.g. ESP),\n    - `servicecontrol.googleapis.com/platform` describing the platform\n       where the API is served (e.g. GAE, GCE, GKE).",
                    "type": "object"
                },
                "importance": {
                    "description": "The importance of the data contained in the operation.",
                    "enum": [
                        "LOW",
                        "HIGH"
                    ],
                    "enumDescriptions": [
                        "The operation doesn't contain significant monetary value or audit\ntrail. The API implementation may cache and aggregate the data.\nThere is no deduplication based on `operation_id`. The data\nmay be lost when rare and unexpected system failures occur.",
                        "The operation contains significant monetary value or audit trail.\nThe API implementation doesn't cache and aggregate the data.\nDeduplication based on `operation_id` is performed for monetary\nvalues. If the method returns successfully, it's guaranteed that\nthe data are persisted in durable storage."
                    ],
                    "type": "string"
                },
                "consumerId": {
                    "description": "Identity of the consumer who is using the service.\nThis field should be filled in for the operations initiated by a\nconsumer, but not for service-initiated operations that are\nnot related to a specific consumer.\n\nThis can be in one of the following formats:\n  project:<project_id>,\n  project_number:<project_number>,\n  api_key:<api_key>.",
                    "type": "string"
                },
                "startTime": {
                    "description": "Required. Start time of the operation.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "logEntries": {
                    "description": "Represents information to be logged.",
                    "items": {
                        "$ref": "LogEntry"
                    },
                    "type": "array"
                },
                "metricValueSets": {
                    "description": "Represents information about this operation. Each MetricValueSet\ncorresponds to a metric defined in the service configuration.\nThe data type used in the MetricValueSet must agree with\nthe data type specified in the metric definition.\n\nWithin a single operation, it is not allowed to have more than one\nMetricValue instances that have the same metric names and identical\nlabel value combinations. If a request has such duplicated MetricValue\ninstances, the entire request is rejected with\nan invalid argument error.",
                    "items": {
                        "$ref": "MetricValueSet"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CheckRequest": {
            "description": "Request message for the Check method.",
            "id": "CheckRequest",
            "properties": {
                "operation": {
                    "$ref": "Operation",
                    "description": "The operation to be checked."
                }
            },
            "type": "object"
        },
        "LogEntry": {
            "description": "An individual log entry.",
            "id": "LogEntry",
            "properties": {
                "textPayload": {
                    "description": "The log entry payload, represented as a Unicode string (UTF-8).",
                    "type": "string"
                },
                "structPayload": {
                    "additionalProperties": {
                        "description": "Properties of the object.",
                        "type": "any"
                    },
                    "description": "The log entry payload, represented as a structure that\nis expressed as a JSON object.",
                    "type": "object"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A set of user-defined (key, value) data that provides additional\ninformation about the log entry.",
                    "type": "object"
                },
                "severity": {
                    "description": "The severity of the log entry. The default value is\n`LogSeverity.DEFAULT`.",
                    "enum": [
                        "DEFAULT",
                        "DEBUG",
                        "INFO",
                        "NOTICE",
                        "WARNING",
                        "ERROR",
                        "CRITICAL",
                        "ALERT",
                        "EMERGENCY"
                    ],
                    "enumDescriptions": [
                        "The log entry has no assigned severity level.",
                        "Debug or trace information.",
                        "Routine information, such as ongoing status or performance.",
                        "Normal but significant events, such as start up, shut down, or\nconfiguration.",
                        "Warning events might cause problems.",
                        "Error events are likely to cause problems.",
                        "Critical events cause more severe problems or brief outages.",
                        "A person must take an action immediately.",
                        "One or more systems are unusable."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Required. The log to which this log entry belongs. Examples: `\"syslog\"`,\n`\"book_log\"`.",
                    "type": "string"
                },
                "protoPayload": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "The log entry payload, represented as a protocol buffer that is\nexpressed as a JSON object. You can only pass `protoPayload`\nvalues that belong to a set of approved types.",
                    "type": "object"
                },
                "timestamp": {
                    "description": "The time the event described by the log entry occurred. If\nomitted, defaults to operation start time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "insertId": {
                    "description": "A unique ID for the log entry used for deduplication. If omitted,\nthe implementation will generate one based on operation_id.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReportRequest": {
            "description": "Request message for the Report method.",
            "id": "ReportRequest",
            "properties": {
                "operations": {
                    "description": "Operations to be reported.\n\nTypically the service should report one operation per request.\nPutting multiple operations into a single request is allowed, but should\nbe used only when multiple operations are natually available at the time\nof the report.\n\nIf multiple operations are in a single request, the total request size\nshould be no larger than 1MB. See ReportResponse.report_errors for\npartial failure behavior.",
                    "items": {
                        "$ref": "Operation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MetricValueSet": {
            "description": "Represents a set of metric values in the same metric.\nEach metric value in the set should have a unique combination of start time,\nend time, and label values.",
            "id": "MetricValueSet",
            "properties": {
                "metricName": {
                    "description": "The metric name defined in the service configuration.",
                    "type": "string"
                },
                "metricValues": {
                    "description": "The values in this metric.",
                    "items": {
                        "$ref": "MetricValue"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LinearBuckets": {
            "description": "Describing buckets with constant width.",
            "id": "LinearBuckets",
            "properties": {
                "width": {
                    "description": "The i'th linear bucket covers the interval\n  [offset + (i-1) * width, offset + i * width)\nwhere i ranges from 1 to num_finite_buckets, inclusive.\nMust be strictly positive.",
                    "format": "double",
                    "type": "number"
                },
                "offset": {
                    "description": "The i'th linear bucket covers the interval\n  [offset + (i-1) * width, offset + i * width)\nwhere i ranges from 1 to num_finite_buckets, inclusive.",
                    "format": "double",
                    "type": "number"
                },
                "numFiniteBuckets": {
                    "description": "The number of finite buckets. With the underflow and overflow buckets,\nthe total number of buckets is `num_finite_buckets` + 2.\nSee comments on `bucket_options` for details.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CheckResponse": {
            "description": "Response message for the Check method.",
            "id": "CheckResponse",
            "properties": {
                "checkErrors": {
                    "description": "Indicate the decision of the check.\n\nIf no check errors are present, the service should process the operation.\nOtherwise the service should use the list of errors to determine the\nappropriate action.",
                    "items": {
                        "$ref": "CheckError"
                    },
                    "type": "array"
                },
                "operationId": {
                    "description": "The same operation_id value used in the CheckRequest.\nUsed for logging and diagnostics purposes.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReportResponse": {
            "description": "Response message for the Report method.",
            "id": "ReportResponse",
            "properties": {
                "reportErrors": {
                    "description": "Partial failures, one for each `Operation` in the request that failed\nprocessing. There are three possible combinations of the RPC status:\n\n1. The combination of a successful RPC status and an empty `report_errors`\n   list indicates a complete success where all `Operations` in the\n   request are processed successfully.\n2. The combination of a successful RPC status and a non-empty\n   `report_errors` list indicates a partial success where some\n   `Operations` in the request succeeded. Each\n   `Operation` that failed processing has a corresponding item\n   in this list.\n3. A failed RPC status indicates a complete failure where none of the\n   `Operations` in the request succeeded.",
                    "items": {
                        "$ref": "ReportError"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Distribution": {
            "description": "Distribution represents a frequency distribution of double-valued sample\npoints. It contains the size of the population of sample points plus\nadditional optional information:\n\n  - the arithmetic mean of the samples\n  - the minimum and maximum of the samples\n  - the sum-squared-deviation of the samples, used to compute variance\n  - a histogram of the values of the sample points",
            "id": "Distribution",
            "properties": {
                "bucketCounts": {
                    "description": "The number of samples in each histogram bucket. `bucket_counts` are\noptional. If present, they must sum to the `count` value.\n\nThe buckets are defined below in `bucket_option`. There are N buckets.\n`bucket_counts[0]` is the number of samples in the underflow bucket.\n`bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples\nin each of the finite buckets. And `bucket_counts[N] is the number\nof samples in the overflow bucket. See the comments of `bucket_option`\nbelow for more details.\n\nAny suffix of trailing zeros may be omitted.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "exponentialBuckets": {
                    "$ref": "ExponentialBuckets",
                    "description": "Buckets with exponentially growing width."
                },
                "explicitBuckets": {
                    "$ref": "ExplicitBuckets",
                    "description": "Buckets with arbitrary user-provided width."
                },
                "maximum": {
                    "description": "The maximum of the population of values. Ignored if `count` is zero.",
                    "format": "double",
                    "type": "number"
                },
                "count": {
                    "description": "The total number of samples in the distribution. Must be >= 0.",
                    "format": "int64",
                    "type": "string"
                },
                "linearBuckets": {
                    "$ref": "LinearBuckets",
                    "description": "Buckets with constant width."
                },
                "sumOfSquaredDeviation": {
                    "description": "The sum of squared deviations from the mean:\n  Sum[i=1..count]((x_i - mean)^2)\nwhere each x_i is a sample values. If `count` is zero then this field\nmust be zero, otherwise validation of the request fails.",
                    "format": "double",
                    "type": "number"
                },
                "minimum": {
                    "description": "The minimum of the population of values. Ignored if `count` is zero.",
                    "format": "double",
                    "type": "number"
                },
                "mean": {
                    "description": "The arithmetic mean of the samples in the distribution. If `count` is\nzero then this field must be zero.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ExplicitBuckets": {
            "description": "Describing buckets with arbitrary user-provided width.",
            "id": "ExplicitBuckets",
            "properties": {
                "bounds": {
                    "description": "'bound' is a list of strictly increasing boundaries between\nbuckets. Note that a list of length N-1 defines N buckets because\nof fenceposting. See comments on `bucket_options` for details.\n\nThe i'th finite bucket covers the interval\n  [bound[i-1], bound[i])\nwhere i ranges from 1 to bound_size() - 1. Note that there are no\nfinite buckets at all if 'bound' only contains a single element; in\nthat special case the single bound defines the boundary between the\nunderflow and overflow buckets.\n\nbucket number                   lower bound    upper bound\n i == 0 (underflow)              -inf           bound[i]\n 0 < i < bound_size()            bound[i-1]     bound[i]\n i == bound_size() (overflow)    bound[i-1]     +inf",
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MetricValue": {
            "description": "Represents a single metric value.",
            "id": "MetricValue",
            "properties": {
                "stringValue": {
                    "description": "A text string value.",
                    "type": "string"
                },
                "doubleValue": {
                    "description": "A double precision floating point value.",
                    "format": "double",
                    "type": "number"
                },
                "boolValue": {
                    "description": "A boolean value.",
                    "type": "boolean"
                },
                "endTime": {
                    "description": "The end of the time period over which this metric value's measurement\napplies.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The labels describing the metric value.\nSee comments on google.api.servicecontrol.v1.Operation.labels for\nthe overriding relationship.",
                    "type": "object"
                },
                "distributionValue": {
                    "$ref": "Distribution",
                    "description": "A distribution value."
                },
                "startTime": {
                    "description": "The start of the time period over which this metric value's measurement\napplies. The time period has different semantics for different metric\ntypes (cumulative, delta, and gauge). See the metric definition\ndocumentation in the service configuration for details.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "int64Value": {
                    "description": "A signed 64-bit integer value.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Google Service Control API",
    "version": "v1"
}