{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {
                    "description": "View and manage your data across Google Cloud Platform services"
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://dataproc.googleapis.com/",
    "batchPath": "batch",
    "description": "An API for managing Hadoop-based clusters and jobs on Google Cloud Platform.",
    "discoveryVersion": "v1",
    "documentationLink": "https://cloud.google.com/dataproc/",
    "etag": "\"tbys6C40o18GZwyMen5GMkdK-3s/cZQ-6vqHhMM0YELMHYWsiSzNXAM\"",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "dataproc:v1beta1",
    "kind": "discovery#restDescription",
    "name": "dataproc",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "bearer_token": {
            "description": "OAuth bearer token.",
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "pp": {
            "default": "true",
            "description": "Pretty-print response.",
            "location": "query",
            "type": "boolean"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "$.xgafv": {
            "description": "V1 error format.",
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "projects": {
            "resources": {
                "clusters": {
                    "methods": {
                        "create": {
                            "description": "Creates a cluster in a project.",
                            "httpMethod": "POST",
                            "id": "dataproc.projects.clusters.create",
                            "parameterOrder": [
                                "projectId"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project that the cluster belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/clusters",
                            "request": {
                                "$ref": "Cluster"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "patch": {
                            "description": "Updates a cluster in a project.",
                            "httpMethod": "PATCH",
                            "id": "dataproc.projects.clusters.patch",
                            "parameterOrder": [
                                "projectId",
                                "clusterName"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project the cluster belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "clusterName": {
                                    "description": "[Required] The cluster name.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "updateMask": {
                                    "description": "[Required] Specifies the path, relative to Cluster, of the field to update. For example, to change the number of workers in a cluster to 5, the update_mask parameter would be specified as configuration.worker_configuration.num_instances, and the `PATCH` request body would specify the new value, as follows: { \"configuration\":{ \"workerConfiguration\":{ \"numInstances\":\"5\" } } } Similarly, to change the number of preemptible workers in a cluster to 5, the update_mask parameter would be config.secondary_worker_config.num_instances, and the `PATCH` request body would be set as follows: { \"config\":{ \"secondaryWorkerConfig\":{ \"numInstances\":\"5\" } } } Note: Currently, config.worker_config.num_instances and config.secondary_worker_config.num_instances are the only fields that can be updated.",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/clusters/{clusterName}",
                            "request": {
                                "$ref": "Cluster"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "delete": {
                            "description": "Deletes a cluster in a project.",
                            "httpMethod": "DELETE",
                            "id": "dataproc.projects.clusters.delete",
                            "parameterOrder": [
                                "projectId",
                                "clusterName"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project that the cluster belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "clusterName": {
                                    "description": "[Required] The cluster name.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/clusters/{clusterName}",
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "get": {
                            "description": "Gets the resource representation for a cluster in a project.",
                            "httpMethod": "GET",
                            "id": "dataproc.projects.clusters.get",
                            "parameterOrder": [
                                "projectId",
                                "clusterName"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project that the cluster belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "clusterName": {
                                    "description": "[Required] The cluster name.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/clusters/{clusterName}",
                            "response": {
                                "$ref": "Cluster"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "list": {
                            "description": "Lists all clusters in a project.",
                            "httpMethod": "GET",
                            "id": "dataproc.projects.clusters.list",
                            "parameterOrder": [
                                "projectId"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project that the cluster belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "filter": {
                                    "description": "[Optional] A filter constraining which clusters to list. Valid filters contain label terms such as: labels.key1 = val1 AND (-labels.k2 = val2 OR labels.k3 = val3)",
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "The standard List page size.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The standard List page token.",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/clusters",
                            "response": {
                                "$ref": "ListClustersResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "diagnose": {
                            "description": "Gets cluster diagnostic information. After the operation completes, the Operation.response field contains `DiagnoseClusterOutputLocation`.",
                            "httpMethod": "POST",
                            "id": "dataproc.projects.clusters.diagnose",
                            "parameterOrder": [
                                "projectId",
                                "clusterName"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project that the cluster belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "clusterName": {
                                    "description": "[Required] The cluster name.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/clusters/{clusterName}:diagnose",
                            "request": {
                                "$ref": "DiagnoseClusterRequest"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    }
                },
                "jobs": {
                    "methods": {
                        "submit": {
                            "description": "Submits a job to a cluster.",
                            "httpMethod": "POST",
                            "id": "dataproc.projects.jobs.submit",
                            "parameterOrder": [
                                "projectId"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project that the job belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/jobs:submit",
                            "request": {
                                "$ref": "SubmitJobRequest"
                            },
                            "response": {
                                "$ref": "Job"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "get": {
                            "description": "Gets the resource representation for a job in a project.",
                            "httpMethod": "GET",
                            "id": "dataproc.projects.jobs.get",
                            "parameterOrder": [
                                "projectId",
                                "jobId"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project that the job belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "jobId": {
                                    "description": "[Required] The job ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/jobs/{jobId}",
                            "response": {
                                "$ref": "Job"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "list": {
                            "description": "Lists jobs in a project.",
                            "httpMethod": "GET",
                            "id": "dataproc.projects.jobs.list",
                            "parameterOrder": [
                                "projectId"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project that the job belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "[Optional] The number of results to return in each response.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "[Optional] The page token, returned by a previous call, to request the next page of results.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "clusterName": {
                                    "description": "[Optional] If set, the returned jobs list includes only jobs that were submitted to the named cluster.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "jobStateMatcher": {
                                    "description": "[Optional] Specifies enumerated categories of jobs to list.",
                                    "enum": [
                                        "ALL",
                                        "ACTIVE",
                                        "NON_ACTIVE"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "filter": {
                                    "description": "[Optional] A filter constraining which jobs to list. Valid filters contain job state and label terms such as: labels.key1 = val1 AND (labels.k2 = val2 OR labels.k3 = val3)",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/jobs",
                            "response": {
                                "$ref": "ListJobsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "cancel": {
                            "description": "Starts a job cancellation request. To access the job resource after cancellation, call [jobs.list](/dataproc/reference/rest/v1beta1/projects.jobs/list) or [jobs.get](/dataproc/reference/rest/v1beta1/projects.jobs/get).",
                            "httpMethod": "POST",
                            "id": "dataproc.projects.jobs.cancel",
                            "parameterOrder": [
                                "projectId",
                                "jobId"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project that the job belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "jobId": {
                                    "description": "[Required] The job ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/jobs/{jobId}:cancel",
                            "request": {
                                "$ref": "CancelJobRequest"
                            },
                            "response": {
                                "$ref": "Job"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "delete": {
                            "description": "Deletes the job from the project. If the job is active, the delete fails, and the response returns `FAILED_PRECONDITION`.",
                            "httpMethod": "DELETE",
                            "id": "dataproc.projects.jobs.delete",
                            "parameterOrder": [
                                "projectId",
                                "jobId"
                            ],
                            "parameters": {
                                "projectId": {
                                    "description": "[Required] The ID of the Google Cloud Platform project that the job belongs to.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "jobId": {
                                    "description": "[Required] The job ID.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1beta1/projects/{projectId}/jobs/{jobId}",
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    }
                }
            }
        },
        "operations": {
            "methods": {
                "get": {
                    "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                    "httpMethod": "GET",
                    "id": "dataproc.operations.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the operation resource.",
                            "location": "path",
                            "pattern": "^operations/.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1beta1/{+name}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "list": {
                    "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding below allows API services to override the binding to use different resource name schemes, such as `users/*/operations`.",
                    "httpMethod": "GET",
                    "id": "dataproc.operations.list",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the operation collection.",
                            "location": "path",
                            "pattern": "^operations$",
                            "required": true,
                            "type": "string"
                        },
                        "filter": {
                            "description": "The standard list filter.",
                            "location": "query",
                            "type": "string"
                        },
                        "pageSize": {
                            "description": "The standard list page size.",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "The standard list page token.",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1beta1/{+name}",
                    "response": {
                        "$ref": "ListOperationsResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "cancel": {
                    "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use [operations.get](/dataproc/reference/rest/v1beta1/operations/get) or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation.",
                    "httpMethod": "POST",
                    "id": "dataproc.operations.cancel",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the operation resource to be cancelled.",
                            "location": "path",
                            "pattern": "^operations/.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1beta1/{+name}:cancel",
                    "request": {
                        "$ref": "CancelOperationRequest"
                    },
                    "response": {
                        "$ref": "Empty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "delete": {
                    "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                    "httpMethod": "DELETE",
                    "id": "dataproc.operations.delete",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the operation resource to be deleted.",
                            "location": "path",
                            "pattern": "^operations/.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1beta1/{+name}",
                    "response": {
                        "$ref": "Empty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            }
        }
    },
    "revision": "20161102",
    "rootUrl": "https://dataproc.googleapis.com/",
    "schemas": {
        "Cluster": {
            "description": "Describes the identifying information, configuration, and status of a cluster of Google Compute Engine instances.",
            "id": "Cluster",
            "properties": {
                "projectId": {
                    "description": "[Required] The Google Cloud Platform project ID that the cluster belongs to.",
                    "type": "string"
                },
                "clusterName": {
                    "description": "[Required] The cluster name. Cluster names within a project must be unique. Names from deleted clusters can be reused.",
                    "type": "string"
                },
                "configuration": {
                    "$ref": "ClusterConfiguration",
                    "description": "[Required] The cluster configuration. Note that Cloud Dataproc may set default values, and values may change when clusters are updated."
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] The labels to associate with this cluster. Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given cluster.",
                    "type": "object"
                },
                "status": {
                    "$ref": "ClusterStatus",
                    "description": "[Output-only] Cluster status."
                },
                "statusHistory": {
                    "description": "[Output-only] Previous cluster statuses.",
                    "items": {
                        "$ref": "ClusterStatus"
                    },
                    "type": "array"
                },
                "clusterUuid": {
                    "description": "[Output-only] A cluster UUID (Unique Universal Identifier). Cloud Dataproc generates this value when it creates the cluster.",
                    "type": "string"
                },
                "metrics": {
                    "$ref": "ClusterMetrics",
                    "description": "Contains cluster daemon metrics such as HDFS and YARN stats."
                }
            },
            "type": "object"
        },
        "ClusterConfiguration": {
            "description": "The cluster configuration.",
            "id": "ClusterConfiguration",
            "properties": {
                "configurationBucket": {
                    "description": "[Optional] A Google Cloud Storage staging bucket used for sharing generated SSH keys and configuration. If you do not specify a staging bucket, Cloud Dataproc will determine an appropriate Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Google Compute Engine zone where your cluster is deployed, and then it will create and manage this project-level, per-location bucket for you.",
                    "type": "string"
                },
                "gceClusterConfiguration": {
                    "$ref": "GceClusterConfiguration",
                    "description": "[Required] The shared Google Compute Engine configuration settings for all instances in a cluster."
                },
                "masterConfiguration": {
                    "$ref": "InstanceGroupConfiguration",
                    "description": "[Optional] The Google Compute Engine configuration settings for the master instance in a cluster."
                },
                "workerConfiguration": {
                    "$ref": "InstanceGroupConfiguration",
                    "description": "[Optional] The Google Compute Engine configuration settings for worker instances in a cluster."
                },
                "secondaryWorkerConfiguration": {
                    "$ref": "InstanceGroupConfiguration",
                    "description": "[Optional] The Google Compute Engine configuration settings for additional worker instances in a cluster."
                },
                "softwareConfiguration": {
                    "$ref": "SoftwareConfiguration",
                    "description": "[Optional] The configuration settings for software inside the cluster."
                },
                "initializationActions": {
                    "description": "[Optional] Commands to execute on each node after configuration is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below: ROLE=$(/usr/share/google/get_metadata_value attributes/role) if [[ \"${ROLE}\" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi",
                    "items": {
                        "$ref": "NodeInitializationAction"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GceClusterConfiguration": {
            "description": "Common configuration settings for resources of Google Compute Engine cluster instances, applicable to all instances in the cluster.",
            "id": "GceClusterConfiguration",
            "properties": {
                "zoneUri": {
                    "description": "[Required] The zone where the Google Compute Engine cluster will be located. Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]`.",
                    "type": "string"
                },
                "networkUri": {
                    "description": "The Google Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the \"default\" network of the project is used, if it exists. Cannot be a \"Custom Subnet Network\" (see https://cloud.google.com/compute/docs/subnetworks for more information). Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default`.",
                    "type": "string"
                },
                "subnetworkUri": {
                    "description": "The Google Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri. Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/sub0`.",
                    "type": "string"
                },
                "internalIpOnly": {
                    "description": "If true, all instances in the cluser will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.",
                    "type": "boolean"
                },
                "serviceAccountScopes": {
                    "description": "The URIs of service account scopes to be included in Google Compute Engine instances. The following base set of scopes is always included: - https://www.googleapis.com/auth/cloud.useraccounts.readonly - https://www.googleapis.com/auth/devstorage.read_write - https://www.googleapis.com/auth/logging.write If no scopes are specfied, the following defaults are also provided: - https://www.googleapis.com/auth/bigquery - https://www.googleapis.com/auth/bigtable.admin.table - https://www.googleapis.com/auth/bigtable.data - https://www.googleapis.com/auth/devstorage.full_control",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tags": {
                    "description": "The Google Compute Engine tags to add to all instances.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Google Compute Engine metadata entries to add to all instances.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "InstanceGroupConfiguration": {
            "description": "The configuration settings for Google Compute Engine resources in an instance group, such as a master or worker group.",
            "id": "InstanceGroupConfiguration",
            "properties": {
                "numInstances": {
                    "description": "The number of VM instances in the instance group. For master instance groups, must be set to 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "instanceNames": {
                    "description": "The list of instance names. Dataproc derives the names from `cluster_name`, `num_instances`, and the instance group if not set by user (recommended practice is to let Dataproc derive the name).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "imageUri": {
                    "description": "[Output-only] The Google Compute Engine image resource used for cluster instances. Inferred from `SoftwareConfiguration.image_version`.",
                    "type": "string"
                },
                "machineTypeUri": {
                    "description": "The Google Compute Engine machine type used for cluster instances. Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2`.",
                    "type": "string"
                },
                "diskConfiguration": {
                    "$ref": "DiskConfiguration",
                    "description": "Disk option configuration settings."
                },
                "isPreemptible": {
                    "description": "Specifies that this instance group contains Preemptible Instances.",
                    "type": "boolean"
                },
                "managedGroupConfiguration": {
                    "$ref": "ManagedGroupConfiguration",
                    "description": "[Output-only] The configuration for Google Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups."
                }
            },
            "type": "object"
        },
        "DiskConfiguration": {
            "description": "Specifies the configuration of disk options for a group of VM instances.",
            "id": "DiskConfiguration",
            "properties": {
                "bootDiskSizeGb": {
                    "description": "[Optional] Size in GB of the boot disk (default is 500GB).",
                    "format": "int32",
                    "type": "integer"
                },
                "numLocalSsds": {
                    "description": "[Optional] Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic configuration and installed binaries.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ManagedGroupConfiguration": {
            "description": "Specifies the resources used to actively manage an instance group.",
            "id": "ManagedGroupConfiguration",
            "properties": {
                "instanceTemplateName": {
                    "description": "[Output-only] The name of the Instance Template used for the Managed Instance Group.",
                    "type": "string"
                },
                "instanceGroupManagerName": {
                    "description": "[Output-only] The name of the Instance Group Manager for this group.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SoftwareConfiguration": {
            "description": "Specifies the selection and configuration of software inside the cluster.",
            "id": "SoftwareConfiguration",
            "properties": {
                "imageVersion": {
                    "description": "[Optional] The version of software inside the cluster. It must match the regular expression `[0-9]+\\.[0-9]+`. If unspecified, it defaults to the latest version (see [Cloud Dataproc Versioning](/dataproc/versioning)).",
                    "type": "string"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] The properties to set on daemon configuration files. Property keys are specified in \"prefix:property\" format, such as \"core:fs.defaultFS\". The following are supported prefixes and their mappings: core - core-site.xml hdfs - hdfs-site.xml mapred - mapred-site.xml yarn - yarn-site.xml hive - hive-site.xml pig - pig.properties spark - spark-defaults.conf",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "NodeInitializationAction": {
            "description": "Specifies an executable to run on a fully configured node and a timeout period for executable completion.",
            "id": "NodeInitializationAction",
            "properties": {
                "executableFile": {
                    "description": "[Required] Google Cloud Storage URI of executable file.",
                    "type": "string"
                },
                "executionTimeout": {
                    "description": "[Optional] Amount of time executable has to complete. Default is 10 minutes. Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterStatus": {
            "description": "The status of a cluster and its instances.",
            "id": "ClusterStatus",
            "properties": {
                "state": {
                    "description": "The cluster's state.",
                    "enum": [
                        "UNKNOWN",
                        "CREATING",
                        "RUNNING",
                        "ERROR",
                        "DELETING",
                        "UPDATING"
                    ],
                    "type": "string"
                },
                "detail": {
                    "description": "Optional details of cluster's state.",
                    "type": "string"
                },
                "stateStartTime": {
                    "description": "Time when this state was entered.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterMetrics": {
            "description": "Contains cluster daemon metrics, such as HDFS and YARN stats.",
            "id": "ClusterMetrics",
            "properties": {
                "hdfsMetrics": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "The HDFS metrics.",
                    "type": "object"
                },
                "yarnMetrics": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "The YARN metrics.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Operation": {
            "description": "This resource represents a long-running operation that is the result of a network API call.",
            "id": "Operation",
            "properties": {
                "name": {
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should have the format of `operations/some/unique/name`.",
                    "type": "string"
                },
                "metadata": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "type": "object"
                },
                "done": {
                    "description": "If the value is `false`, it means the operation is still in progress. If true, the operation is completed, and either `error` or `response` is available.",
                    "type": "boolean"
                },
                "error": {
                    "$ref": "Status",
                    "description": "The error result of the operation in case of failure or cancellation."
                },
                "response": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Status": {
            "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model is designed to be: - Simple to use and understand for most users - Flexible enough to meet unexpected needs # Overview The `Status` message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The error message should be a developer-facing English message that helps developers *understand* and *resolve* the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package `google.rpc` which can be used for common error conditions. # Language mapping The `Status` message is the logical representation of the error model, but it is not necessarily the actual wire format. When the `Status` message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C. # Other uses The error model and the `Status` message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments. Example uses of this error model include: - Partial errors. If a service needs to return partial errors to the client, it may embed the `Status` in the normal response to indicate the partial errors. - Workflow errors. A typical workflow has multiple steps. Each step may have a `Status` message for error reporting purpose. - Batch operations. If a client uses batch request and batch response, the `Status` message should be used directly inside batch response, one for each error sub-response. - Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of those operations should be represented directly using the `Status` message. - Logging. If some API errors are stored in logs, the message `Status` could be used directly after any stripping needed for security/privacy reasons.",
            "id": "Status",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                },
                "details": {
                    "description": "A list of messages that carry the error details. There will be a common set of message types for APIs to use.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListClustersResponse": {
            "description": "The list of all clusters in a project.",
            "id": "ListClustersResponse",
            "properties": {
                "clusters": {
                    "description": "[Output-only] The clusters in the project.",
                    "items": {
                        "$ref": "Cluster"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "The standard List next-page token.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DiagnoseClusterRequest": {
            "description": "A request to collect cluster diagnostic information.",
            "id": "DiagnoseClusterRequest",
            "type": "object"
        },
        "SubmitJobRequest": {
            "description": "A request to submit a job.",
            "id": "SubmitJobRequest",
            "properties": {
                "job": {
                    "$ref": "Job",
                    "description": "[Required] The job resource."
                }
            },
            "type": "object"
        },
        "Job": {
            "description": "A Cloud Dataproc job resource.",
            "id": "Job",
            "properties": {
                "reference": {
                    "$ref": "JobReference",
                    "description": "[Optional] The fully qualified reference to the job, which can be used to obtain the equivalent REST path of the job resource. If this property is not specified when a job is created, the server generates a job_id."
                },
                "placement": {
                    "$ref": "JobPlacement",
                    "description": "[Required] Job information, including how, when, and where to run the job."
                },
                "hadoopJob": {
                    "$ref": "HadoopJob",
                    "description": "Job is a Hadoop job."
                },
                "sparkJob": {
                    "$ref": "SparkJob",
                    "description": "Job is a Spark job."
                },
                "pysparkJob": {
                    "$ref": "PySparkJob",
                    "description": "Job is a Pyspark job."
                },
                "hiveJob": {
                    "$ref": "HiveJob",
                    "description": "Job is a Hive job."
                },
                "pigJob": {
                    "$ref": "PigJob",
                    "description": "Job is a Pig job."
                },
                "sparkSqlJob": {
                    "$ref": "SparkSqlJob",
                    "description": "Job is a SparkSql job."
                },
                "status": {
                    "$ref": "JobStatus",
                    "description": "[Output-only] The job status. Additional application-specific status information may be contained in the type_job and yarn_applications fields."
                },
                "statusHistory": {
                    "description": "[Output-only] The previous job status.",
                    "items": {
                        "$ref": "JobStatus"
                    },
                    "type": "array"
                },
                "yarnApplications": {
                    "description": "[Output-only] The collection of YARN applications spun up by this job.",
                    "items": {
                        "$ref": "YarnApplication"
                    },
                    "type": "array"
                },
                "submittedBy": {
                    "description": "[Output-only] The email address of the user submitting the job. For jobs submitted on the cluster, the address is username@hostname.",
                    "type": "string"
                },
                "driverInputResourceUri": {
                    "description": "[Output-only] A URI pointing to the location of the stdin of the job's driver program, only set if the job is interactive.",
                    "type": "string"
                },
                "driverOutputResourceUri": {
                    "description": "[Output-only] A URI pointing to the location of the stdout of the job's driver program.",
                    "type": "string"
                },
                "driverControlFilesUri": {
                    "description": "[Output-only] If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as `driver_output_uri`.",
                    "type": "string"
                },
                "interactive": {
                    "description": "[Optional] If set to `true`, the driver's stdin will be kept open and `driver_input_uri` will be set to provide a path at which additional input can be sent to the driver.",
                    "type": "boolean"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] The labels to associate with this job. Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\p{Ll}\\p{Lo}{0,62} Label values must be between 1 and 63 characters long, and must conform to the following regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given job.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JobReference": {
            "description": "Encapsulates the full scoping used to reference a job.",
            "id": "JobReference",
            "properties": {
                "projectId": {
                    "description": "[Required] The ID of the Google Cloud Platform project that the job belongs to.",
                    "type": "string"
                },
                "jobId": {
                    "description": "[Required] The job ID, which must be unique within the project. The job ID is generated by the server upon job submission or provided by the user as a means to perform retries without creating duplicate jobs. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 512 characters.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobPlacement": {
            "description": "Cloud Dataproc job configuration.",
            "id": "JobPlacement",
            "properties": {
                "clusterName": {
                    "description": "[Required] The name of the cluster where the job will be submitted.",
                    "type": "string"
                },
                "clusterUuid": {
                    "description": "[Output-only] A cluster UUID generated by the Dataproc service when the job is submitted.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HadoopJob": {
            "description": "A Cloud Dataproc job for running Hadoop MapReduce jobs on YARN.",
            "id": "HadoopJob",
            "properties": {
                "mainJarFileUri": {
                    "description": "The Hadoop Compatible Filesystem (HCFS) URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'",
                    "type": "string"
                },
                "mainClass": {
                    "description": "The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in `jar_file_uris`.",
                    "type": "string"
                },
                "args": {
                    "description": "[Optional] The arguments to pass to the driver. Do not include arguments, such as `-libjars` or `-Dfoo=bar`, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "jarFileUris": {
                    "description": "[Optional] Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fileUris": {
                    "description": "[Optional] HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "archiveUris": {
                    "description": "[Optional] HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.",
                    "type": "object"
                },
                "loggingConfiguration": {
                    "$ref": "LoggingConfiguration",
                    "description": "[Optional] The runtime log configuration for job execution."
                }
            },
            "type": "object"
        },
        "LoggingConfiguration": {
            "description": "The runtime logging configuration of the job.",
            "id": "LoggingConfiguration",
            "properties": {
                "driverLogLevels": {
                    "additionalProperties": {
                        "enum": [
                            "LEVEL_UNSPECIFIED",
                            "ALL",
                            "TRACE",
                            "DEBUG",
                            "INFO",
                            "WARN",
                            "ERROR",
                            "FATAL",
                            "OFF"
                        ],
                        "type": "string"
                    },
                    "description": "The per-package log levels for the driver. This may include \"root\" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SparkJob": {
            "description": "A Cloud Dataproc job for running Spark applications on YARN.",
            "id": "SparkJob",
            "properties": {
                "mainJarFileUri": {
                    "description": "The Hadoop Compatible Filesystem (HCFS) URI of the jar file that contains the main class.",
                    "type": "string"
                },
                "mainClass": {
                    "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in `jar_file_uris`.",
                    "type": "string"
                },
                "args": {
                    "description": "[Optional] The arguments to pass to the driver. Do not include arguments, such as `--conf`, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "jarFileUris": {
                    "description": "[Optional] HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fileUris": {
                    "description": "[Optional] HCFS URIs of files to be copied to the working directory of Spark drivers and distributed tasks. Useful for naively parallel tasks.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "archiveUris": {
                    "description": "[Optional] HCFS URIs of archives to be extracted in the working directory of Spark drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                    "type": "object"
                },
                "loggingConfiguration": {
                    "$ref": "LoggingConfiguration",
                    "description": "[Optional] The runtime log configuration for job execution."
                }
            },
            "type": "object"
        },
        "PySparkJob": {
            "description": "A Cloud Dataproc job for running PySpark applications on YARN.",
            "id": "PySparkJob",
            "properties": {
                "mainPythonFileUri": {
                    "description": "[Required] The Hadoop Compatible Filesystem (HCFS) URI of the main Python file to use as the driver. Must be a .py file.",
                    "type": "string"
                },
                "args": {
                    "description": "[Optional] The arguments to pass to the driver. Do not include arguments, such as `--conf`, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "pythonFileUris": {
                    "description": "[Optional] HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "jarFileUris": {
                    "description": "[Optional] HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fileUris": {
                    "description": "[Optional] HCFS URIs of files to be copied to the working directory of Python drivers and distributed tasks. Useful for naively parallel tasks.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "archiveUris": {
                    "description": "[Optional] HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
                    "type": "object"
                },
                "loggingConfiguration": {
                    "$ref": "LoggingConfiguration",
                    "description": "[Optional] The runtime log configuration for job execution."
                }
            },
            "type": "object"
        },
        "HiveJob": {
            "description": "A Cloud Dataproc job for running Hive queries on YARN.",
            "id": "HiveJob",
            "properties": {
                "queryFileUri": {
                    "description": "The HCFS URI of the script that contains Hive queries.",
                    "type": "string"
                },
                "queryList": {
                    "$ref": "QueryList",
                    "description": "A list of queries."
                },
                "continueOnFailure": {
                    "description": "[Optional] Whether to continue executing queries if a query fails. The default value is `false`. Setting to `true` can be useful when executing independent parallel queries.",
                    "type": "boolean"
                },
                "scriptVariables": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] Mapping of query variable names to values (equivalent to the Hive command: `SET name=\"value\";`).",
                    "type": "object"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.",
                    "type": "object"
                },
                "jarFileUris": {
                    "description": "[Optional] HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "QueryList": {
            "description": "A list of queries to run on a cluster.",
            "id": "QueryList",
            "properties": {
                "queries": {
                    "description": "[Required] The queries to execute. You do not need to terminate a query with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of an Cloud Dataproc API snippet that uses a QueryList to specify a HiveJob: \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } }",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PigJob": {
            "description": "A Cloud Dataproc job for running Pig queries on YARN.",
            "id": "PigJob",
            "properties": {
                "queryFileUri": {
                    "description": "The HCFS URI of the script that contains the Pig queries.",
                    "type": "string"
                },
                "queryList": {
                    "$ref": "QueryList",
                    "description": "A list of queries."
                },
                "continueOnFailure": {
                    "description": "[Optional] Whether to continue executing queries if a query fails. The default value is `false`. Setting to `true` can be useful when executing independent parallel queries.",
                    "type": "boolean"
                },
                "scriptVariables": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] Mapping of query variable names to values (equivalent to the Pig command: `name=[value]`).",
                    "type": "object"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.",
                    "type": "object"
                },
                "jarFileUris": {
                    "description": "[Optional] HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "loggingConfiguration": {
                    "$ref": "LoggingConfiguration",
                    "description": "[Optional] The runtime log configuration for job execution."
                }
            },
            "type": "object"
        },
        "SparkSqlJob": {
            "description": "A Cloud Dataproc job for running Spark SQL queries.",
            "id": "SparkSqlJob",
            "properties": {
                "queryFileUri": {
                    "description": "The HCFS URI of the script that contains SQL queries.",
                    "type": "string"
                },
                "queryList": {
                    "$ref": "QueryList",
                    "description": "A list of queries."
                },
                "scriptVariables": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] Mapping of query variable names to values (equivalent to the Spark SQL command: SET `name=\"value\";`).",
                    "type": "object"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Optional] A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.",
                    "type": "object"
                },
                "jarFileUris": {
                    "description": "[Optional] HCFS URIs of jar files to be added to the Spark CLASSPATH.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "loggingConfiguration": {
                    "$ref": "LoggingConfiguration",
                    "description": "[Optional] The runtime log configuration for job execution."
                }
            },
            "type": "object"
        },
        "JobStatus": {
            "description": "Cloud Dataproc job status.",
            "id": "JobStatus",
            "properties": {
                "state": {
                    "description": "[Required] A state message specifying the overall job state.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "PENDING",
                        "SETUP_DONE",
                        "RUNNING",
                        "CANCEL_PENDING",
                        "CANCEL_STARTED",
                        "CANCELLED",
                        "DONE",
                        "ERROR"
                    ],
                    "type": "string"
                },
                "details": {
                    "description": "[Optional] Job state details, such as an error description if the state is ERROR.",
                    "type": "string"
                },
                "stateStartTime": {
                    "description": "[Output-only] The time when this state was entered.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "YarnApplication": {
            "description": "A YARN application created by a job. Application information is a subset of org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto.",
            "id": "YarnApplication",
            "properties": {
                "name": {
                    "description": "[Required] The application name.",
                    "type": "string"
                },
                "state": {
                    "description": "[Required] The application state.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "NEW",
                        "NEW_SAVING",
                        "SUBMITTED",
                        "ACCEPTED",
                        "RUNNING",
                        "FINISHED",
                        "FAILED",
                        "KILLED"
                    ],
                    "type": "string"
                },
                "progress": {
                    "description": "[Required] The numerical progress of the application, from 1 to 100.",
                    "format": "float",
                    "type": "number"
                },
                "trackingUrl": {
                    "description": "[Optional] The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListJobsResponse": {
            "description": "A list of jobs in a project.",
            "id": "ListJobsResponse",
            "properties": {
                "jobs": {
                    "description": "[Output-only] Jobs list.",
                    "items": {
                        "$ref": "Job"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "[Optional] This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the `page_token` in a subsequent ListJobsRequest.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CancelJobRequest": {
            "description": "A request to cancel a job.",
            "id": "CancelJobRequest",
            "type": "object"
        },
        "Empty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "id": "Empty",
            "type": "object"
        },
        "ListOperationsResponse": {
            "description": "The response message for Operations.ListOperations.",
            "id": "ListOperationsResponse",
            "properties": {
                "operations": {
                    "description": "A list of operations that matches the specified filter in the request.",
                    "items": {
                        "$ref": "Operation"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "The standard List next-page token.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CancelOperationRequest": {
            "description": "The request message for Operations.CancelOperation.",
            "id": "CancelOperationRequest",
            "type": "object"
        },
        "DiagnoseClusterResults": {
            "description": "The location of diagnostic output.",
            "id": "DiagnoseClusterResults",
            "properties": {
                "outputUri": {
                    "description": "[Output-only] The Google Cloud Storage URI of the diagnostic output. The output report is a plain text file with a summary of collected diagnostics.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterOperationMetadata": {
            "description": "Metadata describing the operation.",
            "id": "ClusterOperationMetadata",
            "properties": {
                "clusterName": {
                    "description": "[Output-only] Name of the cluster for the operation.",
                    "type": "string"
                },
                "clusterUuid": {
                    "description": "[Output-only] Cluster UUID for the operation.",
                    "type": "string"
                },
                "status": {
                    "$ref": "ClusterOperationStatus",
                    "description": "[Output-only] Current operation status."
                },
                "statusHistory": {
                    "description": "[Output-only] The previous operation status.",
                    "items": {
                        "$ref": "ClusterOperationStatus"
                    },
                    "type": "array"
                },
                "operationType": {
                    "description": "[Output-only] The operation type.",
                    "type": "string"
                },
                "description": {
                    "description": "[Output-only] Short description of operation.",
                    "type": "string"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[Output-only] labels associated with the operation",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ClusterOperationStatus": {
            "description": "The status of the operation.",
            "id": "ClusterOperationStatus",
            "properties": {
                "state": {
                    "description": "[Output-only] A message containing the operation state.",
                    "enum": [
                        "UNKNOWN",
                        "PENDING",
                        "RUNNING",
                        "DONE"
                    ],
                    "type": "string"
                },
                "innerState": {
                    "description": "[Output-only] A message containing the detailed operation state.",
                    "type": "string"
                },
                "details": {
                    "description": "[Output-only]A message containing any operation metadata details.",
                    "type": "string"
                },
                "stateStartTime": {
                    "description": "[Output-only] The time this state was entered.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DiagnoseClusterOutputLocation": {
            "description": "The location where output from diagnostic command can be found.",
            "id": "DiagnoseClusterOutputLocation",
            "properties": {
                "outputUri": {
                    "description": "[Output-only] The Google Cloud Storage URI of the diagnostic output. This will be a plain text file with summary of collected diagnostics.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OperationMetadata": {
            "description": "Metadata describing the operation.",
            "id": "OperationMetadata",
            "properties": {
                "state": {
                    "description": "A message containing the operation state.",
                    "enum": [
                        "UNKNOWN",
                        "PENDING",
                        "RUNNING",
                        "DONE"
                    ],
                    "type": "string"
                },
                "innerState": {
                    "description": "A message containing the detailed operation state.",
                    "type": "string"
                },
                "details": {
                    "description": "A message containing any operation metadata details.",
                    "type": "string"
                },
                "insertTime": {
                    "description": "The time that the operation was requested.",
                    "type": "string"
                },
                "startTime": {
                    "description": "The time that the operation was started by the server.",
                    "type": "string"
                },
                "endTime": {
                    "description": "The time that the operation completed.",
                    "type": "string"
                },
                "clusterName": {
                    "description": "Name of the cluster for the operation.",
                    "type": "string"
                },
                "clusterUuid": {
                    "description": "Cluster UUId for the operation.",
                    "type": "string"
                },
                "status": {
                    "$ref": "OperationStatus",
                    "description": "[Output-only] Current operation status."
                },
                "statusHistory": {
                    "description": "[Output-only] Previous operation status.",
                    "items": {
                        "$ref": "OperationStatus"
                    },
                    "type": "array"
                },
                "operationType": {
                    "description": "[Output-only] The operation type.",
                    "type": "string"
                },
                "description": {
                    "description": "[Output-only] Short description of operation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OperationStatus": {
            "description": "The status of the operation.",
            "id": "OperationStatus",
            "properties": {
                "state": {
                    "description": "A message containing the operation state.",
                    "enum": [
                        "UNKNOWN",
                        "PENDING",
                        "RUNNING",
                        "DONE"
                    ],
                    "type": "string"
                },
                "innerState": {
                    "description": "A message containing the detailed operation state.",
                    "type": "string"
                },
                "details": {
                    "description": "A message containing any operation metadata details.",
                    "type": "string"
                },
                "stateStartTime": {
                    "description": "The time this state was entered.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Google Cloud Dataproc API",
    "version": "v1beta1"
}