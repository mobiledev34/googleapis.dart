{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {
                    "description": "View and manage your data across Google Cloud Platform services"
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://dialogflow.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Dialogflow",
    "description": "An end-to-end development suite for conversational interfaces (e.g., chatbots, voice-powered apps and devices).",
    "discoveryVersion": "v1",
    "documentationLink": "https://cloud.google.com/dialogflow-enterprise/",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "dialogflow:v2beta1",
    "kind": "discovery#restDescription",
    "name": "dialogflow",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "pp": {
            "default": "true",
            "description": "Pretty-print response.",
            "location": "query",
            "type": "boolean"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "bearer_token": {
            "description": "OAuth bearer token.",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        }
    },
    "protocol": "rest",
    "resources": {
        "projects": {
            "methods": {
                "getAgent": {
                    "description": "Retrieves the specified agent.",
                    "httpMethod": "GET",
                    "id": "dialogflow.projects.getAgent",
                    "parameterOrder": [
                        "parent"
                    ],
                    "parameters": {
                        "parent": {
                            "description": "Required. The project that the agent to fetch is associated with.\nFormat: `projects/<Project ID>`.",
                            "location": "path",
                            "pattern": "^projects/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v2beta1/{+parent}/agent",
                    "response": {
                        "$ref": "Agent"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            },
            "resources": {
                "agent": {
                    "methods": {
                        "export": {
                            "description": "Exports the specified agent to a ZIP file.\n\n\nOperation <response: ExportAgentResponse,\n           metadata: google.protobuf.Struct>",
                            "httpMethod": "POST",
                            "id": "dialogflow.projects.agent.export",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The project that the agent to export is associated with.\nFormat: `projects/<Project ID>`.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2beta1/{+parent}/agent:export",
                            "request": {
                                "$ref": "ExportAgentRequest"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "restore": {
                            "description": "Restores the specified agent from a ZIP file.\n\nReplaces the current agent version with a new one. All the intents and\nentity types in the older version are deleted.\n\n\nOperation <response: google.protobuf.Empty,\n           metadata: google.protobuf.Struct>",
                            "httpMethod": "POST",
                            "id": "dialogflow.projects.agent.restore",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The project that the agent to restore is associated with.\nFormat: `projects/<Project ID>`.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2beta1/{+parent}/agent:restore",
                            "request": {
                                "$ref": "RestoreAgentRequest"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "import": {
                            "description": "Imports the specified agent from a ZIP file.\n\nUploads new intents and entity types without deleting the existing ones.\nIntents and entity types with the same name are replaced with the new\nversions from ImportAgentRequest.\n\n\nOperation <response: google.protobuf.Empty,\n           metadata: google.protobuf.Struct>",
                            "httpMethod": "POST",
                            "id": "dialogflow.projects.agent.import",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The project that the agent to import is associated with.\nFormat: `projects/<Project ID>`.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2beta1/{+parent}/agent:import",
                            "request": {
                                "$ref": "ImportAgentRequest"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "search": {
                            "description": "Returns the list of agents.\n\nSince there is at most one conversational agent per project, this method is\nuseful primarily for listing all agents across projects the caller has\naccess to. One can achieve that with a wildcard project collection id \"-\".\nRefer to [List\nSub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).",
                            "httpMethod": "GET",
                            "id": "dialogflow.projects.agent.search",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "pageToken": {
                                    "description": "Optional. The next_page_token value returned from a previous list request.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "Optional. The maximum number of items to return in a single page. By\ndefault 100 and at most 1000.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "parent": {
                                    "description": "Required. The project to list agents from.\nFormat: `projects/<Project ID or '-'>`.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2beta1/{+parent}/agent:search",
                            "response": {
                                "$ref": "SearchAgentsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "train": {
                            "description": "Trains the specified agent.\n\n\nOperation <response: google.protobuf.Empty,\n           metadata: google.protobuf.Struct>",
                            "httpMethod": "POST",
                            "id": "dialogflow.projects.agent.train",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The project that the agent to train is associated with.\nFormat: `projects/<Project ID>`.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2beta1/{+parent}/agent:train",
                            "request": {
                                "$ref": "TrainAgentRequest"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    },
                    "resources": {
                        "entityTypes": {
                            "methods": {
                                "delete": {
                                    "description": "Deletes the specified entity type.",
                                    "httpMethod": "DELETE",
                                    "id": "dialogflow.projects.agent.entityTypes.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The name of the entity type to delete.\nFormat: `projects/<Project ID>/agent/entityTypes/<EntityType ID>`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "list": {
                                    "description": "Returns the list of all entity types in the specified agent.",
                                    "httpMethod": "GET",
                                    "id": "dialogflow.projects.agent.entityTypes.list",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "pageToken": {
                                            "description": "Optional. The next_page_token value returned from a previous list request.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "pageSize": {
                                            "description": "Optional. The maximum number of items to return in a single page. By\ndefault 100 and at most 1000.",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "parent": {
                                            "description": "Required. The agent to list all entity types from.\nFormat: `projects/<Project ID>/agent`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "languageCode": {
                                            "description": "Optional. The language to list entity synonyms for. If not specified,\nthe agent's default language is used.\n[More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                                            "location": "query",
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+parent}/entityTypes",
                                    "response": {
                                        "$ref": "ListEntityTypesResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "create": {
                                    "description": "Creates an entity type in the specified agent.",
                                    "httpMethod": "POST",
                                    "id": "dialogflow.projects.agent.entityTypes.create",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The agent to create a entity type for.\nFormat: `projects/<Project ID>/agent`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "languageCode": {
                                            "description": "Optional. The language of entity synonyms defined in `entity_type`. If not\nspecified, the agent's default language is used.\n[More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                                            "location": "query",
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+parent}/entityTypes",
                                    "request": {
                                        "$ref": "EntityType"
                                    },
                                    "response": {
                                        "$ref": "EntityType"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "batchDelete": {
                                    "description": "Deletes entity types in the specified agent.\n\nOperation <response: google.protobuf.Empty,\n           metadata: google.protobuf.Struct>",
                                    "httpMethod": "POST",
                                    "id": "dialogflow.projects.agent.entityTypes.batchDelete",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The name of the agent to delete all entities types for. Format:\n`projects/<Project ID>/agent`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+parent}/entityTypes:batchDelete",
                                    "request": {
                                        "$ref": "BatchDeleteEntityTypesRequest"
                                    },
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "get": {
                                    "description": "Retrieves the specified entity type.",
                                    "httpMethod": "GET",
                                    "id": "dialogflow.projects.agent.entityTypes.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "languageCode": {
                                            "description": "Optional. The language to retrieve entity synonyms for. If not specified,\nthe agent's default language is used.\n[More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Required. The name of the entity type.\nFormat: `projects/<Project ID>/agent/entityTypes/<EntityType ID>`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+name}",
                                    "response": {
                                        "$ref": "EntityType"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "patch": {
                                    "description": "Updates the specified entity type.",
                                    "httpMethod": "PATCH",
                                    "id": "dialogflow.projects.agent.entityTypes.patch",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "languageCode": {
                                            "description": "Optional. The language of entity synonyms defined in `entity_type`. If not\nspecified, the agent's default language is used.\n[More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "updateMask": {
                                            "description": "Optional. The mask to control which fields get updated.",
                                            "format": "google-fieldmask",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Required for all methods except `create` (`create` populates the name\nautomatically.\nThe unique identifier of the entity type. Format:\n`projects/<Project ID>/agent/entityTypes/<Entity Type ID>`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+name}",
                                    "request": {
                                        "$ref": "EntityType"
                                    },
                                    "response": {
                                        "$ref": "EntityType"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "batchUpdate": {
                                    "description": "Updates/Creates multiple entity types in the specified agent.\n\nOperation <response: BatchUpdateEntityTypesResponse,\n           metadata: google.protobuf.Struct>",
                                    "httpMethod": "POST",
                                    "id": "dialogflow.projects.agent.entityTypes.batchUpdate",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The name of the agent to update or create entity types in.\nFormat: `projects/<Project ID>/agent`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+parent}/entityTypes:batchUpdate",
                                    "request": {
                                        "$ref": "BatchUpdateEntityTypesRequest"
                                    },
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                }
                            },
                            "resources": {
                                "entities": {
                                    "methods": {
                                        "batchUpdate": {
                                            "description": "Updates entities in the specified entity type (replaces the existing\ncollection of entries).\n\nOperation <response: google.protobuf.Empty,\n           metadata: google.protobuf.Struct>",
                                            "httpMethod": "POST",
                                            "id": "dialogflow.projects.agent.entityTypes.entities.batchUpdate",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "description": "Required. The name of the entity type to update the entities in. Format:\n`projects/<Project ID>/agent/entityTypes/<Entity Type ID>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+parent}/entities:batchUpdate",
                                            "request": {
                                                "$ref": "BatchUpdateEntitiesRequest"
                                            },
                                            "response": {
                                                "$ref": "Operation"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        },
                                        "batchDelete": {
                                            "description": "Deletes entities in the specified entity type.\n\nOperation <response: google.protobuf.Empty,\n           metadata: google.protobuf.Struct>",
                                            "httpMethod": "POST",
                                            "id": "dialogflow.projects.agent.entityTypes.entities.batchDelete",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "description": "Required. The name of the entity type to delete entries for. Format:\n`projects/<Project ID>/agent/entityTypes/<Entity Type ID>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+parent}/entities:batchDelete",
                                            "request": {
                                                "$ref": "BatchDeleteEntitiesRequest"
                                            },
                                            "response": {
                                                "$ref": "Operation"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        },
                                        "batchCreate": {
                                            "description": "Creates multiple new entities in the specified entity type (extends the\nexisting collection of entries).\n\nOperation <response: google.protobuf.Empty>",
                                            "httpMethod": "POST",
                                            "id": "dialogflow.projects.agent.entityTypes.entities.batchCreate",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "description": "Required. The name of the entity type to create entities in. Format:\n`projects/<Project ID>/agent/entityTypes/<Entity Type ID>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+parent}/entities:batchCreate",
                                            "request": {
                                                "$ref": "BatchCreateEntitiesRequest"
                                            },
                                            "response": {
                                                "$ref": "Operation"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "intents": {
                            "methods": {
                                "delete": {
                                    "description": "Deletes the specified intent.",
                                    "httpMethod": "DELETE",
                                    "id": "dialogflow.projects.agent.intents.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The name of the intent to delete.\nFormat: `projects/<Project ID>/agent/intents/<Intent ID>`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent/intents/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "list": {
                                    "description": "Returns the list of all intents in the specified agent.",
                                    "httpMethod": "GET",
                                    "id": "dialogflow.projects.agent.intents.list",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "intentView": {
                                            "description": "Optional. The resource view to apply to the returned intent.",
                                            "enum": [
                                                "INTENT_VIEW_UNSPECIFIED",
                                                "INTENT_VIEW_FULL"
                                            ],
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. The agent to list all intents from.\nFormat: `projects/<Project ID>/agent`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "languageCode": {
                                            "description": "Optional. The language to list training phrases, parameters and rich\nmessages for. If not specified, the agent's default language is used.\n[More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent before they can be used.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "pageToken": {
                                            "description": "Optional. The next_page_token value returned from a previous list request.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "pageSize": {
                                            "description": "Optional. The maximum number of items to return in a single page. By\ndefault 100 and at most 1000.",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        }
                                    },
                                    "path": "v2beta1/{+parent}/intents",
                                    "response": {
                                        "$ref": "ListIntentsResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "batchDelete": {
                                    "description": "Deletes intents in the specified agent.\n\nOperation <response: google.protobuf.Empty>",
                                    "httpMethod": "POST",
                                    "id": "dialogflow.projects.agent.intents.batchDelete",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The name of the agent to delete all entities types for. Format:\n`projects/<Project ID>/agent`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+parent}/intents:batchDelete",
                                    "request": {
                                        "$ref": "BatchDeleteIntentsRequest"
                                    },
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "create": {
                                    "description": "Creates an intent in the specified agent.",
                                    "httpMethod": "POST",
                                    "id": "dialogflow.projects.agent.intents.create",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "intentView": {
                                            "description": "Optional. The resource view to apply to the returned intent.",
                                            "enum": [
                                                "INTENT_VIEW_UNSPECIFIED",
                                                "INTENT_VIEW_FULL"
                                            ],
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. The agent to create a intent for.\nFormat: `projects/<Project ID>/agent`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "languageCode": {
                                            "description": "Optional. The language of training phrases, parameters and rich messages\ndefined in `intent`. If not specified, the agent's default language is\nused. [More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                                            "location": "query",
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+parent}/intents",
                                    "request": {
                                        "$ref": "Intent"
                                    },
                                    "response": {
                                        "$ref": "Intent"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "get": {
                                    "description": "Retrieves the specified intent.",
                                    "httpMethod": "GET",
                                    "id": "dialogflow.projects.agent.intents.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The name of the intent.\nFormat: `projects/<Project ID>/agent/intents/<Intent ID>`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent/intents/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "intentView": {
                                            "description": "Optional. The resource view to apply to the returned intent.",
                                            "enum": [
                                                "INTENT_VIEW_UNSPECIFIED",
                                                "INTENT_VIEW_FULL"
                                            ],
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "languageCode": {
                                            "description": "Optional. The language to retrieve training phrases, parameters and rich\nmessages for. If not specified, the agent's default language is used.\n[More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                                            "location": "query",
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+name}",
                                    "response": {
                                        "$ref": "Intent"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "patch": {
                                    "description": "Updates the specified intent.",
                                    "httpMethod": "PATCH",
                                    "id": "dialogflow.projects.agent.intents.patch",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required for all methods except `create` (`create` populates the name\nautomatically.\nThe unique identifier of this intent.\nFormat: `projects/<Project ID>/agent/intents/<Intent ID>`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent/intents/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "intentView": {
                                            "description": "Optional. The resource view to apply to the returned intent.",
                                            "enum": [
                                                "INTENT_VIEW_UNSPECIFIED",
                                                "INTENT_VIEW_FULL"
                                            ],
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "languageCode": {
                                            "description": "Optional. The language of training phrases, parameters and rich messages\ndefined in `intent`. If not specified, the agent's default language is\nused. [More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "updateMask": {
                                            "description": "Optional. The mask to control which fields get updated.",
                                            "format": "google-fieldmask",
                                            "location": "query",
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+name}",
                                    "request": {
                                        "$ref": "Intent"
                                    },
                                    "response": {
                                        "$ref": "Intent"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "batchUpdate": {
                                    "description": "Updates/Creates multiple intents in the specified agent.\n\nOperation <response: BatchUpdateIntentsResponse>",
                                    "httpMethod": "POST",
                                    "id": "dialogflow.projects.agent.intents.batchUpdate",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The name of the agent to update or create intents in.\nFormat: `projects/<Project ID>/agent`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+parent}/intents:batchUpdate",
                                    "request": {
                                        "$ref": "BatchUpdateIntentsRequest"
                                    },
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                }
                            }
                        },
                        "sessions": {
                            "methods": {
                                "deleteContexts": {
                                    "description": "Deletes all active contexts in the specified session.",
                                    "httpMethod": "DELETE",
                                    "id": "dialogflow.projects.agent.sessions.deleteContexts",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The name of the session to delete all contexts from. Format:\n`projects/<Project ID>/agent/sessions/<Session ID>`.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+parent}/contexts",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "detectIntent": {
                                    "description": "Processes a natural language query and returns structured, actionable data\nas a result. This method is not idempotent, because it may cause contexts\nand session entity types to be updated, which in turn might affect\nresults of future queries.",
                                    "httpMethod": "POST",
                                    "id": "dialogflow.projects.agent.sessions.detectIntent",
                                    "parameterOrder": [
                                        "session"
                                    ],
                                    "parameters": {
                                        "session": {
                                            "description": "Required. The name of the session this query is sent to. Format:\n`projects/<Project ID>/agent/sessions/<Session ID>`.\nIt's up to the API caller to choose an appropriate session ID. It can be\na random number or some type of user identifier (preferably hashed).\nThe length of the session ID must not exceed 36 bytes.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2beta1/{+session}:detectIntent",
                                    "request": {
                                        "$ref": "DetectIntentRequest"
                                    },
                                    "response": {
                                        "$ref": "DetectIntentResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                }
                            },
                            "resources": {
                                "contexts": {
                                    "methods": {
                                        "delete": {
                                            "description": "Deletes the specified context.",
                                            "httpMethod": "DELETE",
                                            "id": "dialogflow.projects.agent.sessions.contexts.delete",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Required. The name of the context to delete. Format:\n`projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+name}",
                                            "response": {
                                                "$ref": "Empty"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        },
                                        "list": {
                                            "description": "Returns the list of all contexts in the specified session.",
                                            "httpMethod": "GET",
                                            "id": "dialogflow.projects.agent.sessions.contexts.list",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "description": "Required. The session to list all contexts from.\nFormat: `projects/<Project ID>/agent/sessions/<Session ID>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                },
                                                "pageToken": {
                                                    "description": "Optional. The next_page_token value returned from a previous list request.",
                                                    "location": "query",
                                                    "type": "string"
                                                },
                                                "pageSize": {
                                                    "description": "Optional. The maximum number of items to return in a single page. By\ndefault 100 and at most 1000.",
                                                    "format": "int32",
                                                    "location": "query",
                                                    "type": "integer"
                                                }
                                            },
                                            "path": "v2beta1/{+parent}/contexts",
                                            "response": {
                                                "$ref": "ListContextsResponse"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        },
                                        "get": {
                                            "description": "Retrieves the specified context.",
                                            "httpMethod": "GET",
                                            "id": "dialogflow.projects.agent.sessions.contexts.get",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Required. The name of the context. Format:\n`projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+name}",
                                            "response": {
                                                "$ref": "Context"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        },
                                        "patch": {
                                            "description": "Updates the specified context.",
                                            "httpMethod": "PATCH",
                                            "id": "dialogflow.projects.agent.sessions.contexts.patch",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "updateMask": {
                                                    "description": "Optional. The mask to control which fields get updated.",
                                                    "format": "google-fieldmask",
                                                    "location": "query",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Required. The unique identifier of the context. Format:\n`projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>`.\nNote: The Context ID is always converted to lowercase.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+name}",
                                            "request": {
                                                "$ref": "Context"
                                            },
                                            "response": {
                                                "$ref": "Context"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        },
                                        "create": {
                                            "description": "Creates a context.",
                                            "httpMethod": "POST",
                                            "id": "dialogflow.projects.agent.sessions.contexts.create",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "description": "Required. The session to create a context for.\nFormat: `projects/<Project ID>/agent/sessions/<Session ID>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+parent}/contexts",
                                            "request": {
                                                "$ref": "Context"
                                            },
                                            "response": {
                                                "$ref": "Context"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        }
                                    }
                                },
                                "entityTypes": {
                                    "methods": {
                                        "delete": {
                                            "description": "Deletes the specified session entity type.",
                                            "httpMethod": "DELETE",
                                            "id": "dialogflow.projects.agent.sessions.entityTypes.delete",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Required. The name of the entity type to delete. Format:\n`projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type\nDisplay Name>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+name}",
                                            "response": {
                                                "$ref": "Empty"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        },
                                        "list": {
                                            "description": "Returns the list of all session entity types in the specified session.",
                                            "httpMethod": "GET",
                                            "id": "dialogflow.projects.agent.sessions.entityTypes.list",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "pageToken": {
                                                    "description": "Optional. The next_page_token value returned from a previous list request.",
                                                    "location": "query",
                                                    "type": "string"
                                                },
                                                "pageSize": {
                                                    "description": "Optional. The maximum number of items to return in a single page. By\ndefault 100 and at most 1000.",
                                                    "format": "int32",
                                                    "location": "query",
                                                    "type": "integer"
                                                },
                                                "parent": {
                                                    "description": "Required. The session to list all session entity types from.\nFormat: `projects/<Project ID>/agent/sessions/<Session ID>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+parent}/entityTypes",
                                            "response": {
                                                "$ref": "ListSessionEntityTypesResponse"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        },
                                        "get": {
                                            "description": "Retrieves the specified session entity type.",
                                            "httpMethod": "GET",
                                            "id": "dialogflow.projects.agent.sessions.entityTypes.get",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Required. The name of the session entity type. Format:\n`projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type\nDisplay Name>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+name}",
                                            "response": {
                                                "$ref": "SessionEntityType"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        },
                                        "patch": {
                                            "description": "Updates the specified session entity type.",
                                            "httpMethod": "PATCH",
                                            "id": "dialogflow.projects.agent.sessions.entityTypes.patch",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "updateMask": {
                                                    "description": "Optional. The mask to control which fields get updated.",
                                                    "format": "google-fieldmask",
                                                    "location": "query",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "Required. The unique identifier of this session entity type. Format:\n`projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type\nDisplay Name>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+name}",
                                            "request": {
                                                "$ref": "SessionEntityType"
                                            },
                                            "response": {
                                                "$ref": "SessionEntityType"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        },
                                        "create": {
                                            "description": "Creates a session entity type.",
                                            "httpMethod": "POST",
                                            "id": "dialogflow.projects.agent.sessions.entityTypes.create",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "description": "Required. The session to create a session entity type for.\nFormat: `projects/<Project ID>/agent/sessions/<Session ID>`.",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v2beta1/{+parent}/entityTypes",
                                            "request": {
                                                "$ref": "SessionEntityType"
                                            },
                                            "response": {
                                                "$ref": "SessionEntityType"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operations": {
                    "methods": {
                        "get": {
                            "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
                            "httpMethod": "GET",
                            "id": "dialogflow.projects.operations.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The name of the operation resource.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/operations/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2beta1/{+name}",
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    }
                }
            }
        }
    },
    "revision": "20180123",
    "rootUrl": "https://dialogflow.googleapis.com/",
    "schemas": {
        "TrainAgentRequest": {
            "description": "The request message for Agents.TrainAgent.",
            "id": "TrainAgentRequest",
            "properties": {},
            "type": "object"
        },
        "SessionEntityType": {
            "description": "Represents a session entity type.\n\nExtends or replaces a developer entity type at the user session level (we\nrefer to the entity types defined at the agent level as \"developer entity\ntypes\").\n\nNote: session entity types apply to all queries, regardless of the language.",
            "id": "SessionEntityType",
            "properties": {
                "entities": {
                    "description": "Required. The collection of entities associated with this session entity\ntype.",
                    "items": {
                        "$ref": "EntityTypeEntity"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Required. The unique identifier of this session entity type. Format:\n`projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type\nDisplay Name>`.",
                    "type": "string"
                },
                "entityOverrideMode": {
                    "description": "Required. Indicates whether the additional data should override or\nsupplement the developer entity type definition.",
                    "enum": [
                        "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
                        "ENTITY_OVERRIDE_MODE_OVERRIDE",
                        "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
                    ],
                    "enumDescriptions": [
                        "Not specified. This value should be never used.",
                        "The collection of session entities overrides the collection of entities\nin the corresponding developer entity type.",
                        "The collection of session entities extends the collection of entities in\nthe corresponding developer entity type.\nCalls to `ListSessionEntityTypes`, `GetSessionEntityType`,\n`CreateSessionEntityType` and `UpdateSessionEntityType` return the full\ncollection of entities from the developer entity type in the agent's\ndefault language and the session entity type."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Empty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "id": "Empty",
            "properties": {},
            "type": "object"
        },
        "BatchUpdateEntitiesRequest": {
            "description": "The response message for EntityTypes.BatchCreateEntities.",
            "id": "BatchUpdateEntitiesRequest",
            "properties": {
                "entities": {
                    "description": "Required. The collection of new entities to replace the existing entities.",
                    "items": {
                        "$ref": "EntityTypeEntity"
                    },
                    "type": "array"
                },
                "languageCode": {
                    "description": "Optional. The language of entity synonyms defined in `entities`. If not\nspecified, the agent's default language is used.\n[More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                    "type": "string"
                },
                "updateMask": {
                    "description": "Optional. The mask to control which fields get updated.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageText": {
            "description": "The text response message.",
            "id": "IntentMessageText",
            "properties": {
                "text": {
                    "description": "Optional. The collection of the agent's responses.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WebhookResponse": {
            "description": "The response message for a webhook call.",
            "id": "WebhookResponse",
            "properties": {
                "followupEventInput": {
                    "$ref": "EventInput",
                    "description": "Optional. Makes the platform immediately invoke another `DetectIntent` call\ninternally with the specified event as input."
                },
                "outputContexts": {
                    "description": "Optional. The collection of output contexts. This value is passed directly\nto `QueryResult.output_contexts`.",
                    "items": {
                        "$ref": "Context"
                    },
                    "type": "array"
                },
                "fulfillmentText": {
                    "description": "Optional. The text to be shown on the screen. This value is passed directly\nto `QueryResult.fulfillment_text`.",
                    "type": "string"
                },
                "fulfillmentMessages": {
                    "description": "Optional. The collection of rich messages to present to the user. This\nvalue is passed directly to `QueryResult.fulfillment_messages`.",
                    "items": {
                        "$ref": "IntentMessage"
                    },
                    "type": "array"
                },
                "payload": {
                    "additionalProperties": {
                        "description": "Properties of the object.",
                        "type": "any"
                    },
                    "description": "Optional. This value is passed directly to `QueryResult.webhook_payload`.",
                    "type": "object"
                },
                "source": {
                    "description": "Optional. This value is passed directly to `QueryResult.webhook_source`.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchDeleteIntentsRequest": {
            "description": "The request message for Intents.BatchDeleteIntents.",
            "id": "BatchDeleteIntentsRequest",
            "properties": {
                "intents": {
                    "description": "Required. The collection of intents to delete. Only intent `name` must be\nfilled in.",
                    "items": {
                        "$ref": "Intent"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "QueryInput": {
            "description": "Represents the query input. It can contain either:\n\n1.  An audio config which\n    instructs the speech recognizer how to process the speech audio.\n\n2.  A conversational query in the form of text,.\n\n3.  An event that specifies which intent to trigger.",
            "id": "QueryInput",
            "properties": {
                "audioConfig": {
                    "$ref": "InputAudioConfig",
                    "description": "Instructs the speech recognizer how to process the speech audio."
                },
                "event": {
                    "$ref": "EventInput",
                    "description": "The event to be processed."
                },
                "text": {
                    "$ref": "TextInput",
                    "description": "The natural language text to be processed."
                }
            },
            "type": "object"
        },
        "DetectIntentResponse": {
            "description": "The message returned from the DetectIntent method.",
            "id": "DetectIntentResponse",
            "properties": {
                "queryResult": {
                    "$ref": "QueryResult",
                    "description": "The results of the conversational query or event processing."
                },
                "webhookStatus": {
                    "$ref": "Status",
                    "description": "Specifies the status of the webhook request. `webhook_status`\nis never populated in webhook requests."
                },
                "responseId": {
                    "description": "The unique identifier of the response. It can be used to\nlocate a response in the training example set or for reporting issues.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentFollowupIntentInfo": {
            "description": "Represents a single followup intent in the chain.",
            "id": "IntentFollowupIntentInfo",
            "properties": {
                "followupIntentName": {
                    "description": "The unique identifier of the followup intent.\nFormat: `projects/<Project ID>/agent/intents/<Intent ID>`.",
                    "type": "string"
                },
                "parentFollowupIntentName": {
                    "description": "The unique identifier of the followup intent parent.\nFormat: `projects/<Project ID>/agent/intents/<Intent ID>`.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportAgentRequest": {
            "description": "The request message for Agents.ExportAgent.",
            "id": "ExportAgentRequest",
            "properties": {
                "agentUri": {
                    "description": "Warning: Exporting agents to a URI is not implemented yet.\nThis feature is coming soon.\n\nOptional. The Google Cloud Storage URI to export the agent to.\nNote: The URI must start with\n\"gs://\". If left unspecified, the serialized agent is returned inline.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageLinkOutSuggestion": {
            "description": "The suggestion chip message that allows the user to jump out to the app\nor website associated with this agent.",
            "id": "IntentMessageLinkOutSuggestion",
            "properties": {
                "uri": {
                    "description": "Required. The URI of the app or site to open when the user taps the\nsuggestion chip.",
                    "type": "string"
                },
                "destinationName": {
                    "description": "Required. The name of the app or site this chip is linking to.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageSelectItemInfo": {
            "description": "Additional info about the select item for when it is triggered in a\ndialog.",
            "id": "IntentMessageSelectItemInfo",
            "properties": {
                "synonyms": {
                    "description": "Optional. A list of synonyms that can also be used to trigger this\nitem in dialog.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "key": {
                    "description": "Required. A unique key that will be sent back to the agent if this\nresponse is given.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Operation": {
            "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
            "id": "Operation",
            "properties": {
                "response": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                    "type": "object"
                },
                "name": {
                    "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
                    "type": "string"
                },
                "error": {
                    "$ref": "Status",
                    "description": "The error result of the operation in case of failure or cancellation."
                },
                "metadata": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                    "type": "object"
                },
                "done": {
                    "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "EventInput": {
            "description": "Events allow for matching intents by event name instead of the natural\nlanguage input. For instance, input `<event: { name: “welcome_event”,\nparameters: { name: “Sam” } }>` can trigger a personalized welcome response.\nThe parameter `name` may be used by the agent in the response:\n`“Hello #welcome_event.name! What can I do for you today?”`.",
            "id": "EventInput",
            "properties": {
                "name": {
                    "description": "Required. The unique identifier of the event.",
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "description": "Properties of the object.",
                        "type": "any"
                    },
                    "description": "Optional. The collection of parameters associated with the event.",
                    "type": "object"
                },
                "languageCode": {
                    "description": "Required. The language of this query. See [Language\nSupport](https://dialogflow.com/docs/languages) for a list of the\ncurrently supported language codes. Note that queries in the same session\ndo not necessarily need to specify the same language.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageSuggestions": {
            "description": "The collection of suggestions.",
            "id": "IntentMessageSuggestions",
            "properties": {
                "suggestions": {
                    "description": "Required. The list of suggested replies.",
                    "items": {
                        "$ref": "IntentMessageSuggestion"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EntityType": {
            "description": "Represents an entity type.\nEntity types serve as a tool for extracting parameter values from natural\nlanguage queries.",
            "id": "EntityType",
            "properties": {
                "entities": {
                    "description": "Optional. The collection of entities associated with the entity type.",
                    "items": {
                        "$ref": "EntityTypeEntity"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Required for all methods except `create` (`create` populates the name\nautomatically.\nThe unique identifier of the entity type. Format:\n`projects/<Project ID>/agent/entityTypes/<Entity Type ID>`.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Required. The name of the entity.",
                    "type": "string"
                },
                "kind": {
                    "description": "Required. Indicates the kind of entity type.",
                    "enum": [
                        "KIND_UNSPECIFIED",
                        "KIND_MAP",
                        "KIND_LIST"
                    ],
                    "enumDescriptions": [
                        "Not specified. This value should be never used.",
                        "Map entity types allow mapping of a group of synonyms to a canonical\nvalue.",
                        "List entity types contain a set of entries that do not map to canonical\nvalues. However, list entity types can contain references to other entity\ntypes (with or without aliases)."
                    ],
                    "type": "string"
                },
                "autoExpansionMode": {
                    "description": "Optional. Indicates whether the entity type can be automatically\nexpanded.",
                    "enum": [
                        "AUTO_EXPANSION_MODE_UNSPECIFIED",
                        "AUTO_EXPANSION_MODE_DEFAULT"
                    ],
                    "enumDescriptions": [
                        "Auto expansion disabled for the entity.",
                        "Allows an agent to recognize values that have not been explicitly\nlisted in the entity."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Status": {
            "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
            "id": "Status",
            "properties": {
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "IntentMessage": {
            "description": "Corresponds to the `Response` field in API.AI console.",
            "id": "IntentMessage",
            "properties": {
                "image": {
                    "$ref": "IntentMessageImage",
                    "description": "The image response."
                },
                "payload": {
                    "additionalProperties": {
                        "description": "Properties of the object.",
                        "type": "any"
                    },
                    "description": "The response containing a custom payload.",
                    "type": "object"
                },
                "text": {
                    "$ref": "IntentMessageText",
                    "description": "The text response."
                },
                "platform": {
                    "description": "Optional. The platform that this message is intended for.",
                    "enum": [
                        "PLATFORM_UNSPECIFIED",
                        "FACEBOOK",
                        "SLACK",
                        "TELEGRAM",
                        "KIK",
                        "SKYPE",
                        "LINE",
                        "VIBER",
                        "ACTIONS_ON_GOOGLE"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Facebook.",
                        "Slack.",
                        "Telegram.",
                        "Kik.",
                        "Skype.",
                        "Line.",
                        "Viber.",
                        "Actions on Google."
                    ],
                    "type": "string"
                },
                "suggestions": {
                    "$ref": "IntentMessageSuggestions",
                    "description": "The suggestion chips for Actions on Google."
                },
                "listSelect": {
                    "$ref": "IntentMessageListSelect",
                    "description": "The list card response for Actions on Google."
                },
                "quickReplies": {
                    "$ref": "IntentMessageQuickReplies",
                    "description": "The quick replies response."
                },
                "card": {
                    "$ref": "IntentMessageCard",
                    "description": "The card response."
                },
                "basicCard": {
                    "$ref": "IntentMessageBasicCard",
                    "description": "The basic card response for Actions on Google."
                },
                "carouselSelect": {
                    "$ref": "IntentMessageCarouselSelect",
                    "description": "The carousel card response for Actions on Google."
                },
                "linkOutSuggestion": {
                    "$ref": "IntentMessageLinkOutSuggestion",
                    "description": "The link out suggestion chip for Actions on Google."
                },
                "simpleResponses": {
                    "$ref": "IntentMessageSimpleResponses",
                    "description": "The voice and text-only responses for Actions on Google."
                }
            },
            "type": "object"
        },
        "ListContextsResponse": {
            "description": "The response message for Contexts.ListContexts.",
            "id": "ListContextsResponse",
            "properties": {
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                },
                "contexts": {
                    "description": "The list of contexts. There will be a maximum number of items\nreturned based on the page_size field in the request.",
                    "items": {
                        "$ref": "Context"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Agent": {
            "description": "Represents a conversational agent.",
            "id": "Agent",
            "properties": {
                "parent": {
                    "description": "Required. The project of this agent.\nFormat: `projects/<Project ID>`.",
                    "type": "string"
                },
                "matchMode": {
                    "description": "Optional. Determines how intents are detected from user queries.",
                    "enum": [
                        "MATCH_MODE_UNSPECIFIED",
                        "MATCH_MODE_HYBRID",
                        "MATCH_MODE_ML_ONLY"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Best for agents with a small number of examples in intents and/or wide\nuse of templates syntax and composite entities.",
                        "Can be used for agents with a large number of examples in intents,\nespecially the ones using @sys.any or very large developer entities."
                    ],
                    "type": "string"
                },
                "supportedLanguageCodes": {
                    "description": "Optional. The list of all languages supported by this agent (except for the\n`default_language_code`).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "enableLogging": {
                    "description": "Optional. Determines whether this agent should log conversation queries.",
                    "type": "boolean"
                },
                "avatarUri": {
                    "description": "Optional. The URI of the agent's avatar.\nAvatars are used throughout API.AI console and in the self-hosted\n[Web Demo](https://dialogflow.com/docs/integrations/web-demo) integration.",
                    "type": "string"
                },
                "classificationThreshold": {
                    "description": "Optional. To filter out false positive results and still get variety in\nmatched natural language inputs for your agent, you can tune the machine\nlearning classification threshold. If the returned score value is less than\nthe threshold value, then a fallback intent is be triggered or, if there\nare no fallback intents defined, no intent will be triggered. The score\nvalues range from 0.0 (completely uncertain) to 1.0 (completely certain).\nIf set to 0.0, the default of 0.3 is used.",
                    "format": "float",
                    "type": "number"
                },
                "timeZone": {
                    "description": "Required. The time zone of this agent from the\n[time zone database](https://www.iana.org/time-zones), e.g.,\nAmerica/New_York, Europe/Paris.",
                    "type": "string"
                },
                "defaultLanguageCode": {
                    "description": "Required. The default language of the agent as a language tag. See\n[Language Support](https://dialogflow.com/docs/reference/language) for a\nlist of the currently supported language codes.\nThis field cannot be set by the `Update` method.",
                    "type": "string"
                },
                "description": {
                    "description": "Optional. The description of this agent.\nThe maximum length is 500 characters. If exceeded, the request is rejected.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Required. The name of this agent.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EntityTypeBatch": {
            "description": "This message is a wrapper around a collection of entity types.",
            "id": "EntityTypeBatch",
            "properties": {
                "entityTypes": {
                    "description": "A collection of entity types.",
                    "items": {
                        "$ref": "EntityType"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "OriginalDetectIntentRequest": {
            "description": "Represents the contents of the original request that was passed to\nthe `[Streaming]DetectIntent` call.",
            "id": "OriginalDetectIntentRequest",
            "properties": {
                "payload": {
                    "additionalProperties": {
                        "description": "Properties of the object.",
                        "type": "any"
                    },
                    "description": "Optional. This field is set to the value of `QueryParameters.payload` field\npassed in the request.",
                    "type": "object"
                },
                "source": {
                    "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set\nby Dialogflow-owned servers. Possible values of this field correspond to\nIntent.Message.Platform.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageBasicCardButton": {
            "description": "The button object that appears at the bottom of a card.",
            "id": "IntentMessageBasicCardButton",
            "properties": {
                "openUriAction": {
                    "$ref": "IntentMessageBasicCardButtonOpenUriAction",
                    "description": "Required. Action to take when a user taps on the button."
                },
                "title": {
                    "description": "Required. The title of the button.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageSimpleResponse": {
            "description": "The simple response message containing speech or text.",
            "id": "IntentMessageSimpleResponse",
            "properties": {
                "textToSpeech": {
                    "description": "One of text_to_speech or ssml must be provided. The plain text of the\nspeech output. Mutually exclusive with ssml.",
                    "type": "string"
                },
                "ssml": {
                    "description": "One of text_to_speech or ssml must be provided. Structured spoken\nresponse to the user in the SSML format. Mutually exclusive with\ntext_to_speech.",
                    "type": "string"
                },
                "displayText": {
                    "description": "Optional. The text to display.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageListSelectItem": {
            "description": "An item in the list.",
            "id": "IntentMessageListSelectItem",
            "properties": {
                "description": {
                    "description": "Optional. The main text describing the item.",
                    "type": "string"
                },
                "info": {
                    "$ref": "IntentMessageSelectItemInfo",
                    "description": "Required. Additional information about this option."
                },
                "title": {
                    "description": "Required. The title of the list item.",
                    "type": "string"
                },
                "image": {
                    "$ref": "IntentMessageImage",
                    "description": "Optional. The image to display."
                }
            },
            "type": "object"
        },
        "IntentMessageBasicCard": {
            "description": "The basic card message. Useful for displaying information.",
            "id": "IntentMessageBasicCard",
            "properties": {
                "formattedText": {
                    "description": "Required, unless image is present. The body text of the card.",
                    "type": "string"
                },
                "buttons": {
                    "description": "Optional. The collection of card buttons.",
                    "items": {
                        "$ref": "IntentMessageBasicCardButton"
                    },
                    "type": "array"
                },
                "subtitle": {
                    "description": "Optional. The subtitle of the card.",
                    "type": "string"
                },
                "title": {
                    "description": "Optional. The title of the card.",
                    "type": "string"
                },
                "image": {
                    "$ref": "IntentMessageImage",
                    "description": "Optional. The image for the card."
                }
            },
            "type": "object"
        },
        "EntityTypeEntity": {
            "description": "Optional. Represents an entity.",
            "id": "EntityTypeEntity",
            "properties": {
                "value": {
                    "description": "Required.\nFor `KIND_MAP` entity types:\n  A canonical name to be used in place of synonyms.\nFor `KIND_LIST` entity types:\n  A string that can contain references to other entity types (with or\n  without aliases).",
                    "type": "string"
                },
                "synonyms": {
                    "description": "Required. A collection of synonyms. For `KIND_LIST` entity types this\nmust contain exactly one synonym equal to `value`.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "InputAudioConfig": {
            "description": "Instructs the speech recognizer how to process the audio content.",
            "id": "InputAudioConfig",
            "properties": {
                "audioEncoding": {
                    "description": "Required. Audio encoding of the audio content to process.",
                    "enum": [
                        "AUDIO_ENCODING_UNSPECIFIED",
                        "AUDIO_ENCODING_LINEAR_16",
                        "AUDIO_ENCODING_FLAC",
                        "AUDIO_ENCODING_MULAW",
                        "AUDIO_ENCODING_AMR",
                        "AUDIO_ENCODING_AMR_WB",
                        "AUDIO_ENCODING_OGG_OPUS",
                        "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
                        "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio\nCodec) is the recommended encoding because it is lossless (therefore\nrecognition is not compromised) and requires only about half the\nbandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and\n24-bit samples, however, not all fields in `STREAMINFO` are supported.",
                        "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
                        "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
                        "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
                        "Opus encoded audio frames in Ogg container\n([OggOpus](https://wiki.xiph.org/OggOpus)).\n`sample_rate_hertz` must be 16000.",
                        "Although the use of lossy encodings is not recommended, if a very low\nbitrate encoding is required, `OGG_OPUS` is highly preferred over\nSpeex encoding. The [Speex](https://speex.org/) encoding supported by\nDialogflow API has a header byte in each block, as in MIME type\n`audio/x-speex-with-header-byte`.\nIt is a variant of the RTP Speex encoding defined in\n[RFC 5574](https://tools.ietf.org/html/rfc5574).\nThe stream is a sequence of blocks, one block per RTP packet. Each block\nstarts with a byte containing the length of the block, in bytes, followed\nby one or more frames of Speex data, padded to an integral number of\nbytes (octets) as specified in RFC 5574. In other words, each RTP header\nis replaced with a single byte containing the block length. Only Speex\nwideband is supported. `sample_rate_hertz` must be 16000."
                    ],
                    "type": "string"
                },
                "sampleRateHertz": {
                    "description": "Required. Sample rate (in Hertz) of the audio content sent in the query.\nRefer to [Cloud Speech API documentation](/speech/docs/basics) for more\ndetails.",
                    "format": "int32",
                    "type": "integer"
                },
                "languageCode": {
                    "description": "Required. The language of the supplied audio. Dialogflow does not do\ntranslations. See [Language\nSupport](https://dialogflow.com/docs/languages) for a list of the\ncurrently supported language codes. Note that queries in the same session\ndo not necessarily need to specify the same language.",
                    "type": "string"
                },
                "phraseHints": {
                    "description": "Optional. The collection of phrase hints which are used to boost accuracy\nof speech recognition.\nRefer to [Cloud Speech API documentation](/speech/docs/basics#phrase-hints)\nfor more details.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListSessionEntityTypesResponse": {
            "description": "The response message for SessionEntityTypes.ListSessionEntityTypes.",
            "id": "ListSessionEntityTypesResponse",
            "properties": {
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                },
                "sessionEntityTypes": {
                    "description": "The list of session entity types. There will be a maximum number of items\nreturned based on the page_size field in the request.",
                    "items": {
                        "$ref": "SessionEntityType"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IntentMessageCarouselSelect": {
            "description": "The card for presenting a carousel of options to select from.",
            "id": "IntentMessageCarouselSelect",
            "properties": {
                "items": {
                    "description": "Required. Carousel items.",
                    "items": {
                        "$ref": "IntentMessageCarouselSelectItem"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchAgentsResponse": {
            "description": "The response message for Agents.SearchAgents.",
            "id": "SearchAgentsResponse",
            "properties": {
                "agents": {
                    "description": "The list of agents. There will be a maximum number of items returned based\non the page_size field in the request.",
                    "items": {
                        "$ref": "Agent"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageSimpleResponses": {
            "description": "The collection of simple response candidates.\nThis message in `QueryResult.fulfillment_messages` and\n`WebhookResponse.fulfillment_messages` should contain only one\n`SimpleResponse`.",
            "id": "IntentMessageSimpleResponses",
            "properties": {
                "simpleResponses": {
                    "description": "Required. The list of simple responses.",
                    "items": {
                        "$ref": "IntentMessageSimpleResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchCreateEntitiesRequest": {
            "description": "The request message for EntityTypes.BatchCreateEntities.",
            "id": "BatchCreateEntitiesRequest",
            "properties": {
                "entities": {
                    "description": "Required. The collection of entities to create.",
                    "items": {
                        "$ref": "EntityTypeEntity"
                    },
                    "type": "array"
                },
                "languageCode": {
                    "description": "Optional. The language of entity synonyms defined in `entities`. If not\nspecified, the agent's default language is used.\n[More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DetectIntentRequest": {
            "description": "The request to detect user's intent.",
            "id": "DetectIntentRequest",
            "properties": {
                "queryInput": {
                    "$ref": "QueryInput",
                    "description": "Required. The input specification. It can be set to:\n\n1.  an audio config\n    which instructs the speech recognizer how to process the speech audio,\n\n2.  a conversational query in the form of text, or\n\n3.  an event that specifies which intent to trigger."
                },
                "queryParams": {
                    "$ref": "QueryParameters",
                    "description": "Optional. The parameters of this query."
                },
                "inputAudio": {
                    "description": "Optional. The natural language speech audio to be processed. This field\nshould be populated iff `query_input` is set to an input audio config.\nA single request can contain up to 1 minute of speech audio data.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TextInput": {
            "description": "Represents the natural language text to be processed.",
            "id": "TextInput",
            "properties": {
                "languageCode": {
                    "description": "Required. The language of this conversational query. See [Language\nSupport](https://dialogflow.com/docs/languages) for a list of the\ncurrently supported language codes. Note that queries in the same session\ndo not necessarily need to specify the same language.",
                    "type": "string"
                },
                "text": {
                    "description": "Required. The UTF-8 encoded natural language text to be processed.\nText length must not exceed 256 bytes.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageCardButton": {
            "description": "Optional. Contains information about a button.",
            "id": "IntentMessageCardButton",
            "properties": {
                "text": {
                    "description": "Optional. The text to show on the button.",
                    "type": "string"
                },
                "postback": {
                    "description": "Optional. The text to send back to the Dialogflow API or a URI to\nopen.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListEntityTypesResponse": {
            "description": "The response message for EntityTypes.ListEntityTypes.",
            "id": "ListEntityTypesResponse",
            "properties": {
                "entityTypes": {
                    "description": "The list of agent entity types. There will be a maximum number of items\nreturned based on the page_size field in the request.",
                    "items": {
                        "$ref": "EntityType"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QueryResult": {
            "description": "Represents the result of conversational query or event processing.",
            "id": "QueryResult",
            "properties": {
                "diagnosticInfo": {
                    "additionalProperties": {
                        "description": "Properties of the object.",
                        "type": "any"
                    },
                    "description": "The free-form diagnostic info. For example, this field\ncould contain webhook call latency.",
                    "type": "object"
                },
                "intent": {
                    "$ref": "Intent",
                    "description": "The intent that matched the conversational query. Some, not\nall fields are filled in this message, including but not limited to:\n`name`, `display_name` and `webhook_state`."
                },
                "languageCode": {
                    "description": "The language that was triggered during intent detection.\nSee [Language Support](https://dialogflow.com/docs/reference/language)\nfor a list of the currently supported language codes.",
                    "type": "string"
                },
                "outputContexts": {
                    "description": "The collection of output contexts. If applicable,\n`output_contexts.parameters` contains entries with name\n`<parameter name>.original` containing the original parameter values\nbefore the query.",
                    "items": {
                        "$ref": "Context"
                    },
                    "type": "array"
                },
                "webhookPayload": {
                    "additionalProperties": {
                        "description": "Properties of the object.",
                        "type": "any"
                    },
                    "description": "If the query was fulfilled by a webhook call, this field is set to the\nvalue of the `payload` field returned in the webhook response.",
                    "type": "object"
                },
                "fulfillmentMessages": {
                    "description": "The collection of rich messages to present to the user.",
                    "items": {
                        "$ref": "IntentMessage"
                    },
                    "type": "array"
                },
                "action": {
                    "description": "The action name from the matched intent.",
                    "type": "string"
                },
                "webhookSource": {
                    "description": "If the query was fulfilled by a webhook call, this field is set to the\nvalue of the `source` field returned in the webhook response.",
                    "type": "string"
                },
                "fulfillmentText": {
                    "description": "The text to be pronounced to the user or shown on the screen.",
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "description": "Properties of the object.",
                        "type": "any"
                    },
                    "description": "The collection of extracted parameters.",
                    "type": "object"
                },
                "intentDetectionConfidence": {
                    "description": "The intent detection confidence. Values range from 0.0\n(completely uncertain) to 1.0 (completely certain).",
                    "format": "float",
                    "type": "number"
                },
                "allRequiredParamsPresent": {
                    "description": "This field is set to:\n- `false` if the matched intent has required parameters and not all of\n   the required parameter values have been collected.\n- `true` if all required parameter values have been collected, or if the\n   matched intent doesn't contain any required parameters.",
                    "type": "boolean"
                },
                "speechRecognitionConfidence": {
                    "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number\nindicates an estimated greater likelihood that the recognized words are\ncorrect. The default of 0.0 is a sentinel value indicating that confidence\nwas not set.\n\nYou should not rely on this field as it isn't guaranteed to be accurate, or\neven set. In particular this field isn't set in Webhook calls and for\nStreamingDetectIntent since the streaming endpoint has separate confidence\nestimates per portion of the audio in StreamingRecognitionResult.",
                    "format": "float",
                    "type": "number"
                },
                "queryText": {
                    "description": "The original conversational query text:\n- If natural language text was provided as input, `query_text` contains\n  a copy of the input.\n- If natural language speech audio was provided as input, `query_text`\n  contains the speech recognition result. If speech recognizer produced\n  multiple alternatives, a particular one is picked.\n- If an event was provided as input, `query_text` is not set.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchDeleteEntityTypesRequest": {
            "description": "The request message for EntityTypes.BatchDeleteEntityTypes.",
            "id": "BatchDeleteEntityTypesRequest",
            "properties": {
                "entityTypeNames": {
                    "description": "Required. The names entity types to delete. All names must point to the\nsame agent as `parent`.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchUpdateEntityTypesResponse": {
            "description": "The response message for EntityTypes.BatchUpdateEntityTypes.",
            "id": "BatchUpdateEntityTypesResponse",
            "properties": {
                "entityTypes": {
                    "description": "The collection of updated or created entity types.",
                    "items": {
                        "$ref": "EntityType"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IntentMessageCard": {
            "description": "The card response message.",
            "id": "IntentMessageCard",
            "properties": {
                "title": {
                    "description": "Optional. The title of the card.",
                    "type": "string"
                },
                "buttons": {
                    "description": "Optional. The collection of card buttons.",
                    "items": {
                        "$ref": "IntentMessageCardButton"
                    },
                    "type": "array"
                },
                "subtitle": {
                    "description": "Optional. The subtitle of the card.",
                    "type": "string"
                },
                "imageUri": {
                    "description": "Optional. The public URI to an image file for the card.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QueryParameters": {
            "description": "Represents the parameters of the conversational query.",
            "id": "QueryParameters",
            "properties": {
                "payload": {
                    "additionalProperties": {
                        "description": "Properties of the object.",
                        "type": "any"
                    },
                    "description": "Optional. This field can be used to pass custom data into the webhook\nassociated with the agent. Arbitrary JSON objects are supported.",
                    "type": "object"
                },
                "geoLocation": {
                    "$ref": "LatLng",
                    "description": "Optional. The geo location of this conversational query."
                },
                "resetContexts": {
                    "description": "Optional. Specifies whether to delete all contexts in the current session\nbefore the new ones are activated.",
                    "type": "boolean"
                },
                "contexts": {
                    "description": "Optional. The collection of contexts to be activated before this query is\nexecuted.",
                    "items": {
                        "$ref": "Context"
                    },
                    "type": "array"
                },
                "timeZone": {
                    "description": "Optional. The time zone of this conversational query from the\n[time zone database](https://www.iana.org/time-zones), e.g.,\nAmerica/New_York, Europe/Paris. If not provided, the time zone specified in\nagent settings is used.",
                    "type": "string"
                },
                "sessionEntityTypes": {
                    "description": "Optional. The collection of session entity types to replace or extend\ndeveloper entities with for this query only. The entity synonyms apply\nto all languages.",
                    "items": {
                        "$ref": "SessionEntityType"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Intent": {
            "description": "Represents an intent.\nIntents convert a number of user expressions or patterns into an action. An\naction is an extraction of a user command or sentence semantics.",
            "id": "Intent",
            "properties": {
                "displayName": {
                    "description": "Required. The name of this intent.",
                    "type": "string"
                },
                "rootFollowupIntentName": {
                    "description": "The unique identifier of the root intent in the chain of followup intents.\nIt identifies the correct followup intents chain for this intent.\nFormat: `projects/<Project ID>/agent/intents/<Intent ID>`.",
                    "type": "string"
                },
                "isFallback": {
                    "description": "Optional. Indicates whether this is a fallback intent.",
                    "type": "boolean"
                },
                "mlEnabled": {
                    "description": "Optional. Indicates whether Machine Learning is enabled for the intent.\nNote: If `ml_enabled` setting is set to false, then this intent is not\ntaken into account during inference in `ML ONLY` match mode. Also,\nauto-markup in the UI is turned off.",
                    "type": "boolean"
                },
                "parameters": {
                    "description": "Optional. The collection of parameters associated with the intent.",
                    "items": {
                        "$ref": "IntentParameter"
                    },
                    "type": "array"
                },
                "resetContexts": {
                    "description": "Optional. Indicates whether to delete all contexts in the current\nsession when this intent is matched.",
                    "type": "boolean"
                },
                "trainingPhrases": {
                    "description": "Optional. The collection of examples/templates that the agent is\ntrained on.",
                    "items": {
                        "$ref": "IntentTrainingPhrase"
                    },
                    "type": "array"
                },
                "parentFollowupIntentName": {
                    "description": "The unique identifier of the parent intent in the chain of followup\nintents.\nIt identifies the parent followup intent.\nFormat: `projects/<Project ID>/agent/intents/<Intent ID>`.",
                    "type": "string"
                },
                "events": {
                    "description": "Optional. The collection of event names that trigger the intent.\nIf the collection of input contexts is not empty, all of the contexts must\nbe present in the active user session for an event to trigger this intent.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "priority": {
                    "description": "Optional. The priority of this intent. Higher numbers represent higher\npriorities. Zero or negative numbers mean that the intent is disabled.",
                    "format": "int32",
                    "type": "integer"
                },
                "outputContexts": {
                    "description": "Optional. The collection of contexts that are activated when the intent\nis matched. Context messages in this collection should not set the\nparameters field. Setting the `lifespan_count` to 0 will reset the context\nwhen the intent is matched.\nFormat: `projects/<Project ID>/agent/sessions/-/contexts/<Context ID>`.",
                    "items": {
                        "$ref": "Context"
                    },
                    "type": "array"
                },
                "defaultResponsePlatforms": {
                    "description": "Optional. The list of platforms for which the first response will be\ntaken from among the messages assigned to the DEFAULT_PLATFORM.",
                    "enumDescriptions": [
                        "Not specified.",
                        "Facebook.",
                        "Slack.",
                        "Telegram.",
                        "Kik.",
                        "Skype.",
                        "Line.",
                        "Viber.",
                        "Actions on Google."
                    ],
                    "items": {
                        "enum": [
                            "PLATFORM_UNSPECIFIED",
                            "FACEBOOK",
                            "SLACK",
                            "TELEGRAM",
                            "KIK",
                            "SKYPE",
                            "LINE",
                            "VIBER",
                            "ACTIONS_ON_GOOGLE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "action": {
                    "description": "Optional. The name of the action associated with the intent.",
                    "type": "string"
                },
                "name": {
                    "description": "Required for all methods except `create` (`create` populates the name\nautomatically.\nThe unique identifier of this intent.\nFormat: `projects/<Project ID>/agent/intents/<Intent ID>`.",
                    "type": "string"
                },
                "messages": {
                    "description": "Optional. The collection of rich messages corresponding to the\n`Response` field in API.AI console.",
                    "items": {
                        "$ref": "IntentMessage"
                    },
                    "type": "array"
                },
                "inputContextNames": {
                    "description": "Optional. The list of context names required for this intent to be\ntriggered.\nFormat: `projects/<Project ID>/agent/sessions/-/contexts/<Context ID>`.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "webhookState": {
                    "description": "Required. Indicates whether webhooks are enabled for the intent.",
                    "enum": [
                        "WEBHOOK_STATE_UNSPECIFIED",
                        "WEBHOOK_STATE_ENABLED",
                        "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
                    ],
                    "enumDescriptions": [
                        "Webhook is disabled in the agent and in the intent.",
                        "Webhook is enabled in the agent and in the intent.",
                        "Webhook is enabled in the agent and in the intent. Also, each slot\nfilling prompt is forwarded to the webhook."
                    ],
                    "type": "string"
                },
                "followupIntentInfo": {
                    "description": "Optional. Collection of information about all followup intents that have\nname of this intent as a root_name.",
                    "items": {
                        "$ref": "IntentFollowupIntentInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchUpdateEntityTypesRequest": {
            "description": "The request message for EntityTypes.BatchUpdateEntityTypes.",
            "id": "BatchUpdateEntityTypesRequest",
            "properties": {
                "entityTypeBatchUri": {
                    "description": "Warning: Importing entity types from a URI is not implemented yet.\nThis feature is coming soon.\nThe URI to a Google Cloud Storage file containing entity types to update\nor create. The file format can either be a serialized proto (of\nEntityBatch type) or a JSON object. Note: The URI must start with\n\"gs://\".",
                    "type": "string"
                },
                "entityTypeBatchInline": {
                    "$ref": "EntityTypeBatch",
                    "description": "The collection of entity type to update or create."
                },
                "languageCode": {
                    "description": "Optional. The language of entity synonyms defined in `entity_types`. If not\nspecified, the agent's default language is used.\n[More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                    "type": "string"
                },
                "updateMask": {
                    "description": "Optional. The mask to control which fields get updated.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentTrainingPhrasePart": {
            "description": "Represents a part of a training phrase.",
            "id": "IntentTrainingPhrasePart",
            "properties": {
                "entityType": {
                    "description": "Optional. The entity type name prefixed with `@`. This field is\nrequired for the annotated part of the text and applies only to\nexamples.",
                    "type": "string"
                },
                "alias": {
                    "description": "Optional. The parameter name for the value extracted from the\nannotated part of the example.",
                    "type": "string"
                },
                "userDefined": {
                    "description": "Optional. Indicates whether the text was manually annotated by the\ndeveloper.",
                    "type": "boolean"
                },
                "text": {
                    "description": "Required. The text corresponding to the example or template,\nif there are no annotations. For\nannotated examples, it is the text for one of the example's parts.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentBatch": {
            "description": "This message is a wrapper around a collection of intents.",
            "id": "IntentBatch",
            "properties": {
                "intents": {
                    "description": "A collection of intents.",
                    "items": {
                        "$ref": "Intent"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchDeleteEntitiesRequest": {
            "description": "The request message for EntityTypes.BatchDeleteEntities.",
            "id": "BatchDeleteEntitiesRequest",
            "properties": {
                "entityValues": {
                    "description": "Required. The canonical `values` of the entities to delete. Note that\nthese are not fully-qualified names, i.e. they don't start with\n`projects/<Project ID>`.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "languageCode": {
                    "description": "Optional. The language of entity synonyms defined in `entities`. If not\nspecified, the agent's default language is used.\n[More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageListSelect": {
            "description": "The card for presenting a list of options to select from.",
            "id": "IntentMessageListSelect",
            "properties": {
                "title": {
                    "description": "Optional. The overall title of the list.",
                    "type": "string"
                },
                "items": {
                    "description": "Required. List items.",
                    "items": {
                        "$ref": "IntentMessageListSelectItem"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IntentMessageSuggestion": {
            "description": "The suggestion chip message that the user can tap to quickly post a reply\nto the conversation.",
            "id": "IntentMessageSuggestion",
            "properties": {
                "title": {
                    "description": "Required. The text shown the in the suggestion chip.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageCarouselSelectItem": {
            "description": "An item in the carousel.",
            "id": "IntentMessageCarouselSelectItem",
            "properties": {
                "title": {
                    "description": "Required. Title of the carousel item.",
                    "type": "string"
                },
                "image": {
                    "$ref": "IntentMessageImage",
                    "description": "Optional. The image to display."
                },
                "description": {
                    "description": "Optional. The body text of the card.",
                    "type": "string"
                },
                "info": {
                    "$ref": "IntentMessageSelectItemInfo",
                    "description": "Required. Additional info about the option item."
                }
            },
            "type": "object"
        },
        "IntentMessageQuickReplies": {
            "description": "The quick replies response message.",
            "id": "IntentMessageQuickReplies",
            "properties": {
                "quickReplies": {
                    "description": "Optional. The collection of quick replies.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "title": {
                    "description": "Optional. The title of the collection of quick replies.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WebhookRequest": {
            "description": "The request message for a webhook call.",
            "id": "WebhookRequest",
            "properties": {
                "session": {
                    "description": "The unique identifier of detectIntent request session.\nCan be used to identify end-user inside webhook implementation.\nFormat: `projects/<Project ID>/agent/sessions/<Session ID>`.",
                    "type": "string"
                },
                "queryResult": {
                    "$ref": "QueryResult",
                    "description": "The result of the conversational query or event processing. Contains the\nsame value as `[Streaming]DetectIntentResponse.query_result`."
                },
                "originalDetectIntentRequest": {
                    "$ref": "OriginalDetectIntentRequest",
                    "description": "Optional. The contents of the original request that was passed to\n`[Streaming]DetectIntent` call."
                },
                "responseId": {
                    "description": "The unique identifier of the response. Contains the same value as\n`[Streaming]DetectIntentResponse.response_id`.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RestoreAgentRequest": {
            "description": "The request message for Agents.RestoreAgent.",
            "id": "RestoreAgentRequest",
            "properties": {
                "agentContent": {
                    "description": "The agent to restore.\n\nExample for how to restore an agent via the command line:\n\ncurl \\\n  'https://dialogflow.googleapis.com/v2beta1/projects/<project_name>/agent:restore\\\n   -X POST \\\n   -H 'Authorization: Bearer '$(gcloud auth print-access-token) \\\n   -H 'Accept: application/json' \\\n   -H 'Content-Type: application/json' \\\n   --compressed \\\n   --data-binary \"{\n       'agentContent': '$(cat <agent zip file> | base64 -w 0)'\n   }\" \\",
                    "format": "byte",
                    "type": "string"
                },
                "agentUri": {
                    "description": "Warning: Restoring agents from a URI is not implemented yet.\nThis feature is coming soon.\n\nThe URI to a Google Cloud Storage file containing the agent to restore.\nNote: The URI must start with \"gs://\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentTrainingPhrase": {
            "description": "Represents an example or template that the agent is trained on.",
            "id": "IntentTrainingPhrase",
            "properties": {
                "name": {
                    "description": "Required. The unique identifier of this training phrase.",
                    "type": "string"
                },
                "timesAddedCount": {
                    "description": "Optional. Indicates how many times this example or template was added to\nthe intent. Each time a developer adds an existing sample by editing an\nintent or training, this counter is increased.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "Required. The type of the training phrase.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "EXAMPLE",
                        "TEMPLATE"
                    ],
                    "enumDescriptions": [
                        "Not specified. This value should never be used.",
                        "Examples do not contain @-prefixed entity type names, but example parts\ncan be annotated with entity types.",
                        "Templates are not annotated with entity types, but they can contain\n@-prefixed entity type names as substrings."
                    ],
                    "type": "string"
                },
                "parts": {
                    "description": "Required. The collection of training phrase parts (can be annotated).\nFields: `entity_type`, `alias` and `user_defined` should be populated\nonly for the annotated parts of the training phrase.",
                    "items": {
                        "$ref": "IntentTrainingPhrasePart"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListIntentsResponse": {
            "description": "The response message for Intents.ListIntents.",
            "id": "ListIntentsResponse",
            "properties": {
                "intents": {
                    "description": "The list of agent intents. There will be a maximum number of items\nreturned based on the page_size field in the request.",
                    "items": {
                        "$ref": "Intent"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LatLng": {
            "description": "An object representing a latitude/longitude pair. This is expressed as a pair\nof doubles representing degrees latitude and degrees longitude. Unless\nspecified otherwise, this must conform to the\n<a href=\"http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf\">WGS84\nstandard</a>. Values must be within normalized ranges.",
            "id": "LatLng",
            "properties": {
                "longitude": {
                    "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
                    "format": "double",
                    "type": "number"
                },
                "latitude": {
                    "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Context": {
            "description": "Represents a context.",
            "id": "Context",
            "properties": {
                "name": {
                    "description": "Required. The unique identifier of the context. Format:\n`projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>`.\nNote: The Context ID is always converted to lowercase.",
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "description": "Properties of the object.",
                        "type": "any"
                    },
                    "description": "Optional. The collection of parameters associated with this context.\nRefer to [this doc](https://dialogflow.com/docs/actions-and-parameters) for\nsyntax.",
                    "type": "object"
                },
                "lifespanCount": {
                    "description": "Optional. The number of conversational query requests after which the\ncontext expires. If set to `0` (the default) the context expires\nimmediately. Contexts expire automatically after 10 minutes even if there\nare no matching queries.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ImportAgentRequest": {
            "description": "The request message for Agents.ImportAgent.",
            "id": "ImportAgentRequest",
            "properties": {
                "agentContent": {
                    "description": "The agent to import.\n\nExample for how to import an agent via the command line:\n\ncurl \\\n  'https://dialogflow.googleapis.com/v2beta1/projects/<project_name>/agent:import\\\n   -X POST \\\n   -H 'Authorization: Bearer '$(gcloud auth print-access-token) \\\n   -H 'Accept: application/json' \\\n   -H 'Content-Type: application/json' \\\n   --compressed \\\n   --data-binary \"{\n      'agentContent': '$(cat <agent zip file> | base64 -w 0)'\n   }\"",
                    "format": "byte",
                    "type": "string"
                },
                "agentUri": {
                    "description": "Warning: Importing agents from a URI is not implemented yet.\nThis feature is coming soon.\n\nThe URI to a Google Cloud Storage file containing the agent to import.\nNote: The URI must start with \"gs://\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchUpdateIntentsResponse": {
            "description": "The response message for Intents.BatchUpdateIntents.",
            "id": "BatchUpdateIntentsResponse",
            "properties": {
                "intents": {
                    "description": "The collection of updated or created intents.",
                    "items": {
                        "$ref": "Intent"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IntentParameter": {
            "description": "Represents intent parameters.",
            "id": "IntentParameter",
            "properties": {
                "displayName": {
                    "description": "Required. The name of the parameter.",
                    "type": "string"
                },
                "entityTypeDisplayName": {
                    "description": "Optional. The name of the entity type, prefixed with `@`, that\ndescribes values of the parameter. If the parameter is\nrequired, this must be provided.",
                    "type": "string"
                },
                "prompts": {
                    "description": "Optional. The collection of prompts that the agent can present to the\nuser in order to collect value for the parameter.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "mandatory": {
                    "description": "Optional. Indicates whether the parameter is required. That is,\nwhether the intent cannot be completed without collecting the parameter\nvalue.",
                    "type": "boolean"
                },
                "defaultValue": {
                    "description": "Optional. The default value to use when the `value` yields an empty\nresult.\nDefault values can be extracted from contexts by using the following\nsyntax: `#context_name.parameter_name`.",
                    "type": "string"
                },
                "name": {
                    "description": "The unique identifier of this parameter.",
                    "type": "string"
                },
                "isList": {
                    "description": "Optional. Indicates whether the parameter represents a list of values.",
                    "type": "boolean"
                },
                "value": {
                    "description": "Optional. The definition of the parameter value. It can be:\n- a constant string,\n- a parameter value defined as `$parameter_name`,\n- an original parameter value defined as `$parameter_name.original`,\n- a parameter value from some context defined as\n  `#context_name.parameter_name`.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportAgentResponse": {
            "description": "The response message for Agents.ExportAgent.",
            "id": "ExportAgentResponse",
            "properties": {
                "agentContent": {
                    "description": "The exported agent.\n\nExample for how to export an agent to a zip file via a command line:\n\ncurl \\\n  'https://dialogflow.googleapis.com/v2beta1/projects/<project_name>/agent:export'\\\n  -X POST \\\n  -H 'Authorization: Bearer '$(gcloud auth print-access-token) \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  --compressed \\\n  --data-binary '{}' \\\n| grep agentContent | sed -e 's/.*\"agentContent\": \"\\([^\"]*\\)\".*/\\1/' \\\n| base64 --decode > <agent zip file>",
                    "format": "byte",
                    "type": "string"
                },
                "agentUri": {
                    "description": "The URI to a file containing the exported agent. This field is populated\nonly if `agent_uri` is specified in `ExportAgentRequest`.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageBasicCardButtonOpenUriAction": {
            "description": "Opens the given URI.",
            "id": "IntentMessageBasicCardButtonOpenUriAction",
            "properties": {
                "uri": {
                    "description": "Required. The HTTP or HTTPS scheme URI.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IntentMessageImage": {
            "description": "The image response message.",
            "id": "IntentMessageImage",
            "properties": {
                "imageUri": {
                    "description": "Optional. The public URI to an image file.",
                    "type": "string"
                },
                "accessibilityText": {
                    "description": "Optional. A text description of the image to be used for accessibility,\ne.g., screen readers.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchUpdateIntentsRequest": {
            "description": "The request message for Intents.BatchUpdateIntents.",
            "id": "BatchUpdateIntentsRequest",
            "properties": {
                "intentView": {
                    "description": "Optional. The resource view to apply to the returned intent.",
                    "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                    ],
                    "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                    ],
                    "type": "string"
                },
                "intentBatchInline": {
                    "$ref": "IntentBatch",
                    "description": "The collection of intents to update or create."
                },
                "languageCode": {
                    "description": "Optional. The language of training phrases, parameters and rich messages\ndefined in `intents`. If not specified, the agent's default language is\nused. [More than a dozen\nlanguages](https://dialogflow.com/docs/reference/language) are supported.\nNote: languages must be enabled in the agent, before they can be used.",
                    "type": "string"
                },
                "updateMask": {
                    "description": "Optional. The mask to control which fields get updated.",
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "intentBatchUri": {
                    "description": "Warning: Importing intents from a URI is not implemented yet.\nThis feature is coming soon.\nThe URI to a Google Cloud Storage file containing intents to update or\ncreate. The file format can either be a serialized proto (of IntentBatch\ntype) or JSON object. Note: The URI must start with \"gs://\".",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Dialogflow API",
    "version": "v2beta1"
}